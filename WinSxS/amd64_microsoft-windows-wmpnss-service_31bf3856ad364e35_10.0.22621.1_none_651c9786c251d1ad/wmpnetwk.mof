#pragma autorecover
#pragma classflags("forceupdate")
#pragma namespace("\\\\.\\root\\WMI")

Qualifier Description : ToSubClass Amended;
Qualifier Values : ToSubClass Amended;
Qualifier ValueDescriptions : ToSubClass Amended;

//
// WPP Generated File
//

[Dynamic,
 Description("WMP Network Sharing Service"),
 guid("{a7eb57f6-145e-4f18-bd75-dbbf6f7e23a7}"),
 locale("MS\\0x409")]
class WMPNetwkGuid : EventTrace
{
    [Description ("Enable Flags"),
        ValueDescriptions{
             "EntryExit Flag",
             "Service Flag",
             "Security Flag",
             "QueryParser Flag",
             "Search Flag",
             "HttpServer Flag"},
        DefineValues{
             "EntryExit",
             "Service",
             "Security",
             "QueryParser",
             "Search",
             "HttpServer"},
        Values{
             "EntryExit",
             "Service",
             "Security",
             "QueryParser",
             "Search",
             "HttpServer"},
        ValueMap{
             "0x00000001",
             "0x00000002",
             "0x00000004",
             "0x00000008",
             "0x00000010",
             "0x00000020"}
    ]
    uint32 Flags;
    [Description ("Levels"),
        ValueDescriptions{
            "Abnormal exit or termination",
            "Severe errors that need logging",
            "Warnings such as allocation failure",
            "Includes non-error cases",
            "Detailed traces from intermediate steps" },
         DefineValues{
            "TRACE_LEVEL_FATAL",
            "TRACE_LEVEL_ERROR",
            "TRACE_LEVEL_WARNING"
            "TRACE_LEVEL_INFORMATION",
            "TRACE_LEVEL_VERBOSE" },
        Values{
            "Fatal",
            "Error",
            "Warning",
            "Information",
            "Verbose" },
        ValueMap{
            "0x1",
            "0x2",
            "0x3",
            "0x4",
            "0x5" },
        ValueType("index")
    ]
    uint32 Level;
};

[Dynamic,
 Description("WMP Network Sharing Taskbar"),
 guid("{d804a67f-4c25-43c1-896f-89ff78b3a911}"),
 locale("MS\\0x409")]
class WMPNsCfgGuid : EventTrace
{
    [Description ("Enable Flags"),
        ValueDescriptions{
             "EntryExit Flag",
             "Ux Flag"},
        DefineValues{
             "EntryExit",
             "Ux"},
        Values{
             "EntryExit",
             "Ux"},
        ValueMap{
             "0x00000001",
             "0x00000002"}
    ]
    uint32 Flags;
    [Description ("Levels"),
        ValueDescriptions{
            "Abnormal exit or termination",
            "Severe errors that need logging",
            "Warnings such as allocation failure",
            "Includes non-error cases",
            "Detailed traces from intermediate steps" },
         DefineValues{
            "TRACE_LEVEL_FATAL",
            "TRACE_LEVEL_ERROR",
            "TRACE_LEVEL_WARNING"
            "TRACE_LEVEL_INFORMATION",
            "TRACE_LEVEL_VERBOSE" },
        Values{
            "Fatal",
            "Error",
            "Warning",
            "Information",
            "Verbose" },
        ValueMap{
            "0x1",
            "0x2",
            "0x3",
            "0x4",
            "0x5" },
        ValueType("index")
    ]
    uint32 Level;
};

[Dynamic,
 Description("WMP Network Sharing API"),
 guid("{8ed60a3a-8c12-49c5-a518-fdf451bc10fc}"),
 locale("MS\\0x409")]
class WMPNsSciGuid : EventTrace
{
    [Description ("Enable Flags"),
        ValueDescriptions{
             "EntryExit Flag",
             "API Flag"},
        DefineValues{
             "EntryExit",
             "API"},
        Values{
             "EntryExit",
             "API"},
        ValueMap{
             "0x00000001",
             "0x00000002"}
    ]
    uint32 Flags;
    [Description ("Levels"),
        ValueDescriptions{
            "Abnormal exit or termination",
            "Severe errors that need logging",
            "Warnings such as allocation failure",
            "Includes non-error cases",
            "Detailed traces from intermediate steps" },
         DefineValues{
            "TRACE_LEVEL_FATAL",
            "TRACE_LEVEL_ERROR",
            "TRACE_LEVEL_WARNING"
            "TRACE_LEVEL_INFORMATION",
            "TRACE_LEVEL_VERBOSE" },
        Values{
            "Fatal",
            "Error",
            "Warning",
            "Information",
            "Verbose" },
        ValueMap{
            "0x1",
            "0x2",
            "0x3",
            "0x4",
            "0x5" },
        ValueType("index")
    ]
    uint32 Level;
};
