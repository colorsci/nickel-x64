var USB4View=USB4View?USB4View:{};USB4View.Tunnel=(class{constructor(n){Object.assign(this,n)}get id(){return this.tunnelHandle}associatedDeviceRouters(){let t=this.paths.find(n=>!n.isIncoming),n=new Set;return t.segments.forEach(t=>{n.add(USB4View.generateDeviceRouterId({domainId:this.domainId,topologyId:t.topologyId}))}),[...n]}isFirstAssociatedDeviceRouter(n){return this.associatedDeviceRouters()[0]==n.id}tunnelProtocol(){let t=this.paths[0],n=t.segments.find(n=>n.startAdapter.kind!=USB4View.Lane||n.endAdapter.kind!=USB4View.Lane);return n.startAdapter.kind!=USB4View.Lane?n.startAdapter.kind:n.endAdapter.kind}firstAdapter(){let n=this.paths.find(n=>!n.isIncoming).segments[0];return n.startAdapter.adapterNumber}lastAdapter(){let n=this.paths.find(n=>n.isIncoming),t=n.segments[0];return t.startAdapter.adapterNumber}getSegmentInDeviceRouter(n){return this.paths[0].segments.find(t=>n.id==USB4View.generateDeviceRouterId({domainId:this.domainId,topologyId:t.topologyId}))}})