#pragma classflags("forceupdate")
#pragma namespace("\\\\.\\root\\WMI")
//
// WPP Generated File
// PDB:  c:\lh\vbl.obj.x86chk\admin\wmi\wmx\automation\objchk\i386\WsmAuto.pdb
// PDB:  Last Updated :2006-3-6:16:29:10:865 (UTC) [binplace]
//

[abstract,Locale(1033), Description("This is ETW schema root class")] 
class EventTrace
{
};

//ModuleName = WinRM	 (Init called in Function WPP_CONTROL_ANNOTATION)
[Dynamic,
 Description("Windows Remote Management Trace"),
 guid("{04c6e16d-b99f-4a3a-9b3e-b8325bbc781e}"),
 locale("MS\\0x409")]
class WinRM : EventTrace
{
    [Description ("Enable Flags"),
        ValueDescriptions{
             "SOAPTraceClient Flag",
             "SOAPTraceListener Flag",
             "Reserved2 Flag",
             "Reserved3 Flag",
             "Reserved4 Flag",
             "Reserved5 Flag",
             "Performance Flag",
             "Assert Flag",
             "RemotingError Flag",
             "RemotingDebug Flag",
             "ClientError Flag",
             "ClientDebug Flag",
             "PSLError Flag",
             "PSLDebug Flag",
             "SubscriptionError Flag",
             "SubscriptionDebug Flag",
             "CatalogDebug Flag",
             "CatalogError Flag",
             "WSManWmiProvDebug Flag",
             "WSManWmiProvError Flag",
             "ConfigDebug Flag",
             "ConfigError Flag",
             "UtilError Flag",
             "UtilDebug Flag",
             "WSManAutoError Flag",
             "WSManAutoDebug Flag",
             "WSManAutoFlow Flag",
             "EventCount Flag",
             "SecurityDebug Flag",
             "Unittest Flag",
             "MemoryDebug Flag"},
        DefineValues{
             "SOAPTraceClient",
             "SOAPTraceListener",
             "Reserved2",
             "Reserved3",
             "Reserved4",
             "Reserved5",
             "Performance",
             "Assert",
             "RemotingError",
             "RemotingDebug",
             "ClientError",
             "ClientDebug",
             "PSLError",
             "PSLDebug",
             "SubscriptionError",
             "SubscriptionDebug",
             "CatalogDebug",
             "CatalogError",
             "WSManWmiProvDebug",
             "WSManWmiProvError",
             "ConfigDebug",
             "ConfigError",
             "UtilError",
             "UtilDebug",
             "WSManAutoError",
             "WSManAutoDebug",
             "WSManAutoFlow",
             "EventCount",
             "SecurityDebug",
             "Unittest",
             "MemoryDebug"},
        Values{
             "SOAPTraceClient",
             "SOAPTraceListener",
             "Reserved2",
             "Reserved3",
             "Reserved4",
             "Reserved5",
             "Performance",
             "Assert",
             "RemotingError",
             "RemotingDebug",
             "ClientError",
             "ClientDebug",
             "PSLError",
             "PSLDebug",
             "SubscriptionError",
             "SubscriptionDebug",
             "CatalogDebug",
             "CatalogError",
             "WSManWmiProvDebug",
             "WSManWmiProvError",
             "ConfigDebug",
             "ConfigError",
             "UtilError",
             "UtilDebug",
             "WSManAutoError",
             "WSManAutoDebug",
             "WSManAutoFlow",
             "EventCount",
             "SecurityDebug",
             "Unittest",
             "MemoryDebug"},
        ValueMap{
             "0x00000001",
             "0x00000002",
             "0x00000004",
             "0x00000008",
             "0x00000010",
             "0x00000020",
             "0x00000040",
             "0x00000080",
             "0x00000100",
             "0x00000200",
             "0x00000400",
             "0x00000800",
             "0x00001000",
             "0x00002000",
             "0x00004000",
             "0x00008000",
             "0x00010000",
             "0x00020000",
             "0x00040000",
             "0x00080000",
             "0x00100000",
             "0x00200000",
             "0x00400000",
             "0x00800000",
             "0x01000000",
             "0x02000000",
             "0x04000000",
             "0x08000000",
             "0x10000000",
             "0x20000000",
             "0x40000000"}
    ]
    uint32 Flags;
};
