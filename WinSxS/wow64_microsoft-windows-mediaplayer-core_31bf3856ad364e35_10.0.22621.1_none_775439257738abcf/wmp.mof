#pragma classflags("forceupdate")
#pragma namespace("\\\\.\\root\\WMI")
//
// WPP Generated File
// PDB:  h:\polaris.obj.x86fre\multimedia\dmd\crescent\wmp\dev\uberdll\dll\daytona\objfre\i386\wmp.pdb
// PDB:  Last Updated :2006-6-6:3:10:34:864 (UTC) [binplace]
//

//ModuleName = CtlGuidWMP	 (Init called in Function DllMain)
[Dynamic,
 Description("Windows Media Player Trace"),
 guid("{A9C1A3B7-54F3-4724-ADCE-58BC03E3BC78}"),
 locale("MS\\0x409")]
class CtlGuidWMP : EventTrace
{
    [Description ("Enable Flags"),
        ValueDescriptions{
             "_DH_DEFAULT Flag",
             "_DH_WMP_DPF Flag",
             "_DH_WMPGRAPH Flag",
             "_DH_WMPRENDER Flag",
             "_DH_PLUGINS Flag",
             "_DH_PLAYER_FULLSCREEN Flag",
             "_DH_WMPDMOWRAPPER Flag",
             "_DH_WMPCD_DPF Flag",
             "_DH_LAYOUTMAN_DOCKING Flag",
             "_DH_WMHTML Flag",
             "_DH_WMP_SYNC Flag",
             "_DH_WMP_DEVICE_CAPS Flag",
             "_DH_WMP_DRM Flag",
             "_DH_WMP_DEVICES Flag",
             "_DH_WMP_CDBURN Flag",
             "_DH_WMP_CACHE_PROVIDER Flag",
             "_DH_WMP_LIBRARY Flag",
             "_DH_WMP_SYNCMGR Flag",
             "_DH_WMP_SYNCWIZ Flag",
             "_DH_WMP_LISL Flag",
             "_DH_WMP_SYNC_STATUS Flag",
             "_DH_WMP_HME Flag",
             "_DH_WMP_MLS Flag",
             "_DH_WMP_FIRMWARE_UPDATE Flag",
             "_DH_WMP_SYNC_PERF Flag",
             "_DH_WMP_SQM Flag"},
        DefineValues{
             "_DH_DEFAULT",
             "_DH_WMP_DPF",
             "_DH_WMPGRAPH",
             "_DH_WMPRENDER",
             "_DH_PLUGINS",
             "_DH_PLAYER_FULLSCREEN",
             "_DH_WMPDMOWRAPPER",
             "_DH_WMPCD_DPF",
             "_DH_LAYOUTMAN_DOCKING",
             "_DH_WMHTML",
             "_DH_WMP_SYNC",
             "_DH_WMP_DEVICE_CAPS",
             "_DH_WMP_DRM",
             "_DH_WMP_DEVICES",
             "_DH_WMP_CDBURN",
             "_DH_WMP_CACHE_PROVIDER",
             "_DH_WMP_LIBRARY",
             "_DH_WMP_SYNCMGR",
             "_DH_WMP_SYNCWIZ",
             "_DH_WMP_LISL",
             "_DH_WMP_SYNC_STATUS",
             "_DH_WMP_HME",
             "_DH_WMP_MLS",
             "_DH_WMP_FIRMWARE_UPDATE",
             "_DH_WMP_SYNC_PERF",
             "_DH_WMP_SQM"},
        Values{
             "_DH_DEFAULT",
             "_DH_WMP_DPF",
             "_DH_WMPGRAPH",
             "_DH_WMPRENDER",
             "_DH_PLUGINS",
             "_DH_PLAYER_FULLSCREEN",
             "_DH_WMPDMOWRAPPER",
             "_DH_WMPCD_DPF",
             "_DH_LAYOUTMAN_DOCKING",
             "_DH_WMHTML",
             "_DH_WMP_SYNC",
             "_DH_WMP_DEVICE_CAPS",
             "_DH_WMP_DRM",
             "_DH_WMP_DEVICES",
             "_DH_WMP_CDBURN",
             "_DH_WMP_CACHE_PROVIDER",
             "_DH_WMP_LIBRARY",
             "_DH_WMP_SYNCMGR",
             "_DH_WMP_SYNCWIZ",
             "_DH_WMP_LISL",
             "_DH_WMP_SYNC_STATUS",
             "_DH_WMP_HME",
             "_DH_WMP_MLS",
             "_DH_WMP_FIRMWARE_UPDATE",
             "_DH_WMP_SYNC_PERF",
             "_DH_WMP_SQM"},
        ValueMap{
             "0x00000001",
             "0x00000002",
             "0x00000004",
             "0x00000008",
             "0x00000010",
             "0x00000020",
             "0x00000040",
             "0x00000080",
             "0x00000100",
             "0x00000200",
             "0x00000400",
             "0x00000800",
             "0x00001000",
             "0x00002000",
             "0x00004000",
             "0x00008000",
             "0x00010000",
             "0x00020000",
             "0x00040000",
             "0x00080000",
             "0x00100000",
             "0x00200000",
             "0x00400000",
             "0x00800000",
             "0x01000000",
             "0x02000000"}
    ]
    uint32 Flags;
    [Description ("Levels") ,
        ValueDescriptions{
            "Abnormal exit or termination",
            "Severe errors that need logging",
            "Warnings such as allocation failure",
            "Includes non-error cases",
            "Detailed traces from intermediate steps" } ,
         DefineValues{
            "TRACE_LEVEL_FATAL",
            "TRACE_LEVEL_ERROR",
            "TRACE_LEVEL_WARNING"
            "TRACE_LEVEL_INFORMATION",
            "TRACE_LEVEL_VERBOSE" },
        Values{
            "Fatal",
            "Error",
            "Warning",
            "Information",
            "Verbose" },
        ValueMap{
            "0x1",
            "0x2",
            "0x3",
            "0x4",
            "0x5" },
        ValueType("index")
    ]
    uint32 Level;
};

