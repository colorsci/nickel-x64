#pragma autorecover
#pragma classflags("forceupdate")
#pragma namespace("\\\\.\\root\\WMI")
//
// WPP Generated File
// PDB:  z:\wdkwdf.obj.x86chk\minkernel\wdf\framework\kmdf\src\dynamic\version\version\objchk\i386\Wdf01000.pdb
// PDB:  Last Updated :2008-10-17:21:36:45:381 (UTC) [tracepdb]
//

Qualifier Description : ToSubClass Amended;
Qualifier Values : ToSubClass Amended;
Qualifier DisplayName : Amended;
Qualifier BitValues:ToSubClass Amended;
Qualifier Units : ToSubClass Amended;

//ModuleName = KmdfTraceGuid	 (Init called in Function WPP_CONTROL_ANNOTATIONd-7a3a-178167d33910     core // SRC=tracing.cpp MJ= MN=)
[Dynamic,
 Description("KMDFv1 Trace Provider"),
 guid("{544d4c9d-942c-46d5-bf50-df5cd9524a50}"),
 locale("MS\\0x409")]
class KmdfTraceGuid : EventTrace
{
    [Description ("Enable Flags") : amended,
        ValueDescriptions{
             "TRACINGFULL Flag",
             "TRACINGERROR Flag",
             "TRACINGDBGPRINT Flag",
             "TRACINGFRAMEWORKS Flag",
             "TRACINGAPI Flag",
             "TRACINGAPIERROR Flag",
             "TRACINGRESOURCES Flag",
             "TRACINGLOCKING Flag",
             "TRACINGCONTEXT Flag",
             "TRACINGPOOL Flag",
             "TRACINGHANDLE Flag",
             "TRACINGPNP Flag",
             "TRACINGIO Flag",
             "TRACINGIOTARGET Flag",
             "TRACINGDMA Flag",
             "TRACINGREQUEST Flag",
             "TRACINGDRIVER Flag",
             "TRACINGDEVICE Flag",
             "TRACINGUSEROBJECT Flag",
             "TRACINGOBJECT Flag",
             "TRACINGPNPPOWERSTATES Flag"},
        DefineValues{
             "TRACINGFULL",
             "TRACINGERROR",
             "TRACINGDBGPRINT",
             "TRACINGFRAMEWORKS",
             "TRACINGAPI",
             "TRACINGAPIERROR",
             "TRACINGRESOURCES",
             "TRACINGLOCKING",
             "TRACINGCONTEXT",
             "TRACINGPOOL",
             "TRACINGHANDLE",
             "TRACINGPNP",
             "TRACINGIO",
             "TRACINGIOTARGET",
             "TRACINGDMA",
             "TRACINGREQUEST",
             "TRACINGDRIVER",
             "TRACINGDEVICE",
             "TRACINGUSEROBJECT",
             "TRACINGOBJECT",
             "TRACINGPNPPOWERSTATES"},
        Values{
             "TRACINGFULL",
             "TRACINGERROR",
             "TRACINGDBGPRINT",
             "TRACINGFRAMEWORKS",
             "TRACINGAPI",
             "TRACINGAPIERROR",
             "TRACINGRESOURCES",
             "TRACINGLOCKING",
             "TRACINGCONTEXT",
             "TRACINGPOOL",
             "TRACINGHANDLE",
             "TRACINGPNP",
             "TRACINGIO",
             "TRACINGIOTARGET",
             "TRACINGDMA",
             "TRACINGREQUEST",
             "TRACINGDRIVER",
             "TRACINGDEVICE",
             "TRACINGUSEROBJECT",
             "TRACINGOBJECT",
             "TRACINGPNPPOWERSTATES"},
        ValueMap{
             "0x00000001",
             "0x00000002",
             "0x00000004",
             "0x00000008",
             "0x00000010",
             "0x00000020",
             "0x00000040",
             "0x00000080",
             "0x00000100",
             "0x00000200",
             "0x00000400",
             "0x00000800",
             "0x00001000",
             "0x00002000",
             "0x00004000",
             "0x00008000",
             "0x00010000",
             "0x00020000",
             "0x00040000",
             "0x00080000",
             "0x00100000"}: amended
    ]
    uint32 Flags;
    [Description ("Levels") : amended,
        ValueDescriptions{
            "Abnormal exit or termination",
            "Severe errors that need logging",
            "Warnings such as allocation failure",
            "Includes non-error cases",
            "Detailed traces from intermediate steps" } : amended,
         DefineValues{
            "TRACE_LEVEL_FATAL",
            "TRACE_LEVEL_ERROR",
            "TRACE_LEVEL_WARNING"
            "TRACE_LEVEL_INFORMATION",
            "TRACE_LEVEL_VERBOSE" },
        Values{
            "Fatal",
            "Error",
            "Warning",
            "Information",
            "Verbose" },
        ValueMap{
            "0x1",
            "0x2",
            "0x3",
            "0x4",
            "0x5" },
        ValueType("index")
    ]
    uint32 Level;
};
