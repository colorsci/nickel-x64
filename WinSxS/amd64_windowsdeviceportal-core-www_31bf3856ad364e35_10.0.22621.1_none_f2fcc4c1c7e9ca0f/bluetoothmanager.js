function AvailableRadioDataUpdater(){var n=this;n.dataAvailable=$.Callbacks();n.errorGettingData=$.Callbacks();n.connectionClosed=$.Callbacks();this.start=function(){var t=document.location.protocol==="https:"?"wss://":"ws://",i=t+window.location.host+"/api/bt/getradios";this.socket=new WebSocket(i);this.socket.onmessage=function(t){var i=JSON.parse(t.data),r=0;for(radioIndex in i.BluetoothRadios)i.BluetoothRadios[radioIndex].idIndex=r,r++;n.dataAvailable.fire(i.BluetoothRadios)};this.socket.onerror=function(){n.errorGettingData.fire()};this.socket.onclose=function(){n.connectionClosed.fire()}};this.stop=function(){this.socket.close()}}function AvailableDevicesDataUpdater(){var n=this;n.dataAvailable=$.Callbacks();n.errorGettingData=$.Callbacks();n.connectionClosed=$.Callbacks();this.start=function(){var t=document.location.protocol==="https:"?"wss://":"ws://",i=t+window.location.host+"/api/bt/getavailable";this.socket=new WebSocket(i);this.socket.onmessage=function(t){var i=JSON.parse(t.data);n.dataAvailable.fire(i.AvailableDevices)};this.socket.onerror=function(){n.errorGettingData.fire()};this.socket.onclose=function(){n.connectionClosed.fire()}};this.stop=function(){this.socket.close()}}function PairedDevicesDataUpdater(){var n=this;n.dataAvailable=$.Callbacks();n.errorGettingData=$.Callbacks();n.connectionClosed=$.Callbacks();this.start=function(){var t=document.location.protocol==="https:"?"wss://":"ws://",i=t+window.location.host+"/api/bt/getpaired";this.socket=new WebSocket(i);this.socket.onmessage=function(t){var i=JSON.parse(t.data);n.dataAvailable.fire(i.PairedDevices)};this.socket.onerror=function(){n.errorGettingData.fire()};this.socket.onclose=function(){n.connectionClosed.fire()}};this.stop=function(){this.socket.close()}}function BluetoothPair(n){var t=this;t.errorGettingData=$.Callbacks();t.connectionClosed=$.Callbacks();t.start=function(){var i=document.location.protocol==="https:"?"wss://":"ws://",r={deviceId:window.btoa(n)},u=i+window.location.host+"/api/bt/pair?"+$.param(r);t.socket=new WebSocket(u);this.socket.onmessage=function(n){var r=JSON.parse(n.data),u,i;r.PairResult.Result=="Failed"?window.alert("Connection was not approved. The Pin entered may not have been correct."):r.PairResult.Result=="DisplayPin"?window.alert("To complete pairing, enter this pin on the device: "+r.PairResult.Pin):r.PairResult.Result=="PinRequired"?(u=prompt("Enter your PIN to connect",""),u!=null?(i={},i.Pin=u,t.socket.send(JSON.stringify(i)),window.alert("Please check your device for any messages to complete pairing")):(i={},i.Accept="False",t.socket.send(JSON.stringify(i)))):r.PairResult.Result=="PinVerify"&&(window.confirm("Please confirm acceptance: Pin "+r.PairResult.Pin+".  Pair this device?")?(i={},i.Accept="True",t.socket.send(JSON.stringify(i)),window.alert("Please check your device for any messages to complete pairing")):(i={},i.Accept="False",t.socket.send(JSON.stringify(i))))};this.socket.onerror=function(){t.errorGettingData.fire()};this.socket.onclose=function(){t.connectionClosed.fire()}};this.stop=function(){this.socket.close()}}function BluetoothDiscoverable(){var n=this;n.errorGettingData=$.Callbacks();n.connectionClosed=$.Callbacks();n.start=function(){var t=document.location.protocol==="https:"?"wss://":"ws://",i=t+window.location.host+"/api/bt/discoverable";n.socket=new WebSocket(i);this.socket.onmessage=function(t){var r=JSON.parse(t.data),u,i;r.PairResult.Result=="Failed"?window.alert("Connection was not approved. The Pin entered may not have been correct."):r.PairResult.Result=="DisplayPin"?window.alert("To complete pairing, enter this pin on the device: "+r.PairResult.Pin):r.PairResult.Result=="PinRequired"?(u=prompt("Enter your PIN to connect",""),u!=null?(i={},i.Pin=u,n.socket.send(JSON.stringify(i)),window.alert("Please check your device for any messages to complete pairing")):(i={},i.Accept="False",n.socket.send(JSON.stringify(i)))):r.PairResult.Result=="PinVerify"&&(window.confirm("Please confirm acceptance: Pin "+r.PairResult.Pin+".  Pair this device?")?(i={},i.Accept="True",n.socket.send(JSON.stringify(i)),window.alert("Please check your device for any messages to complete pairing")):(i={},i.Accept="False",n.socket.send(JSON.stringify(i))))};this.socket.onerror=function(){discoverableMessage.textContent="Inbound pairing is not available on this page at this time. This is usually caused by another browser session being opened during a pairing operation. Please close the other browser session and refresh.";n.errorGettingData.fire()};this.socket.onclose=function(){n.connectionClosed.fire()}};this.stop=function(){this.socket.close()}}