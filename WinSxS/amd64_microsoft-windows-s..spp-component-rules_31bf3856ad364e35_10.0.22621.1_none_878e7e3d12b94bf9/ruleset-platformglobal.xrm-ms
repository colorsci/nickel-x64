<?xml version="1.0" encoding="utf-8"?><r:license xmlns:r="urn:mpeg:mpeg21:2003:01-REL-R-NS" licenseId="{3726cac4-b752-4eb5-9c07-50c143a14c3e}" xmlns:sx="urn:mpeg:mpeg21:2003:01-REL-SX-NS" xmlns:mx="urn:mpeg:mpeg21:2003:01-REL-MX-NS" xmlns:sl="http://www.microsoft.com/DRM/XrML2/SL/v2" xmlns:tm="http://www.microsoft.com/DRM/XrML2/TM/v2"><r:title>platformglobal Ruleset Data</r:title><r:issuer><Signature xmlns="http://www.w3.org/2000/09/xmldsig#"><SignedInfo><CanonicalizationMethod Algorithm="http://www.microsoft.com/xrml/lwc14n"/><SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/><Reference><Transforms><Transform Algorithm="urn:mpeg:mpeg21:2003:01-REL-R-NS:licenseTransform"/><Transform Algorithm="http://www.microsoft.com/xrml/lwc14n"/></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/><DigestValue>67XVgf133Bhe6Eo3VyQTMm8bTAk=</DigestValue></Reference></SignedInfo><SignatureValue>Dv34Rk51bNHXTjbFSLiS8pqpXq2LbWjZhPtDp3JaaohGRXaY2V/W5FSlZ60oA4l6TnPQH8/x0CI1GTvOYO++PjKu8lP2qqaW4omUB0LId5kTfxb58jD220lpLWUwpUrzFdRCD+KH3wTrHmSs4Y4RaMRarXV5gKMumqL4nXRvnoaZRawhqgN8CSVK3FeUg2GjBEqhvB67a93u25Y8ddxmtO1EHTpcgiS/IaX0MfMwhm5GvqTws1f732x0gOs1VyBCbeWWBBBlqrvMhlP1WB6tM1acF4AHsZQqkKULQiKGr0KuJ8wxY7EBzZbhOzqzTnsAXy4hsk3NglHbDCtBFatqjA==</SignatureValue><KeyInfo><KeyValue><RSAKeyValue><Modulus>0CGJALexTNgQNeGIbvBTP7ZBZg7oeR/Ir4x6NAmFa4YYQW7SBBut56E8PW0Qm0tMY9aZORhzfMrpOeCoOjanxvhcE+WEsKjPqYIku8Jrrb5GLtXc+hcHW9ePfNyavrw/MwAihFcDsg5eS8pllLrI53DcsPeY5A/+PgAX4dazFmwJ2Y4Or+SzHmgQVVcYOm+gLfYPKTaTzNSS9V9yAargWt1REOgetdrxOG4gx844LZqGEwLRH+ZndqlGWATSImU0S1R8ieKF0U1ubN+ngQD1vVMlQdzU24B0zNqQuxT5klUB3U7zIzosMh+85SFtX8IOTjwIudiVc2k59M2U9GO2jQ==</Modulus><Exponent>AQAB</Exponent></RSAKeyValue></KeyValue></KeyInfo></Signature><r:details><r:timeOfIssue>2016-01-01T00:00:00Z</r:timeOfIssue></r:details></r:issuer><r:otherInfo xmlns:r="urn:mpeg:mpeg21:2003:01-REL-R-NS"><tm:infoTables xmlns:tm="http://www.microsoft.com/DRM/XrML2/TM/v2"><tm:infoList tag="#global"><tm:infoStr name="licenseCategory">msft:sl/RULESET</tm:infoStr><tm:infoStr name="licenseType">msft:sl/RULESET</tm:infoStr><tm:infoStr name="licenseVersion">2.0</tm:infoStr><tm:infoStr name="issuanceCertificateId">{1a538d92-eeef-4229-a9a1-6cd6e18d73a5}</tm:infoStr><tm:infoStr name="RuleSetData"></tm:infoStr><tm:infoStr name="RuleSetType">fragment</tm:infoStr></tm:infoList></tm:infoTables></r:otherInfo></r:license>