#pragma autorecover
#pragma classflags(64)
#pragma namespace("\\\\.\\root\\cimv2\\mdm")

[NamespaceSecuritySDDL("O:BAG:BAD:P(A;;0x6003F;;;BA)(A;;0x6003F;;;SY)")]
instance of __NAMESPACE
{
    Name = "dmmap";
};

#pragma autorecover
#pragma namespace("\\\\.\\root\\cimv2\\mdm\\dmmap")

Instance of __Win32Provider as $prov
{
 Name = "DMWmiBridgeProv";
 ClsId = "{0e9847b3-13e8-44e6-9659-2b60a140a573}";
 ImpersonationLevel = 1;
 HostingModel = "LocalSystemHost";
 version=0x40000001;
};

Instance of __MethodProviderRegistration
{
 Provider = $prov;
};

Instance of __InstanceProviderRegistration
{
 Provider = $prov;

 supportsGet = TRUE;
 supportsPut = TRUE;
 supportsDelete = TRUE;
 supportsEnumeration = TRUE;
 QuerySupportLevels = NULL;
};

[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_ActiveSync_User_Accounts01_01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string EmailAddress;
	[read: ToSubClass, write: ToSubClass] string Domain;
	[read: ToSubClass, write: ToSubClass] string AccountIcon;
	[read: ToSubClass, write(FALSE): ToSubClass] string AccountType;
	[read: ToSubClass, write: ToSubClass] string AccountName;
	[read: ToSubClass, write: ToSubClass] string Password;
	[read: ToSubClass, write: ToSubClass] string ServerName;
	[read: ToSubClass, write: ToSubClass] string UserName;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_ActiveSync_User_ContentTypes04_01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string Enabled;
	[read: ToSubClass, write: ToSubClass] string Name;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_ActiveSync_User_Options03
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string UseSSL;
	[read: ToSubClass, write: ToSubClass] string Schedule;
	[read: ToSubClass, write: ToSubClass] string MailAgeFilter;
	[read: ToSubClass, write: ToSubClass] string Logging;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_AppLocker_ApplicationLaunchRestrictions01_EXE03
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string Policy;
	[read: ToSubClass, write: ToSubClass] string EnforcementMode;
	[read: ToSubClass, write: ToSubClass] string NonInteractiveProcessEnforcement;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_AppLocker_ApplicationLaunchRestrictions01_StoreApps03
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string Policy;
	[read: ToSubClass, write: ToSubClass] string EnforcementMode;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_AppLocker_CodeIntegrity03
{
	[key] string InstanceID;
	[key] string ParentID;
	[Octetstring: DisableOverride ToSubClass, read: ToSubClass, write: ToSubClass] string Policy;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_AppLocker_DLL03
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string Policy;
	[read: ToSubClass, write: ToSubClass] string EnforcementMode;
	[read: ToSubClass, write: ToSubClass] string NonInteractiveProcessEnforcement;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_AppLocker_EnterpriseDataProtection01_EXE03
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string Policy;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_AppLocker_EnterpriseDataProtection01_StoreApps03
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string Policy;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_AppLocker_MSI03
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string Policy;
	[read: ToSubClass, write: ToSubClass] string EnforcementMode;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_AppLocker_Script03
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string Policy;
	[read: ToSubClass, write: ToSubClass] string EnforcementMode;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_AssignedAccess
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string KioskModeApp;
	[read: ToSubClass, write: ToSubClass] string Configuration;
	[read: ToSubClass, write: ToSubClass] string ShellLauncher;
};
[dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_BridgeMgmt_Transaction
{
	[implemented, static: DisableOverride ToSubClass]  uint32 TransactionBegin([In] string requestId);
	[implemented, static: DisableOverride ToSubClass]  uint32 TransactionEnd([In] string requestId, [Out] uint32 transactionMiResult, [Out] string failedRequestDetails);
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_ClientCertificateInstall_Install03
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string ServerURL;
	[read: ToSubClass, write: ToSubClass] string Challenge;
	[read: ToSubClass, write: ToSubClass] string EKUMapping;
	[read: ToSubClass, write: ToSubClass] sint32 KeyUsage;
	[read: ToSubClass, write: ToSubClass] string SubjectName;
	[read: ToSubClass, write: ToSubClass] sint32 KeyProtection;
	[read: ToSubClass, write: ToSubClass] sint32 RetryDelay;
	[read: ToSubClass, write: ToSubClass] sint32 RetryCount;
	[read: ToSubClass, write: ToSubClass] string TemplateName;
	[read: ToSubClass, write: ToSubClass] sint32 KeyLength;
	[read: ToSubClass, write: ToSubClass] string HashAlgorithm;
	[read: ToSubClass, write: ToSubClass] string CAThumbprint;
	[read: ToSubClass, write: ToSubClass] string SubjectAlternativeNames;
	[read: ToSubClass, write: ToSubClass] string ValidPeriod;
	[read: ToSubClass, write: ToSubClass] sint32 ValidPeriodUnits;
	[read: ToSubClass, write: ToSubClass] string ContainerName;
	[read: ToSubClass, write: ToSubClass] string CustomTextToShowInPrompt;
	[read: ToSubClass, write: ToSubClass] string AADKeyIdentifierList;
	[implemented] uint32 EnrollMethod();
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_ClientCertificateInstall_PFXCertInstall01_01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 KeyLocation;
	[read: ToSubClass, write: ToSubClass] string ContainerName;
	[Octetstring: DisableOverride ToSubClass, read: ToSubClass, write: ToSubClass] string PFXCertBlob;
	[read: ToSubClass, write: ToSubClass] string PFXCertPassword;
	[read: ToSubClass, write: ToSubClass] sint32 PFXCertPasswordEncryptionType;
	[read: ToSubClass, write: ToSubClass] boolean PFXKeyExportable;
	[read: ToSubClass, write(FALSE): ToSubClass] string Thumbprint;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 Status;
	[read: ToSubClass, write: ToSubClass] string PFXCertPasswordEncryptionStore;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_ClientCertificateInstall_SCEP01_01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string CertThumbprint;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 Status;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ErrorCode;
	[read: ToSubClass, write(FALSE): ToSubClass] string RespondentServerUrl;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_DevDetail
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string DevTyp;
	[read: ToSubClass, write(FALSE): ToSubClass] string OEM;
	[read: ToSubClass, write(FALSE): ToSubClass] string FwV;
	[read: ToSubClass, write(FALSE): ToSubClass] string SwV;
	[read: ToSubClass, write(FALSE): ToSubClass] string HwV;
	[read: ToSubClass, write(FALSE): ToSubClass] boolean LrgObj;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_DevDetail_Ext01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string DeviceHardwareData;
	[read: ToSubClass, write(FALSE): ToSubClass] string WLANMACAddress;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_DevDetail_Microsoft02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string MobileID;
	[read: ToSubClass, write(FALSE): ToSubClass] string RadioSwV;
	[read: ToSubClass, write(FALSE): ToSubClass] string Resolution;
	[read: ToSubClass, write(FALSE): ToSubClass] string CommercializationOperator;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ProcessorArchitecture;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ProcessorType;
	[read: ToSubClass, write(FALSE): ToSubClass] string OSPlatform;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalTime;
	[read: ToSubClass, write: ToSubClass] string DeviceName;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_DeviceStatus
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SecureBootState;
	[read: ToSubClass, write(FALSE): ToSubClass] string DomainName;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_DeviceStatus_Antispyware01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SignatureStatus;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 Status;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_DeviceStatus_Antivirus01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SignatureStatus;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 Status;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_DeviceStatus_Battery01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 Status;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EstimatedChargeRemaining;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EstimatedRuntime;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_DeviceStatus_CellularIdentities01_01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string IMSI;
	[read: ToSubClass, write(FALSE): ToSubClass] string ICCID;
	[read: ToSubClass, write(FALSE): ToSubClass] string PhoneNumber;
	[read: ToSubClass, write(FALSE): ToSubClass] string CommercializationOperator;
	[read: ToSubClass, write(FALSE): ToSubClass] boolean RoamingStatus;
	[read: ToSubClass, write(FALSE): ToSubClass] boolean RoamingCompliance;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_DeviceStatus_Compliance01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] boolean EncryptionCompliance;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_DeviceStatus_DeviceGuard01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 VirtualizationBasedSecurityHwReq;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 VirtualizationBasedSecurityStatus;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LsaCfgCredGuardStatus;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HypervisorEnforcedCodeIntegrityStatus;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SystemGuardStatus;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_DeviceStatus_DMA01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 BootDMAProtectionStatus;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_DeviceStatus_Firewall01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 Status;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_DeviceStatus_NetworkIdentifiers01_01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string IPAddressV4;
	[read: ToSubClass, write(FALSE): ToSubClass] string IPAddressV6;
	[read: ToSubClass, write(FALSE): ToSubClass] boolean IsConnected;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 Type;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_DeviceStatus_OS01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string Edition;
	[read: ToSubClass, write(FALSE): ToSubClass] string Mode;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_DeviceStatus_TPM01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string SpecificationVersion;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_DeviceStatus_UAC01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 Status;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_EnterpriseAPN_01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string APNName;
	[read: ToSubClass, write: ToSubClass] string IPType;
	[read: ToSubClass, write: ToSubClass] boolean IsAttachAPN;
	[read: ToSubClass, write: ToSubClass] string ClassId;
	[read: ToSubClass, write: ToSubClass] string AuthType;
	[read: ToSubClass, write: ToSubClass] string UserName;
	[read: ToSubClass, write: ToSubClass] string Password;
	[read: ToSubClass, write: ToSubClass] string IccId;
	[read: ToSubClass, write: ToSubClass] boolean AlwaysOn;
	[read: ToSubClass, write: ToSubClass] boolean Enabled;
	[read: ToSubClass, write: ToSubClass] string Roaming;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_EnterpriseAPN_Settings01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] boolean AllowUserControl;
	[read: ToSubClass, write: ToSubClass] boolean HideView;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_EnterpriseModernAppManagement_AppInstallation01_01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LastError;
	[read: ToSubClass, write(FALSE): ToSubClass] string LastErrorDesc;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 Status;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ProgressStatus;
	[implemented] uint32 StoreInstallMethod([In] string param);
	[implemented] uint32 HostedInstallMethod([In] string param);
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_EnterpriseModernAppManagement_AppManagement01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LastScanError;
	[read: ToSubClass, write(FALSE): ToSubClass] string AppInventoryResults;
	[read: ToSubClass, write: ToSubClass] string AppInventoryQuery;
	[implemented] uint32 UpdateScanMethod();
	[read: ToSubClass, write(FALSE): ToSubClass] string RemovePackage;
	[implemented] uint32 RemovePackageMethod([In] string param);
	[read: ToSubClass, write(FALSE): ToSubClass] string ResetPackage;
	[implemented] uint32 ResetPackageMethod([In] string param);
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_EnterpriseModernAppManagement_AppManagement01_02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 DoNotUpdate;
	[read: ToSubClass, write: ToSubClass] sint32 NonRemovable;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_EnterpriseModernAppManagement_AppManagement01_03
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string Name;
	[read: ToSubClass, write(FALSE): ToSubClass] string Version;
	[read: ToSubClass, write(FALSE): ToSubClass] string Publisher;
	[read: ToSubClass, write(FALSE): ToSubClass] string Architecture;
	[read: ToSubClass, write(FALSE): ToSubClass] string InstallLocation;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 IsFramework;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 IsBundle;
	[read: ToSubClass, write(FALSE): ToSubClass] string InstallDate;
	[read: ToSubClass, write(FALSE): ToSubClass] string ResourceID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PackageStatus;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 RequiresReinstall;
	[read: ToSubClass, write(FALSE): ToSubClass] string Users;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 IsProvisioned;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 IsStub;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_EnterpriseModernAppManagement_AppSettingPolicy04
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string Value;
	boolean IsVariableLeaf;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_EnterpriseModernAppManagement_AutoRepair05
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string PackageSource;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_EnterpriseModernAppManagement_AutoUpdateSettings05
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string PackageSource;
	[read: ToSubClass, write: ToSubClass] boolean AutomaticBackgroundTask;
	[read: ToSubClass, write: ToSubClass] boolean OnLaunchUpdateCheck;
	[read: ToSubClass, write: ToSubClass] boolean HoursBetweenUpdateChecks;
	[read: ToSubClass, write: ToSubClass] boolean ShowPrompt;
	[read: ToSubClass, write: ToSubClass] boolean UpdateBlocksActivation;
	[read: ToSubClass, write: ToSubClass] boolean ForceUpdateFromAnyVersion;
	[read: ToSubClass, write: ToSubClass] boolean Disable;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_EnterpriseModernAppManagement_EffectiveRelease03
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string ChannelId;
	[read: ToSubClass, write(FALSE): ToSubClass] string ReleaseManagementId;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_EnterpriseModernAppManagement_ReleaseManagement01_01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string ChannelId;
	[read: ToSubClass, write: ToSubClass] string ReleaseManagementId;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_EnterpriseModernAppManagement_StoreLicenses02_01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string LicenseCategory;
	[read: ToSubClass, write(FALSE): ToSubClass] string LicenseUsage;
	[read: ToSubClass, write(FALSE): ToSubClass] string RequesterID;
	[implemented] uint32 AddLicenseMethod([In] string param);
	[implemented] uint32 GetLicenseFromStoreMethod([In] string param);
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_HealthAttestation
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 Status;
	[read: ToSubClass, write: ToSubClass] boolean ForceRetrieve;
	[Octetstring: DisableOverride ToSubClass, read: ToSubClass, write(FALSE): ToSubClass] string Certificate;
	[read: ToSubClass, write: ToSubClass] string Nonce;
	[read: ToSubClass, write(FALSE): ToSubClass] string CorrelationID;
	[read: ToSubClass, write: ToSubClass] string HASEndpoint;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 TpmReadyStatus;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 CurrentProtocolVersion;
	[read: ToSubClass, write: ToSubClass] sint32 PreferredMaxProtocolVersion;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 MaxSupportedProtocolVersion;
	[implemented] uint32 VerifyHealthMethod();
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_PassportForWork
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] boolean UseBiometrics;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_PassportForWork_Biometrics01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] boolean UseBiometrics;
	[read: ToSubClass, write: ToSubClass] boolean FacialFeaturesUseEnhancedAntiSpoofing;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_PassportForWork_Device_Policies02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] boolean UseCertificateForOnPremAuth;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_PassportForWork_DeviceUnlock01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string GroupA;
	[read: ToSubClass, write: ToSubClass] string GroupB;
	[read: ToSubClass, write: ToSubClass] string Plugins;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_PassportForWork_DynamicLock01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] boolean DynamicLock;
	[read: ToSubClass, write: ToSubClass] string Plugins;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_PassportForWork_ExcludeSecurityDevices03
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] boolean TPM12;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_PassportForWork_PINComplexity03
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 MinimumPINLength;
	[read: ToSubClass, write: ToSubClass] sint32 MaximumPINLength;
	[read: ToSubClass, write: ToSubClass] sint32 UppercaseLetters;
	[read: ToSubClass, write: ToSubClass] sint32 LowercaseLetters;
	[read: ToSubClass, write: ToSubClass] sint32 SpecialCharacters;
	[read: ToSubClass, write: ToSubClass] sint32 Digits;
	[read: ToSubClass, write: ToSubClass] sint32 History;
	[read: ToSubClass, write: ToSubClass] sint32 Expiration;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_PassportForWork_Policies02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] boolean UsePassportForWork;
	[read: ToSubClass, write: ToSubClass] boolean RequireSecurityDevice;
	[read: ToSubClass, write: ToSubClass] boolean EnablePinRecovery;
	[read: ToSubClass, write: ToSubClass] boolean UseHelloCertificatesAsSmartCardCertificates;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_PassportForWork_Remote03
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] boolean UseRemotePassport;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_PassportForWork_User_Policies02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] boolean UsePassportForWork;
	[read: ToSubClass, write: ToSubClass] boolean RequireSecurityDevice;
	[read: ToSubClass, write: ToSubClass] boolean EnablePinRecovery;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_AboveLock02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowCortanaAboveLock;
	[read: ToSubClass, write: ToSubClass] sint32 AllowToasts;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Accounts02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowAddingNonMicrosoftAccountsManually;
	[read: ToSubClass, write: ToSubClass] sint32 AllowMicrosoftAccountConnection;
	[read: ToSubClass, write: ToSubClass] sint32 AllowMicrosoftAccountSignInAssistant;
	[read: ToSubClass, write: ToSubClass] string DomainNamesForEmailSync;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_ActiveXControls02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string ApprovedInstallationSites;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_ApplicationDefaults02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string DefaultAssociationsConfiguration;
	[read: ToSubClass, write: ToSubClass] sint32 EnableAppUriHandlers;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_ApplicationManagement02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowAllTrustedApps;
	[read: ToSubClass, write: ToSubClass] sint32 AllowAppStoreAutoUpdate;
	[read: ToSubClass, write: ToSubClass] sint32 AllowAutomaticAppArchiving;
	[read: ToSubClass, write: ToSubClass] sint32 AllowDeveloperUnlock;
	[read: ToSubClass, write: ToSubClass] sint32 AllowGameDVR;
	[read: ToSubClass, write: ToSubClass] sint32 AllowSharedUserAppData;
	[read: ToSubClass, write: ToSubClass] sint32 BlockNonAdminUserInstall;
	[read: ToSubClass, write: ToSubClass] sint32 DisableStoreOriginatedApps;
	[read: ToSubClass, write: ToSubClass] string LaunchAppAfterLogOn;
	[read: ToSubClass, write: ToSubClass] sint32 MSIAllowUserControlOverInstall;
	[read: ToSubClass, write: ToSubClass] sint32 MSIAlwaysInstallWithElevatedPrivileges;
	[read: ToSubClass, write: ToSubClass] sint32 RequirePrivateStoreOnly;
	[read: ToSubClass, write: ToSubClass] sint32 RestrictAppDataToSystemVolume;
	[read: ToSubClass, write: ToSubClass] sint32 RestrictAppToSystemVolume;
	[read: ToSubClass, write: ToSubClass] string ScheduleForceRestartForUpdateFailures;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_AppRuntime02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string AllowMicrosoftAccountsToBeOptional;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_AppVirtualization02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string AllowAppVClient;
	[read: ToSubClass, write: ToSubClass] string AllowDynamicVirtualization;
	[read: ToSubClass, write: ToSubClass] string AllowPackageCleanup;
	[read: ToSubClass, write: ToSubClass] string AllowPackageScripts;
	[read: ToSubClass, write: ToSubClass] string AllowPublishingRefreshUX;
	[read: ToSubClass, write: ToSubClass] string AllowReportingServer;
	[read: ToSubClass, write: ToSubClass] string AllowRoamingFileExclusions;
	[read: ToSubClass, write: ToSubClass] string AllowRoamingRegistryExclusions;
	[read: ToSubClass, write: ToSubClass] string AllowStreamingAutoload;
	[read: ToSubClass, write: ToSubClass] string ClientCoexistenceAllowMigrationmode;
	[read: ToSubClass, write: ToSubClass] string IntegrationAllowRootGlobal;
	[read: ToSubClass, write: ToSubClass] string IntegrationAllowRootUser;
	[read: ToSubClass, write: ToSubClass] string PublishingAllowServer1;
	[read: ToSubClass, write: ToSubClass] string PublishingAllowServer2;
	[read: ToSubClass, write: ToSubClass] string PublishingAllowServer3;
	[read: ToSubClass, write: ToSubClass] string PublishingAllowServer4;
	[read: ToSubClass, write: ToSubClass] string PublishingAllowServer5;
	[read: ToSubClass, write: ToSubClass] string StreamingAllowCertificateFilterForClient_SSL;
	[read: ToSubClass, write: ToSubClass] string StreamingAllowHighCostLaunch;
	[read: ToSubClass, write: ToSubClass] string StreamingAllowLocationProvider;
	[read: ToSubClass, write: ToSubClass] string StreamingAllowPackageInstallationRoot;
	[read: ToSubClass, write: ToSubClass] string StreamingAllowPackageSourceRoot;
	[read: ToSubClass, write: ToSubClass] string StreamingAllowReestablishmentInterval;
	[read: ToSubClass, write: ToSubClass] string StreamingAllowReestablishmentRetries;
	[read: ToSubClass, write: ToSubClass] string StreamingSharedContentStoreMode;
	[read: ToSubClass, write: ToSubClass] string StreamingSupportBranchCache;
	[read: ToSubClass, write: ToSubClass] string StreamingVerifyCertificateRevocationList;
	[read: ToSubClass, write: ToSubClass] string VirtualComponentsAllowList;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Audit02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AccountLogon_AuditCredentialValidation;
	[read: ToSubClass, write: ToSubClass] sint32 AccountLogon_AuditKerberosAuthenticationService;
	[read: ToSubClass, write: ToSubClass] sint32 AccountLogon_AuditKerberosServiceTicketOperations;
	[read: ToSubClass, write: ToSubClass] sint32 AccountLogon_AuditOtherAccountLogonEvents;
	[read: ToSubClass, write: ToSubClass] sint32 AccountLogonLogoff_AuditAccountLockout;
	[read: ToSubClass, write: ToSubClass] sint32 AccountLogonLogoff_AuditGroupMembership;
	[read: ToSubClass, write: ToSubClass] sint32 AccountLogonLogoff_AuditIPsecExtendedMode;
	[read: ToSubClass, write: ToSubClass] sint32 AccountLogonLogoff_AuditIPsecMainMode;
	[read: ToSubClass, write: ToSubClass] sint32 AccountLogonLogoff_AuditIPsecQuickMode;
	[read: ToSubClass, write: ToSubClass] sint32 AccountLogonLogoff_AuditLogoff;
	[read: ToSubClass, write: ToSubClass] sint32 AccountLogonLogoff_AuditLogon;
	[read: ToSubClass, write: ToSubClass] sint32 AccountLogonLogoff_AuditNetworkPolicyServer;
	[read: ToSubClass, write: ToSubClass] sint32 AccountLogonLogoff_AuditOtherLogonLogoffEvents;
	[read: ToSubClass, write: ToSubClass] sint32 AccountLogonLogoff_AuditSpecialLogon;
	[read: ToSubClass, write: ToSubClass] sint32 AccountLogonLogoff_AuditUserDeviceClaims;
	[read: ToSubClass, write: ToSubClass] sint32 AccountManagement_AuditApplicationGroupManagement;
	[read: ToSubClass, write: ToSubClass] sint32 AccountManagement_AuditComputerAccountManagement;
	[read: ToSubClass, write: ToSubClass] sint32 AccountManagement_AuditDistributionGroupManagement;
	[read: ToSubClass, write: ToSubClass] sint32 AccountManagement_AuditOtherAccountManagementEvents;
	[read: ToSubClass, write: ToSubClass] sint32 AccountManagement_AuditSecurityGroupManagement;
	[read: ToSubClass, write: ToSubClass] sint32 AccountManagement_AuditUserAccountManagement;
	[read: ToSubClass, write: ToSubClass] sint32 DetailedTracking_AuditDPAPIActivity;
	[read: ToSubClass, write: ToSubClass] sint32 DetailedTracking_AuditPNPActivity;
	[read: ToSubClass, write: ToSubClass] sint32 DetailedTracking_AuditProcessCreation;
	[read: ToSubClass, write: ToSubClass] sint32 DetailedTracking_AuditProcessTermination;
	[read: ToSubClass, write: ToSubClass] sint32 DetailedTracking_AuditRPCEvents;
	[read: ToSubClass, write: ToSubClass] sint32 DetailedTracking_AuditTokenRightAdjusted;
	[read: ToSubClass, write: ToSubClass] sint32 DSAccess_AuditDetailedDirectoryServiceReplication;
	[read: ToSubClass, write: ToSubClass] sint32 DSAccess_AuditDirectoryServiceAccess;
	[read: ToSubClass, write: ToSubClass] sint32 DSAccess_AuditDirectoryServiceChanges;
	[read: ToSubClass, write: ToSubClass] sint32 DSAccess_AuditDirectoryServiceReplication;
	[read: ToSubClass, write: ToSubClass] sint32 ObjectAccess_AuditApplicationGenerated;
	[read: ToSubClass, write: ToSubClass] sint32 ObjectAccess_AuditCentralAccessPolicyStaging;
	[read: ToSubClass, write: ToSubClass] sint32 ObjectAccess_AuditCertificationServices;
	[read: ToSubClass, write: ToSubClass] sint32 ObjectAccess_AuditDetailedFileShare;
	[read: ToSubClass, write: ToSubClass] sint32 ObjectAccess_AuditFileShare;
	[read: ToSubClass, write: ToSubClass] sint32 ObjectAccess_AuditFileSystem;
	[read: ToSubClass, write: ToSubClass] sint32 ObjectAccess_AuditFilteringPlatformConnection;
	[read: ToSubClass, write: ToSubClass] sint32 ObjectAccess_AuditFilteringPlatformPacketDrop;
	[read: ToSubClass, write: ToSubClass] sint32 ObjectAccess_AuditHandleManipulation;
	[read: ToSubClass, write: ToSubClass] sint32 ObjectAccess_AuditKernelObject;
	[read: ToSubClass, write: ToSubClass] sint32 ObjectAccess_AuditOtherObjectAccessEvents;
	[read: ToSubClass, write: ToSubClass] sint32 ObjectAccess_AuditRegistry;
	[read: ToSubClass, write: ToSubClass] sint32 ObjectAccess_AuditRemovableStorage;
	[read: ToSubClass, write: ToSubClass] sint32 ObjectAccess_AuditSAM;
	[read: ToSubClass, write: ToSubClass] sint32 PolicyChange_AuditAuthenticationPolicyChange;
	[read: ToSubClass, write: ToSubClass] sint32 PolicyChange_AuditAuthorizationPolicyChange;
	[read: ToSubClass, write: ToSubClass] sint32 PolicyChange_AuditFilteringPlatformPolicyChange;
	[read: ToSubClass, write: ToSubClass] sint32 PolicyChange_AuditMPSSVCRuleLevelPolicyChange;
	[read: ToSubClass, write: ToSubClass] sint32 PolicyChange_AuditOtherPolicyChangeEvents;
	[read: ToSubClass, write: ToSubClass] sint32 PolicyChange_AuditPolicyChange;
	[read: ToSubClass, write: ToSubClass] sint32 PrivilegeUse_AuditNonSensitivePrivilegeUse;
	[read: ToSubClass, write: ToSubClass] sint32 PrivilegeUse_AuditOtherPrivilegeUseEvents;
	[read: ToSubClass, write: ToSubClass] sint32 PrivilegeUse_AuditSensitivePrivilegeUse;
	[read: ToSubClass, write: ToSubClass] sint32 System_AuditIPsecDriver;
	[read: ToSubClass, write: ToSubClass] sint32 System_AuditOtherSystemEvents;
	[read: ToSubClass, write: ToSubClass] sint32 System_AuditSecurityStateChange;
	[read: ToSubClass, write: ToSubClass] sint32 System_AuditSecuritySystemExtension;
	[read: ToSubClass, write: ToSubClass] sint32 System_AuditSystemIntegrity;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Authentication02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowAadPasswordReset;
	[read: ToSubClass, write: ToSubClass] sint32 AllowFastReconnect;
	[read: ToSubClass, write: ToSubClass] sint32 AllowSecondaryAuthenticationDevice;
	[read: ToSubClass, write: ToSubClass] string ConfigureWebcamAccessDomainNames;
	[read: ToSubClass, write: ToSubClass] string ConfigureWebSignInAllowedUrls;
	[read: ToSubClass, write: ToSubClass] sint32 EnableFastFirstSignIn;
	[read: ToSubClass, write: ToSubClass] sint32 EnableWebSignIn;
	[read: ToSubClass, write: ToSubClass] string PreferredAadTenantDomainName;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Autoplay02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string DisallowAutoplayForNonVolumeDevices;
	[read: ToSubClass, write: ToSubClass] string SetDefaultAutoRunBehavior;
	[read: ToSubClass, write: ToSubClass] string TurnOffAutoPlay;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Bitlocker02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 EncryptionMethod;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_BITS02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 BandwidthThrottlingEndTime;
	[read: ToSubClass, write: ToSubClass] sint32 BandwidthThrottlingStartTime;
	[read: ToSubClass, write: ToSubClass] sint32 BandwidthThrottlingTransferRate;
	[read: ToSubClass, write: ToSubClass] sint32 CostedNetworkBehaviorBackgroundPriority;
	[read: ToSubClass, write: ToSubClass] sint32 CostedNetworkBehaviorForegroundPriority;
	[read: ToSubClass, write: ToSubClass] sint32 JobInactivityTimeout;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Bluetooth02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowAdvertising;
	[read: ToSubClass, write: ToSubClass] sint32 AllowDiscoverableMode;
	[read: ToSubClass, write: ToSubClass] sint32 AllowPrepairing;
	[read: ToSubClass, write: ToSubClass] sint32 AllowPromptedProximalConnections;
	[read: ToSubClass, write: ToSubClass] string LocalDeviceName;
	[read: ToSubClass, write: ToSubClass] string ServicesAllowedList;
	[read: ToSubClass, write: ToSubClass] sint32 SetMinimumEncryptionKeySize;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Browser02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowAddressBarDropdown;
	[read: ToSubClass, write: ToSubClass] sint32 AllowAutofill;
	[read: ToSubClass, write: ToSubClass] sint32 AllowConfigurationUpdateForBooksLibrary;
	[read: ToSubClass, write: ToSubClass] sint32 AllowCookies;
	[read: ToSubClass, write: ToSubClass] sint32 AllowDeveloperTools;
	[read: ToSubClass, write: ToSubClass] sint32 AllowDoNotTrack;
	[read: ToSubClass, write: ToSubClass] sint32 AllowExtensions;
	[read: ToSubClass, write: ToSubClass] sint32 AllowFlash;
	[read: ToSubClass, write: ToSubClass] sint32 AllowFlashClickToRun;
	[read: ToSubClass, write: ToSubClass] sint32 AllowFullScreenMode;
	[read: ToSubClass, write: ToSubClass] sint32 AllowInPrivate;
	[read: ToSubClass, write: ToSubClass] sint32 AllowMicrosoftCompatibilityList;
	[read: ToSubClass, write: ToSubClass] sint32 AllowPasswordManager;
	[read: ToSubClass, write: ToSubClass] sint32 AllowPopups;
	[read: ToSubClass, write: ToSubClass] sint32 AllowPrelaunch;
	[read: ToSubClass, write: ToSubClass] sint32 AllowPrinting;
	[read: ToSubClass, write: ToSubClass] sint32 AllowSavingHistory;
	[read: ToSubClass, write: ToSubClass] sint32 AllowSearchEngineCustomization;
	[read: ToSubClass, write: ToSubClass] sint32 AllowSearchSuggestionsinAddressBar;
	[read: ToSubClass, write: ToSubClass] sint32 AllowSideloadingOfExtensions;
	[read: ToSubClass, write: ToSubClass] sint32 AllowSmartScreen;
	[read: ToSubClass, write: ToSubClass] sint32 AllowTabPreloading;
	[read: ToSubClass, write: ToSubClass] sint32 AllowWebContentOnNewTabPage;
	[read: ToSubClass, write: ToSubClass] sint32 AlwaysEnableBooksLibrary;
	[read: ToSubClass, write: ToSubClass] sint32 ClearBrowsingDataOnExit;
	[read: ToSubClass, write: ToSubClass] string ConfigureAdditionalSearchEngines;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureFavoritesBar;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureHomeButton;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureKioskMode;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureKioskResetAfterIdleTimeout;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureOpenMicrosoftEdgeWith;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureTelemetryForMicrosoft365Analytics;
	[read: ToSubClass, write: ToSubClass] string DefaultFavoriteBarItem1Name;
	[read: ToSubClass, write: ToSubClass] string DefaultFavoriteBarItem1Url;
	[read: ToSubClass, write: ToSubClass] string DefaultFavoriteBarItem2Name;
	[read: ToSubClass, write: ToSubClass] string DefaultFavoriteBarItem2Url;
	[read: ToSubClass, write: ToSubClass] string DefaultFavoriteBarItem3Name;
	[read: ToSubClass, write: ToSubClass] string DefaultFavoriteBarItem3Url;
	[read: ToSubClass, write: ToSubClass] sint32 DisableLockdownOfStartPages;
	[read: ToSubClass, write: ToSubClass] sint32 EnableExtendedBooksTelemetry;
	[read: ToSubClass, write: ToSubClass] string EnterpriseModeSiteList;
	[read: ToSubClass, write: ToSubClass] string EnterpriseSiteListServiceUrl;
	[read: ToSubClass, write: ToSubClass] string HomePages;
	[read: ToSubClass, write: ToSubClass] sint32 LockdownFavorites;
	[read: ToSubClass, write: ToSubClass] sint32 PreventAccessToAboutFlagsInMicrosoftEdge;
	[read: ToSubClass, write: ToSubClass] sint32 PreventCertErrorOverrides;
	[read: ToSubClass, write: ToSubClass] sint32 PreventFirstRunPage;
	[read: ToSubClass, write: ToSubClass] sint32 PreventLiveTileDataCollection;
	[read: ToSubClass, write: ToSubClass] sint32 PreventSmartScreenPromptOverride;
	[read: ToSubClass, write: ToSubClass] sint32 PreventSmartScreenPromptOverrideForFiles;
	[read: ToSubClass, write: ToSubClass] string PreventTurningOffRequiredExtensions;
	[read: ToSubClass, write: ToSubClass] sint32 PreventUsingLocalHostIPAddressForWebRTC;
	[read: ToSubClass, write: ToSubClass] string ProvisionFavorites;
	[read: ToSubClass, write: ToSubClass] sint32 SendIntranetTraffictoInternetExplorer;
	[read: ToSubClass, write: ToSubClass] string SetDefaultSearchEngine;
	[read: ToSubClass, write: ToSubClass] string SetHomeButtonURL;
	[read: ToSubClass, write: ToSubClass] string SetNewTabPageURL;
	[read: ToSubClass, write: ToSubClass] sint32 ShowMessageWhenOpeningSitesInInternetExplorer;
	[read: ToSubClass, write: ToSubClass] sint32 SyncFavoritesBetweenIEAndMicrosoftEdge;
	[read: ToSubClass, write: ToSubClass] sint32 UnlockHomeButton;
	[read: ToSubClass, write: ToSubClass] sint32 UseSharedFolderForBooks;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Camera02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowCamera;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Cellular02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 LetAppsAccessCellularData;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessCellularData_ForceAllowTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessCellularData_ForceDenyTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessCellularData_UserInControlOfTheseApps;
	[read: ToSubClass, write: ToSubClass] string ShowAppCellularAccessUI;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Connectivity02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowBluetooth;
	[read: ToSubClass, write: ToSubClass] sint32 AllowCellularData;
	[read: ToSubClass, write: ToSubClass] sint32 AllowCellularDataRoaming;
	[read: ToSubClass, write: ToSubClass] sint32 AllowConnectedDevices;
	[read: ToSubClass, write: ToSubClass] sint32 AllowPhonePCLinking;
	[read: ToSubClass, write: ToSubClass] sint32 AllowVPNOverCellular;
	[read: ToSubClass, write: ToSubClass] sint32 AllowVPNRoamingOverCellular;
	[read: ToSubClass, write: ToSubClass] string DiablePrintingOverHTTP;
	[read: ToSubClass, write: ToSubClass] string DisableDownloadingOfPrintDriversOverHTTP;
	[read: ToSubClass, write: ToSubClass] string DisableInternetDownloadForWebPublishingAndOnlineOrderingWizards;
	[read: ToSubClass, write: ToSubClass] sint32 DisallowNetworkConnectivityActiveTests;
	[read: ToSubClass, write: ToSubClass] string HardenedUNCPaths;
	[read: ToSubClass, write: ToSubClass] string ProhibitInstallationAndConfigurationOfNetworkBridge;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_ControlPolicyConflict02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 MDMWinsOverGP;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_CredentialProviders02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string AllowPINLogon;
	[read: ToSubClass, write: ToSubClass] string BlockPicturePassword;
	[read: ToSubClass, write: ToSubClass] sint32 DisableAutomaticReDeploymentCredentials;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_CredentialsDelegation02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string RemoteHostAllowsDelegationOfNonExportableCredentials;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_CredentialsUI02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string DisablePasswordReveal;
	[read: ToSubClass, write: ToSubClass] string EnumerateAdministrators;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Cryptography02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowFipsAlgorithmPolicy;
	[read: ToSubClass, write: ToSubClass] string TLSCipherSuites;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_DataProtection02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowDirectMemoryAccess;
	[read: ToSubClass, write: ToSubClass] string LegacySelectiveWipeID;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_DataUsage02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string SetCost3G;
	[read: ToSubClass, write: ToSubClass] string SetCost4G;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Defender02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowArchiveScanning;
	[read: ToSubClass, write: ToSubClass] sint32 AllowBehaviorMonitoring;
	[read: ToSubClass, write: ToSubClass] sint32 AllowCloudProtection;
	[read: ToSubClass, write: ToSubClass] sint32 AllowEmailScanning;
	[read: ToSubClass, write: ToSubClass] sint32 AllowFullScanOnMappedNetworkDrives;
	[read: ToSubClass, write: ToSubClass] sint32 AllowFullScanRemovableDriveScanning;
	[read: ToSubClass, write: ToSubClass] sint32 AllowIntrusionPreventionSystem;
	[read: ToSubClass, write: ToSubClass] sint32 AllowIOAVProtection;
	[read: ToSubClass, write: ToSubClass] sint32 AllowOnAccessProtection;
	[read: ToSubClass, write: ToSubClass] sint32 AllowRealtimeMonitoring;
	[read: ToSubClass, write: ToSubClass] sint32 AllowScanningNetworkFiles;
	[read: ToSubClass, write: ToSubClass] sint32 AllowScriptScanning;
	[read: ToSubClass, write: ToSubClass] sint32 AllowUserUIAccess;
	[read: ToSubClass, write: ToSubClass] string AttackSurfaceReductionOnlyExclusions;
	[read: ToSubClass, write: ToSubClass] string AttackSurfaceReductionRules;
	[read: ToSubClass, write: ToSubClass] sint32 AvgCPULoadFactor;
	[read: ToSubClass, write: ToSubClass] sint32 CheckForSignaturesBeforeRunningScan;
	[read: ToSubClass, write: ToSubClass] sint32 CloudBlockLevel;
	[read: ToSubClass, write: ToSubClass] sint32 CloudExtendedTimeout;
	[read: ToSubClass, write: ToSubClass] string ControlledFolderAccessAllowedApplications;
	[read: ToSubClass, write: ToSubClass] string ControlledFolderAccessProtectedFolders;
	[read: ToSubClass, write: ToSubClass] sint32 DaysToRetainCleanedMalware;
	[read: ToSubClass, write: ToSubClass] sint32 DisableCatchupFullScan;
	[read: ToSubClass, write: ToSubClass] sint32 DisableCatchupQuickScan;
	[read: ToSubClass, write: ToSubClass] sint32 EnableControlledFolderAccess;
	[read: ToSubClass, write: ToSubClass] sint32 EnableLowCPUPriority;
	[read: ToSubClass, write: ToSubClass] sint32 EnableNetworkProtection;
	[read: ToSubClass, write: ToSubClass] string ExcludedExtensions;
	[read: ToSubClass, write: ToSubClass] string ExcludedPaths;
	[read: ToSubClass, write: ToSubClass] string ExcludedProcesses;
	[read: ToSubClass, write: ToSubClass] sint32 PUAProtection;
	[read: ToSubClass, write: ToSubClass] sint32 RealTimeScanDirection;
	[read: ToSubClass, write: ToSubClass] sint32 ScanParameter;
	[read: ToSubClass, write: ToSubClass] sint32 ScheduleQuickScanTime;
	[read: ToSubClass, write: ToSubClass] sint32 ScheduleScanDay;
	[read: ToSubClass, write: ToSubClass] sint32 ScheduleScanTime;
	[read: ToSubClass, write: ToSubClass] string SecurityIntelligenceLocation;
	[read: ToSubClass, write: ToSubClass] string SignatureUpdateFallbackOrder;
	[read: ToSubClass, write: ToSubClass] string SignatureUpdateFileSharesSources;
	[read: ToSubClass, write: ToSubClass] sint32 SignatureUpdateInterval;
	[read: ToSubClass, write: ToSubClass] sint32 SubmitSamplesConsent;
	[read: ToSubClass, write: ToSubClass] string ThreatSeverityDefaultAction;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_DeliveryOptimization02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 DOAbsoluteMaxCacheSize;
	[read: ToSubClass, write: ToSubClass] sint32 DOAllowVPNPeerCaching;
	[read: ToSubClass, write: ToSubClass] string DOCacheHost;
	[read: ToSubClass, write: ToSubClass] sint32 DOCacheHostSource;
	[read: ToSubClass, write: ToSubClass] sint32 DODelayBackgroundDownloadFromHttp;
	[read: ToSubClass, write: ToSubClass] sint32 DODelayCacheServerFallbackBackground;
	[read: ToSubClass, write: ToSubClass] sint32 DODelayCacheServerFallbackForeground;
	[read: ToSubClass, write: ToSubClass] sint32 DODelayForegroundDownloadFromHttp;
	[read: ToSubClass, write: ToSubClass] sint32 DODownloadMode;
	[read: ToSubClass, write: ToSubClass] string DOGroupId;
	[read: ToSubClass, write: ToSubClass] sint32 DOGroupIdSource;
	[read: ToSubClass, write: ToSubClass] sint32 DOMaxBackgroundDownloadBandwidth;
	[read: ToSubClass, write: ToSubClass] sint32 DOMaxCacheAge;
	[read: ToSubClass, write: ToSubClass] sint32 DOMaxCacheSize;
	[read: ToSubClass, write: ToSubClass] sint32 DOMaxForegroundDownloadBandwidth;
	[read: ToSubClass, write: ToSubClass] sint32 DOMinBackgroundQos;
	[read: ToSubClass, write: ToSubClass] sint32 DOMinBatteryPercentageAllowedToUpload;
	[read: ToSubClass, write: ToSubClass] sint32 DOMinDiskSizeAllowedToPeer;
	[read: ToSubClass, write: ToSubClass] sint32 DOMinFileSizeToCache;
	[read: ToSubClass, write: ToSubClass] sint32 DOMinRAMAllowedToPeer;
	[read: ToSubClass, write: ToSubClass] string DOModifyCacheDrive;
	[read: ToSubClass, write: ToSubClass] sint32 DOMonthlyUploadDataCap;
	[read: ToSubClass, write: ToSubClass] sint32 DOPercentageMaxBackgroundBandwidth;
	[read: ToSubClass, write: ToSubClass] sint32 DOPercentageMaxForegroundBandwidth;
	[read: ToSubClass, write: ToSubClass] sint32 DORestrictPeerSelectionBy;
	[read: ToSubClass, write: ToSubClass] string DOSetHoursToLimitBackgroundDownloadBandwidth;
	[read: ToSubClass, write: ToSubClass] string DOSetHoursToLimitForegroundDownloadBandwidth;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_DeviceGuard02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureSystemGuardLaunch;
	[read: ToSubClass, write: ToSubClass] sint32 EnableVirtualizationBasedSecurity;
	[read: ToSubClass, write: ToSubClass] sint32 LsaCfgFlags;
	[read: ToSubClass, write: ToSubClass] sint32 RequirePlatformSecurityFeatures;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_DeviceHealthMonitoring02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowDeviceHealthMonitoring;
	[read: ToSubClass, write: ToSubClass] string ConfigDeviceHealthMonitoringScope;
	[read: ToSubClass, write: ToSubClass] string ConfigDeviceHealthMonitoringServiceInstance;
	[read: ToSubClass, write: ToSubClass] string ConfigDeviceHealthMonitoringUploadDestination;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_DeviceInstallation02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string AllowInstallationOfMatchingDeviceIDs;
	[read: ToSubClass, write: ToSubClass] string AllowInstallationOfMatchingDeviceInstanceIDs;
	[read: ToSubClass, write: ToSubClass] string AllowInstallationOfMatchingDeviceSetupClasses;
	[read: ToSubClass, write: ToSubClass] string EnableInstallationPolicyLayering;
	[read: ToSubClass, write: ToSubClass] string PreventDeviceMetadataFromNetwork;
	[read: ToSubClass, write: ToSubClass] string PreventInstallationOfDevicesNotDescribedByOtherPolicySettings;
	[read: ToSubClass, write: ToSubClass] string PreventInstallationOfMatchingDeviceIDs;
	[read: ToSubClass, write: ToSubClass] string PreventInstallationOfMatchingDeviceInstanceIDs;
	[read: ToSubClass, write: ToSubClass] string PreventInstallationOfMatchingDeviceSetupClasses;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_DeviceLock02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowScreenTimeoutWhileLockedUserConfig;
	[read: ToSubClass, write: ToSubClass] string EnforceLockScreenAndLogonImage;
	[read: ToSubClass, write: ToSubClass] string EnforceLockScreenProvider;
	[read: ToSubClass, write: ToSubClass] sint32 MinimumPasswordAge;
	[read: ToSubClass, write: ToSubClass] string PreventEnablingLockScreenCamera;
	[read: ToSubClass, write: ToSubClass] string PreventLockScreenSlideShow;
	[read: ToSubClass, write: ToSubClass] sint32 ScreenTimeoutWhileLocked;
	[read: ToSubClass, write: ToSubClass] sint32 DevicePasswordEnabled;
	[read: ToSubClass, write: ToSubClass] sint32 AllowSimpleDevicePassword;
	[read: ToSubClass, write: ToSubClass] sint32 MinDevicePasswordLength;
	[read: ToSubClass, write: ToSubClass] sint32 AlphanumericDevicePasswordRequired;
	[read: ToSubClass, write: ToSubClass] sint32 MinDevicePasswordComplexCharacters;
	[read: ToSubClass, write: ToSubClass] sint32 DevicePasswordExpiration;
	[read: ToSubClass, write: ToSubClass] sint32 DevicePasswordHistory;
	[read: ToSubClass, write: ToSubClass] sint32 MaxDevicePasswordFailedAttempts;
	[read: ToSubClass, write: ToSubClass] sint32 MaxInactivityTimeDeviceLock;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Display02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string DisablePerProcessDpiForApps;
	[read: ToSubClass, write: ToSubClass] sint32 EnablePerProcessDpi;
	[read: ToSubClass, write: ToSubClass] string EnablePerProcessDpiForApps;
	[read: ToSubClass, write: ToSubClass] string TurnOffGdiDPIScalingForApps;
	[read: ToSubClass, write: ToSubClass] string TurnOnGdiDPIScalingForApps;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_DisplayEnhancement02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string AutobrightnessLuxToNitsCurve;
	[read: ToSubClass, write: ToSubClass] sint32 DefaultAdaptiveColorAdaptationStrength;
	[read: ToSubClass, write: ToSubClass] sint32 DefaultBatterySaverBrightnessMultiplier;
	[read: ToSubClass, write: ToSubClass] sint32 DefaultBrightnessSliderPercentage;
	[read: ToSubClass, write: ToSubClass] sint32 DefaultDimBrightnessMultiplier;
	[read: ToSubClass, write: ToSubClass] sint32 IsAdaptiveColorOnByDefault;
	[read: ToSubClass, write: ToSubClass] sint32 IsAutobrightnessOnByDefault;
	[read: ToSubClass, write: ToSubClass] sint32 ShouldStopTransitionDuringHandsOnDisplay;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_DmaGuard02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 DeviceEnumerationPolicy;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Eap02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowTLS1_3;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_ErrorReporting02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string CustomizeConsentSettings;
	[read: ToSubClass, write: ToSubClass] string DisableWindowsErrorReporting;
	[read: ToSubClass, write: ToSubClass] string DisplayErrorNotification;
	[read: ToSubClass, write: ToSubClass] string DoNotSendAdditionalData;
	[read: ToSubClass, write: ToSubClass] string PreventCriticalErrorDisplay;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_EventLogService02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string ControlEventLogBehavior;
	[read: ToSubClass, write: ToSubClass] string SpecifyMaximumFileSizeApplicationLog;
	[read: ToSubClass, write: ToSubClass] string SpecifyMaximumFileSizeSecurityLog;
	[read: ToSubClass, write: ToSubClass] string SpecifyMaximumFileSizeSystemLog;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Experience02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowClipboardHistory;
	[read: ToSubClass, write: ToSubClass] sint32 AllowCortana;
	[read: ToSubClass, write: ToSubClass] sint32 AllowDeviceDiscovery;
	[read: ToSubClass, write: ToSubClass] sint32 AllowFindMyDevice;
	[read: ToSubClass, write: ToSubClass] sint32 AllowManualMDMUnenrollment;
	[read: ToSubClass, write: ToSubClass] sint32 AllowSaveAsOfOfficeFiles;
	[read: ToSubClass, write: ToSubClass] sint32 AllowScreenCapture;
	[read: ToSubClass, write: ToSubClass] sint32 AllowSharingOfOfficeFiles;
	[read: ToSubClass, write: ToSubClass] sint32 AllowSIMErrorDialogPromptWhenNoSIM;
	[read: ToSubClass, write: ToSubClass] sint32 AllowSyncMySettings;
	[read: ToSubClass, write: ToSubClass] sint32 AllowWindowsConsumerFeatures;
	[read: ToSubClass, write: ToSubClass] sint32 AllowWindowsTips;
	[read: ToSubClass, write: ToSubClass] sint32 DisableCloudOptimizedContent;
	[read: ToSubClass, write: ToSubClass] sint32 DisableConsumerAccountStateContent;
	[read: ToSubClass, write: ToSubClass] sint32 DoNotShowFeedbackNotifications;
	[read: ToSubClass, write: ToSubClass] sint32 DoNotSyncBrowserSettings;
	[read: ToSubClass, write: ToSubClass] sint32 PreventUsersFromTurningOnBrowserSyncing;
	[read: ToSubClass, write: ToSubClass] sint32 ShowLockOnUserTile;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_ExploitGuard02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string ExploitProtectionSettings;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Feeds02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 FeedsEnabled;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_FileExplorer02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string TurnOffDataExecutionPreventionForExplorer;
	[read: ToSubClass, write: ToSubClass] string TurnOffHeapTerminationOnCorruption;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Games02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowAdvancedGamingServices;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Handwriting02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 PanelDefaultModeDocked;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_HumanPresence02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 ForceInstantLock;
	[read: ToSubClass, write: ToSubClass] sint32 ForceInstantWake;
	[read: ToSubClass, write: ToSubClass] sint32 ForceLockTimeout;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_InternetExplorer02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string AddSearchProvider;
	[read: ToSubClass, write: ToSubClass] string AllowActiveXFiltering;
	[read: ToSubClass, write: ToSubClass] string AllowAddOnList;
	[read: ToSubClass, write: ToSubClass] string AllowCertificateAddressMismatchWarning;
	[read: ToSubClass, write: ToSubClass] string AllowDeletingBrowsingHistoryOnExit;
	[read: ToSubClass, write: ToSubClass] string AllowEnhancedProtectedMode;
	[read: ToSubClass, write: ToSubClass] string AllowEnhancedSuggestionsInAddressBar;
	[read: ToSubClass, write: ToSubClass] string AllowEnterpriseModeFromToolsMenu;
	[read: ToSubClass, write: ToSubClass] string AllowEnterpriseModeSiteList;
	[read: ToSubClass, write: ToSubClass] string AllowFallbackToSSL3;
	[read: ToSubClass, write: ToSubClass] string AllowInternetExplorer7PolicyList;
	[read: ToSubClass, write: ToSubClass] string AllowInternetExplorerStandardsMode;
	[read: ToSubClass, write: ToSubClass] string AllowInternetZoneTemplate;
	[read: ToSubClass, write: ToSubClass] string AllowIntranetZoneTemplate;
	[read: ToSubClass, write: ToSubClass] string AllowLocalMachineZoneTemplate;
	[read: ToSubClass, write: ToSubClass] string AllowLockedDownInternetZoneTemplate;
	[read: ToSubClass, write: ToSubClass] string AllowLockedDownIntranetZoneTemplate;
	[read: ToSubClass, write: ToSubClass] string AllowLockedDownLocalMachineZoneTemplate;
	[read: ToSubClass, write: ToSubClass] string AllowLockedDownRestrictedSitesZoneTemplate;
	[read: ToSubClass, write: ToSubClass] string AllowOneWordEntry;
	[read: ToSubClass, write: ToSubClass] string AllowSaveTargetAsInIEMode;
	[read: ToSubClass, write: ToSubClass] string AllowSiteToZoneAssignmentList;
	[read: ToSubClass, write: ToSubClass] string AllowsLockedDownTrustedSitesZoneTemplate;
	[read: ToSubClass, write: ToSubClass] string AllowSoftwareWhenSignatureIsInvalid;
	[read: ToSubClass, write: ToSubClass] string AllowsRestrictedSitesZoneTemplate;
	[read: ToSubClass, write: ToSubClass] string AllowSuggestedSites;
	[read: ToSubClass, write: ToSubClass] string AllowTrustedSitesZoneTemplate;
	[read: ToSubClass, write: ToSubClass] string CheckServerCertificateRevocation;
	[read: ToSubClass, write: ToSubClass] string CheckSignaturesOnDownloadedPrograms;
	[read: ToSubClass, write: ToSubClass] string ConfigureEdgeRedirectChannel;
	[read: ToSubClass, write: ToSubClass] string ConsistentMimeHandlingInternetExplorerProcesses;
	[read: ToSubClass, write: ToSubClass] string DisableBypassOfSmartScreenWarnings;
	[read: ToSubClass, write: ToSubClass] string DisableBypassOfSmartScreenWarningsAboutUncommonFiles;
	[read: ToSubClass, write: ToSubClass] string DisableCompatView;
	[read: ToSubClass, write: ToSubClass] string DisableConfiguringHistory;
	[read: ToSubClass, write: ToSubClass] string DisableCrashDetection;
	[read: ToSubClass, write: ToSubClass] string DisableCustomerExperienceImprovementProgramParticipation;
	[read: ToSubClass, write: ToSubClass] string DisableDeletingUserVisitedWebsites;
	[read: ToSubClass, write: ToSubClass] string DisableEnclosureDownloading;
	[read: ToSubClass, write: ToSubClass] string DisableEncryptionSupport;
	[read: ToSubClass, write: ToSubClass] string DisableFeedsBackgroundSync;
	[read: ToSubClass, write: ToSubClass] string DisableFirstRunWizard;
	[read: ToSubClass, write: ToSubClass] string DisableFlipAheadFeature;
	[read: ToSubClass, write: ToSubClass] string DisableGeolocation;
	[read: ToSubClass, write: ToSubClass] string DisableIgnoringCertificateErrors;
	[read: ToSubClass, write: ToSubClass] string DisableInPrivateBrowsing;
	[read: ToSubClass, write: ToSubClass] string DisableInternetExplorerApp;
	[read: ToSubClass, write: ToSubClass] string DisableProcessesInEnhancedProtectedMode;
	[read: ToSubClass, write: ToSubClass] string DisableProxyChange;
	[read: ToSubClass, write: ToSubClass] string DisableSearchProviderChange;
	[read: ToSubClass, write: ToSubClass] string DisableSecondaryHomePageChange;
	[read: ToSubClass, write: ToSubClass] string DisableSecuritySettingsCheck;
	[read: ToSubClass, write: ToSubClass] string DisableUpdateCheck;
	[read: ToSubClass, write: ToSubClass] string DisableWebAddressAutoComplete;
	[read: ToSubClass, write: ToSubClass] string DoNotAllowActiveXControlsInProtectedMode;
	[read: ToSubClass, write: ToSubClass] string DoNotAllowUsersToAddSites;
	[read: ToSubClass, write: ToSubClass] string DoNotAllowUsersToChangePolicies;
	[read: ToSubClass, write: ToSubClass] string DoNotBlockOutdatedActiveXControls;
	[read: ToSubClass, write: ToSubClass] string DoNotBlockOutdatedActiveXControlsOnSpecificDomains;
	[read: ToSubClass, write: ToSubClass] string EnableExtendedIEModeHotkeys;
	[read: ToSubClass, write: ToSubClass] string IncludeAllLocalSites;
	[read: ToSubClass, write: ToSubClass] string IncludeAllNetworkPaths;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowAccessToDataSources;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowCopyPasteViaScript;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowDragAndDropCopyAndPasteFiles;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowFontDownloads;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowLoadingOfXAMLFiles;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowOnlyApprovedDomainsToUseActiveXControls;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowOnlyApprovedDomainsToUseTDCActiveXControl;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowScriptingOfInternetExplorerWebBrowserControls;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowScriptInitiatedWindows;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowScriptlets;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowSmartScreenIE;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowUpdatesToStatusBarViaScript;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowUserDataPersistence;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowVBScriptToRunInInternetExplorer;
	[read: ToSubClass, write: ToSubClass] string InternetZoneDoNotRunAntimalwareAgainstActiveXControls;
	[read: ToSubClass, write: ToSubClass] string InternetZoneDownloadSignedActiveXControls;
	[read: ToSubClass, write: ToSubClass] string InternetZoneDownloadUnsignedActiveXControls;
	[read: ToSubClass, write: ToSubClass] string InternetZoneEnableCrossSiteScriptingFilter;
	[read: ToSubClass, write: ToSubClass] string InternetZoneEnableDraggingOfContentFromDifferentDomainsAcrossWindows;
	[read: ToSubClass, write: ToSubClass] string InternetZoneEnableDraggingOfContentFromDifferentDomainsWithinWindows;
	[read: ToSubClass, write: ToSubClass] string InternetZoneEnableMIMESniffing;
	[read: ToSubClass, write: ToSubClass] string InternetZoneEnableProtectedMode;
	[read: ToSubClass, write: ToSubClass] string InternetZoneIncludeLocalPathWhenUploadingFilesToServer;
	[read: ToSubClass, write: ToSubClass] string InternetZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write: ToSubClass] string InternetZoneJavaPermissions;
	[read: ToSubClass, write: ToSubClass] string InternetZoneLaunchingApplicationsAndFilesInIFRAME;
	[read: ToSubClass, write: ToSubClass] string InternetZoneLogonOptions;
	[read: ToSubClass, write: ToSubClass] string InternetZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write: ToSubClass] string InternetZoneRunNETFrameworkReliantComponentsSignedWithAuthenticode;
	[read: ToSubClass, write: ToSubClass] string InternetZoneShowSecurityWarningForPotentiallyUnsafeFiles;
	[read: ToSubClass, write: ToSubClass] string InternetZoneUsePopupBlocker;
	[read: ToSubClass, write: ToSubClass] string IntranetZoneAllowAccessToDataSources;
	[read: ToSubClass, write: ToSubClass] string IntranetZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write: ToSubClass] string IntranetZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write: ToSubClass] string IntranetZoneAllowFontDownloads;
	[read: ToSubClass, write: ToSubClass] string IntranetZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write: ToSubClass] string IntranetZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write: ToSubClass] string IntranetZoneAllowScriptlets;
	[read: ToSubClass, write: ToSubClass] string IntranetZoneAllowSmartScreenIE;
	[read: ToSubClass, write: ToSubClass] string IntranetZoneAllowUserDataPersistence;
	[read: ToSubClass, write: ToSubClass] string IntranetZoneDoNotRunAntimalwareAgainstActiveXControls;
	[read: ToSubClass, write: ToSubClass] string IntranetZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write: ToSubClass] string IntranetZoneJavaPermissions;
	[read: ToSubClass, write: ToSubClass] string IntranetZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write: ToSubClass] string JScriptReplacement;
	[read: ToSubClass, write: ToSubClass] string KeepIntranetSitesInInternetExplorer;
	[read: ToSubClass, write: ToSubClass] string LocalMachineZoneAllowAccessToDataSources;
	[read: ToSubClass, write: ToSubClass] string LocalMachineZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write: ToSubClass] string LocalMachineZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write: ToSubClass] string LocalMachineZoneAllowFontDownloads;
	[read: ToSubClass, write: ToSubClass] string LocalMachineZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write: ToSubClass] string LocalMachineZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write: ToSubClass] string LocalMachineZoneAllowScriptlets;
	[read: ToSubClass, write: ToSubClass] string LocalMachineZoneAllowSmartScreenIE;
	[read: ToSubClass, write: ToSubClass] string LocalMachineZoneAllowUserDataPersistence;
	[read: ToSubClass, write: ToSubClass] string LocalMachineZoneDoNotRunAntimalwareAgainstActiveXControls;
	[read: ToSubClass, write: ToSubClass] string LocalMachineZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write: ToSubClass] string LocalMachineZoneJavaPermissions;
	[read: ToSubClass, write: ToSubClass] string LocalMachineZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write: ToSubClass] string LockedDownInternetZoneAllowAccessToDataSources;
	[read: ToSubClass, write: ToSubClass] string LockedDownInternetZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write: ToSubClass] string LockedDownInternetZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write: ToSubClass] string LockedDownInternetZoneAllowFontDownloads;
	[read: ToSubClass, write: ToSubClass] string LockedDownInternetZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write: ToSubClass] string LockedDownInternetZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write: ToSubClass] string LockedDownInternetZoneAllowScriptlets;
	[read: ToSubClass, write: ToSubClass] string LockedDownInternetZoneAllowSmartScreenIE;
	[read: ToSubClass, write: ToSubClass] string LockedDownInternetZoneAllowUserDataPersistence;
	[read: ToSubClass, write: ToSubClass] string LockedDownInternetZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write: ToSubClass] string LockedDownInternetZoneJavaPermissions;
	[read: ToSubClass, write: ToSubClass] string LockedDownInternetZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write: ToSubClass] string LockedDownIntranetJavaPermissions;
	[read: ToSubClass, write: ToSubClass] string LockedDownIntranetZoneAllowAccessToDataSources;
	[read: ToSubClass, write: ToSubClass] string LockedDownIntranetZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write: ToSubClass] string LockedDownIntranetZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write: ToSubClass] string LockedDownIntranetZoneAllowFontDownloads;
	[read: ToSubClass, write: ToSubClass] string LockedDownIntranetZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write: ToSubClass] string LockedDownIntranetZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write: ToSubClass] string LockedDownIntranetZoneAllowScriptlets;
	[read: ToSubClass, write: ToSubClass] string LockedDownIntranetZoneAllowSmartScreenIE;
	[read: ToSubClass, write: ToSubClass] string LockedDownIntranetZoneAllowUserDataPersistence;
	[read: ToSubClass, write: ToSubClass] string LockedDownIntranetZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write: ToSubClass] string LockedDownIntranetZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write: ToSubClass] string LockedDownLocalMachineZoneAllowAccessToDataSources;
	[read: ToSubClass, write: ToSubClass] string LockedDownLocalMachineZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write: ToSubClass] string LockedDownLocalMachineZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write: ToSubClass] string LockedDownLocalMachineZoneAllowFontDownloads;
	[read: ToSubClass, write: ToSubClass] string LockedDownLocalMachineZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write: ToSubClass] string LockedDownLocalMachineZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write: ToSubClass] string LockedDownLocalMachineZoneAllowScriptlets;
	[read: ToSubClass, write: ToSubClass] string LockedDownLocalMachineZoneAllowSmartScreenIE;
	[read: ToSubClass, write: ToSubClass] string LockedDownLocalMachineZoneAllowUserDataPersistence;
	[read: ToSubClass, write: ToSubClass] string LockedDownLocalMachineZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write: ToSubClass] string LockedDownLocalMachineZoneJavaPermissions;
	[read: ToSubClass, write: ToSubClass] string LockedDownLocalMachineZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write: ToSubClass] string LockedDownRestrictedSitesZoneAllowAccessToDataSources;
	[read: ToSubClass, write: ToSubClass] string LockedDownRestrictedSitesZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write: ToSubClass] string LockedDownRestrictedSitesZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write: ToSubClass] string LockedDownRestrictedSitesZoneAllowFontDownloads;
	[read: ToSubClass, write: ToSubClass] string LockedDownRestrictedSitesZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write: ToSubClass] string LockedDownRestrictedSitesZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write: ToSubClass] string LockedDownRestrictedSitesZoneAllowScriptlets;
	[read: ToSubClass, write: ToSubClass] string LockedDownRestrictedSitesZoneAllowSmartScreenIE;
	[read: ToSubClass, write: ToSubClass] string LockedDownRestrictedSitesZoneAllowUserDataPersistence;
	[read: ToSubClass, write: ToSubClass] string LockedDownRestrictedSitesZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write: ToSubClass] string LockedDownRestrictedSitesZoneJavaPermissions;
	[read: ToSubClass, write: ToSubClass] string LockedDownRestrictedSitesZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write: ToSubClass] string LockedDownTrustedSitesZoneAllowAccessToDataSources;
	[read: ToSubClass, write: ToSubClass] string LockedDownTrustedSitesZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write: ToSubClass] string LockedDownTrustedSitesZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write: ToSubClass] string LockedDownTrustedSitesZoneAllowFontDownloads;
	[read: ToSubClass, write: ToSubClass] string LockedDownTrustedSitesZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write: ToSubClass] string LockedDownTrustedSitesZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write: ToSubClass] string LockedDownTrustedSitesZoneAllowScriptlets;
	[read: ToSubClass, write: ToSubClass] string LockedDownTrustedSitesZoneAllowSmartScreenIE;
	[read: ToSubClass, write: ToSubClass] string LockedDownTrustedSitesZoneAllowUserDataPersistence;
	[read: ToSubClass, write: ToSubClass] string LockedDownTrustedSitesZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write: ToSubClass] string LockedDownTrustedSitesZoneJavaPermissions;
	[read: ToSubClass, write: ToSubClass] string LockedDownTrustedSitesZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write: ToSubClass] string MimeSniffingSafetyFeatureInternetExplorerProcesses;
	[read: ToSubClass, write: ToSubClass] string MKProtocolSecurityRestrictionInternetExplorerProcesses;
	[read: ToSubClass, write: ToSubClass] string NewTabDefaultPage;
	[read: ToSubClass, write: ToSubClass] string NotificationBarInternetExplorerProcesses;
	[read: ToSubClass, write: ToSubClass] string PreventManagingSmartScreenFilter;
	[read: ToSubClass, write: ToSubClass] string PreventPerUserInstallationOfActiveXControls;
	[read: ToSubClass, write: ToSubClass] string ProtectionFromZoneElevationInternetExplorerProcesses;
	[read: ToSubClass, write: ToSubClass] string RemoveRunThisTimeButtonForOutdatedActiveXControls;
	[read: ToSubClass, write: ToSubClass] string RestrictActiveXInstallInternetExplorerProcesses;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowAccessToDataSources;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowActiveScripting;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowBinaryAndScriptBehaviors;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowCopyPasteViaScript;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowDragAndDropCopyAndPasteFiles;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowFileDownloads;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowFontDownloads;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowLoadingOfXAMLFiles;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowMETAREFRESH;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowOnlyApprovedDomainsToUseActiveXControls;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowOnlyApprovedDomainsToUseTDCActiveXControl;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowScriptingOfInternetExplorerWebBrowserControls;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowScriptInitiatedWindows;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowScriptlets;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowSmartScreenIE;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowUpdatesToStatusBarViaScript;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowUserDataPersistence;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowVBScriptToRunInInternetExplorer;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneDoNotRunAntimalwareAgainstActiveXControls;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneDownloadSignedActiveXControls;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneDownloadUnsignedActiveXControls;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneEnableCrossSiteScriptingFilter;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneEnableDraggingOfContentFromDifferentDomainsAcrossWindows;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneEnableDraggingOfContentFromDifferentDomainsWithinWindows;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneEnableMIMESniffing;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneIncludeLocalPathWhenUploadingFilesToServer;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneJavaPermissions;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneLaunchingApplicationsAndFilesInIFRAME;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneLogonOptions;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneRunActiveXControlsAndPlugins;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneRunNETFrameworkReliantComponentsSignedWithAuthenticode;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneScriptActiveXControlsMarkedSafeForScripting;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneScriptingOfJavaApplets;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneShowSecurityWarningForPotentiallyUnsafeFiles;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneTurnOnProtectedMode;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneUsePopupBlocker;
	[read: ToSubClass, write: ToSubClass] string RestrictFileDownloadInternetExplorerProcesses;
	[read: ToSubClass, write: ToSubClass] string ScriptedWindowSecurityRestrictionsInternetExplorerProcesses;
	[read: ToSubClass, write: ToSubClass] string SearchProviderList;
	[read: ToSubClass, write: ToSubClass] string SecurityZonesUseOnlyMachineSettings;
	[read: ToSubClass, write: ToSubClass] string SendSitesNotInEnterpriseSiteListToEdge;
	[read: ToSubClass, write: ToSubClass] string SpecifyUseOfActiveXInstallerService;
	[read: ToSubClass, write: ToSubClass] string TrustedSitesZoneAllowAccessToDataSources;
	[read: ToSubClass, write: ToSubClass] string TrustedSitesZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write: ToSubClass] string TrustedSitesZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write: ToSubClass] string TrustedSitesZoneAllowFontDownloads;
	[read: ToSubClass, write: ToSubClass] string TrustedSitesZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write: ToSubClass] string TrustedSitesZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write: ToSubClass] string TrustedSitesZoneAllowScriptlets;
	[read: ToSubClass, write: ToSubClass] string TrustedSitesZoneAllowSmartScreenIE;
	[read: ToSubClass, write: ToSubClass] string TrustedSitesZoneAllowUserDataPersistence;
	[read: ToSubClass, write: ToSubClass] string TrustedSitesZoneDoNotRunAntimalwareAgainstActiveXControls;
	[read: ToSubClass, write: ToSubClass] string TrustedSitesZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write: ToSubClass] string TrustedSitesZoneJavaPermissions;
	[read: ToSubClass, write: ToSubClass] string TrustedSitesZoneNavigateWindowsAndFrames;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Kerberos02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string AllowForestSearchOrder;
	[read: ToSubClass, write: ToSubClass] sint32 CloudKerberosTicketRetrievalEnabled;
	[read: ToSubClass, write: ToSubClass] string KerberosClientSupportsClaimsCompoundArmor;
	[read: ToSubClass, write: ToSubClass] string RequireKerberosArmoring;
	[read: ToSubClass, write: ToSubClass] string RequireStrictKDCValidation;
	[read: ToSubClass, write: ToSubClass] string SetMaximumContextTokenSize;
	[read: ToSubClass, write: ToSubClass] string UPNNameHints;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_KioskBrowser02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string BlockedUrlExceptions;
	[read: ToSubClass, write: ToSubClass] string BlockedUrls;
	[read: ToSubClass, write: ToSubClass] string DefaultURL;
	[read: ToSubClass, write: ToSubClass] sint32 EnableEndSessionButton;
	[read: ToSubClass, write: ToSubClass] sint32 EnableHomeButton;
	[read: ToSubClass, write: ToSubClass] sint32 EnableNavigationButtons;
	[read: ToSubClass, write: ToSubClass] sint32 RestartOnIdleTime;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_LanmanWorkstation02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 EnableInsecureGuestLogons;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Licensing02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowWindowsEntitlementReactivation;
	[read: ToSubClass, write: ToSubClass] sint32 DisallowKMSClientOnlineAVSValidation;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_LocalPoliciesSecurityOptions02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 Accounts_BlockMicrosoftAccounts;
	[read: ToSubClass, write: ToSubClass] sint32 Accounts_EnableAdministratorAccountStatus;
	[read: ToSubClass, write: ToSubClass] sint32 Accounts_EnableGuestAccountStatus;
	[read: ToSubClass, write: ToSubClass] sint32 Accounts_LimitLocalAccountUseOfBlankPasswordsToConsoleLogonOnly;
	[read: ToSubClass, write: ToSubClass] string Accounts_RenameAdministratorAccount;
	[read: ToSubClass, write: ToSubClass] string Accounts_RenameGuestAccount;
	[read: ToSubClass, write: ToSubClass] string Devices_AllowedToFormatAndEjectRemovableMedia;
	[read: ToSubClass, write: ToSubClass] sint32 Devices_AllowUndockWithoutHavingToLogon;
	[read: ToSubClass, write: ToSubClass] sint32 Devices_PreventUsersFromInstallingPrinterDriversWhenConnectingToSharedPrinters;
	[read: ToSubClass, write: ToSubClass] string Devices_RestrictCDROMAccessToLocallyLoggedOnUserOnly;
	[read: ToSubClass, write: ToSubClass] sint32 InteractiveLogon_DisplayUserInformationWhenTheSessionIsLocked;
	[read: ToSubClass, write: ToSubClass] sint32 InteractiveLogon_DoNotDisplayLastSignedIn;
	[read: ToSubClass, write: ToSubClass] sint32 InteractiveLogon_DoNotDisplayUsernameAtSignIn;
	[read: ToSubClass, write: ToSubClass] sint32 InteractiveLogon_DoNotRequireCTRLALTDEL;
	[read: ToSubClass, write: ToSubClass] sint32 InteractiveLogon_MachineInactivityLimit;
	[read: ToSubClass, write: ToSubClass] string InteractiveLogon_MessageTextForUsersAttemptingToLogOn;
	[read: ToSubClass, write: ToSubClass] string InteractiveLogon_MessageTitleForUsersAttemptingToLogOn;
	[read: ToSubClass, write: ToSubClass] string InteractiveLogon_SmartCardRemovalBehavior;
	[read: ToSubClass, write: ToSubClass] sint32 MicrosoftNetworkClient_DigitallySignCommunicationsAlways;
	[read: ToSubClass, write: ToSubClass] sint32 MicrosoftNetworkClient_DigitallySignCommunicationsIfServerAgrees;
	[read: ToSubClass, write: ToSubClass] sint32 MicrosoftNetworkClient_SendUnencryptedPasswordToThirdPartySMBServers;
	[read: ToSubClass, write: ToSubClass] sint32 MicrosoftNetworkServer_DigitallySignCommunicationsAlways;
	[read: ToSubClass, write: ToSubClass] sint32 MicrosoftNetworkServer_DigitallySignCommunicationsIfClientAgrees;
	[read: ToSubClass, write: ToSubClass] sint32 NetworkAccess_DoNotAllowAnonymousEnumerationOfSAMAccounts;
	[read: ToSubClass, write: ToSubClass] sint32 NetworkAccess_DoNotAllowAnonymousEnumerationOfSamAccountsAndShares;
	[read: ToSubClass, write: ToSubClass] sint32 NetworkAccess_RestrictAnonymousAccessToNamedPipesAndShares;
	[read: ToSubClass, write: ToSubClass] string NetworkAccess_RestrictClientsAllowedToMakeRemoteCallsToSAM;
	[read: ToSubClass, write: ToSubClass] sint32 NetworkSecurity_AllowLocalSystemToUseComputerIdentityForNTLM;
	[read: ToSubClass, write: ToSubClass] sint32 NetworkSecurity_AllowPKU2UAuthenticationRequests;
	[read: ToSubClass, write: ToSubClass] sint32 NetworkSecurity_DoNotStoreLANManagerHashValueOnNextPasswordChange;
	[read: ToSubClass, write: ToSubClass] sint32 NetworkSecurity_LANManagerAuthenticationLevel;
	[read: ToSubClass, write: ToSubClass] sint32 NetworkSecurity_MinimumSessionSecurityForNTLMSSPBasedClients;
	[read: ToSubClass, write: ToSubClass] sint32 NetworkSecurity_MinimumSessionSecurityForNTLMSSPBasedServers;
	[read: ToSubClass, write: ToSubClass] string NetworkSecurity_RestrictNTLM_AddRemoteServerExceptionsForNTLMAuthentication;
	[read: ToSubClass, write: ToSubClass] sint32 NetworkSecurity_RestrictNTLM_AuditIncomingNTLMTraffic;
	[read: ToSubClass, write: ToSubClass] sint32 NetworkSecurity_RestrictNTLM_IncomingNTLMTraffic;
	[read: ToSubClass, write: ToSubClass] sint32 NetworkSecurity_RestrictNTLM_OutgoingNTLMTrafficToRemoteServers;
	[read: ToSubClass, write: ToSubClass] sint32 Shutdown_AllowSystemToBeShutDownWithoutHavingToLogOn;
	[read: ToSubClass, write: ToSubClass] sint32 Shutdown_ClearVirtualMemoryPageFile;
	[read: ToSubClass, write: ToSubClass] sint32 UserAccountControl_AllowUIAccessApplicationsToPromptForElevation;
	[read: ToSubClass, write: ToSubClass] sint32 UserAccountControl_BehaviorOfTheElevationPromptForAdministrators;
	[read: ToSubClass, write: ToSubClass] sint32 UserAccountControl_BehaviorOfTheElevationPromptForStandardUsers;
	[read: ToSubClass, write: ToSubClass] sint32 UserAccountControl_DetectApplicationInstallationsAndPromptForElevation;
	[read: ToSubClass, write: ToSubClass] sint32 UserAccountControl_OnlyElevateExecutableFilesThatAreSignedAndValidated;
	[read: ToSubClass, write: ToSubClass] sint32 UserAccountControl_OnlyElevateUIAccessApplicationsThatAreInstalledInSecureLocations;
	[read: ToSubClass, write: ToSubClass] sint32 UserAccountControl_RunAllAdministratorsInAdminApprovalMode;
	[read: ToSubClass, write: ToSubClass] sint32 UserAccountControl_SwitchToTheSecureDesktopWhenPromptingForElevation;
	[read: ToSubClass, write: ToSubClass] sint32 UserAccountControl_UseAdminApprovalMode;
	[read: ToSubClass, write: ToSubClass] sint32 UserAccountControl_VirtualizeFileAndRegistryWriteFailuresToPerUserLocations;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_LocalUsersAndGroups02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string Configure;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_LockDown02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowEdgeSwipe;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Maps02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowOfflineMapsDownloadOverMeteredConnection;
	[read: ToSubClass, write: ToSubClass] sint32 EnableOfflineMapsAutoUpdate;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_MemoryDump02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowCrashDump;
	[read: ToSubClass, write: ToSubClass] sint32 AllowLiveDump;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Messaging02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowMessageSync;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_MixedReality02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AADGroupMembershipCacheValidityInDays;
	[read: ToSubClass, write: ToSubClass] sint32 AllowLaunchUriInSingleAppKiosk;
	[read: ToSubClass, write: ToSubClass] sint32 AutomaticDisplayAdjustment;
	[read: ToSubClass, write: ToSubClass] sint32 BrightnessButtonDisabled;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureMovingPlatform;
	[read: ToSubClass, write: ToSubClass] sint32 EyeTrackingCalibrationPrompt;
	[read: ToSubClass, write: ToSubClass] sint32 FallbackDiagnostics;
	[read: ToSubClass, write: ToSubClass] sint32 HeadTrackingMode;
	[read: ToSubClass, write: ToSubClass] sint32 ManualDownDirectionDisabled;
	[read: ToSubClass, write: ToSubClass] sint32 MicrophoneDisabled;
	[read: ToSubClass, write: ToSubClass] sint32 VisitorAutoLogon;
	[read: ToSubClass, write: ToSubClass] sint32 VolumeButtonDisabled;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_MSSecurityGuide02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string ApplyUACRestrictionsToLocalAccountsOnNetworkLogon;
	[read: ToSubClass, write: ToSubClass] string ConfigureSMBV1ClientDriver;
	[read: ToSubClass, write: ToSubClass] string ConfigureSMBV1Server;
	[read: ToSubClass, write: ToSubClass] string EnableStructuredExceptionHandlingOverwriteProtection;
	[read: ToSubClass, write: ToSubClass] string TurnOnWindowsDefenderProtectionAgainstPotentiallyUnwantedApplications;
	[read: ToSubClass, write: ToSubClass] string WDigestAuthentication;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_MSSLegacy02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string AllowICMPRedirectsToOverrideOSPFGeneratedRoutes;
	[read: ToSubClass, write: ToSubClass] string AllowTheComputerToIgnoreNetBIOSNameReleaseRequestsExceptFromWINSServers;
	[read: ToSubClass, write: ToSubClass] string IPSourceRoutingProtectionLevel;
	[read: ToSubClass, write: ToSubClass] string IPv6SourceRoutingProtectionLevel;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_NetworkIsolation02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string EnterpriseCloudResources;
	[read: ToSubClass, write: ToSubClass] string EnterpriseInternalProxyServers;
	[read: ToSubClass, write: ToSubClass] string EnterpriseIPRange;
	[read: ToSubClass, write: ToSubClass] sint32 EnterpriseIPRangesAreAuthoritative;
	[read: ToSubClass, write: ToSubClass] string EnterpriseNetworkDomainNames;
	[read: ToSubClass, write: ToSubClass] string EnterpriseProxyServers;
	[read: ToSubClass, write: ToSubClass] sint32 EnterpriseProxyServersAreAuthoritative;
	[read: ToSubClass, write: ToSubClass] string NeutralResources;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_NetworkListManager02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string AllowedTlsAuthenticationEndpoints;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_NewsAndInterests02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowNewsAndInterests;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Notifications02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 DisallowCloudNotification;
	[read: ToSubClass, write: ToSubClass] string WnsEndpoint;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Power02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowHibernate;
	[read: ToSubClass, write: ToSubClass] string AllowStandbyStatesWhenSleepingOnBattery;
	[read: ToSubClass, write: ToSubClass] string AllowStandbyWhenSleepingPluggedIn;
	[read: ToSubClass, write: ToSubClass] string DisplayOffTimeoutOnBattery;
	[read: ToSubClass, write: ToSubClass] string DisplayOffTimeoutPluggedIn;
	[read: ToSubClass, write: ToSubClass] sint32 EnergySaverBatteryThresholdOnBattery;
	[read: ToSubClass, write: ToSubClass] sint32 EnergySaverBatteryThresholdPluggedIn;
	[read: ToSubClass, write: ToSubClass] string HibernateTimeoutOnBattery;
	[read: ToSubClass, write: ToSubClass] string HibernateTimeoutPluggedIn;
	[read: ToSubClass, write: ToSubClass] string RequirePasswordWhenComputerWakesOnBattery;
	[read: ToSubClass, write: ToSubClass] string RequirePasswordWhenComputerWakesPluggedIn;
	[read: ToSubClass, write: ToSubClass] sint32 SelectLidCloseActionOnBattery;
	[read: ToSubClass, write: ToSubClass] sint32 SelectLidCloseActionPluggedIn;
	[read: ToSubClass, write: ToSubClass] sint32 SelectPowerButtonActionOnBattery;
	[read: ToSubClass, write: ToSubClass] sint32 SelectPowerButtonActionPluggedIn;
	[read: ToSubClass, write: ToSubClass] sint32 SelectSleepButtonActionOnBattery;
	[read: ToSubClass, write: ToSubClass] sint32 SelectSleepButtonActionPluggedIn;
	[read: ToSubClass, write: ToSubClass] string StandbyTimeoutOnBattery;
	[read: ToSubClass, write: ToSubClass] string StandbyTimeoutPluggedIn;
	[read: ToSubClass, write: ToSubClass] sint32 TurnOffHybridSleepOnBattery;
	[read: ToSubClass, write: ToSubClass] sint32 TurnOffHybridSleepPluggedIn;
	[read: ToSubClass, write: ToSubClass] sint32 UnattendedSleepTimeoutOnBattery;
	[read: ToSubClass, write: ToSubClass] sint32 UnattendedSleepTimeoutPluggedIn;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Printers02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string ApprovedUsbPrintDevices;
	[read: ToSubClass, write: ToSubClass] string EnableDeviceControl;
	[read: ToSubClass, write: ToSubClass] string PointAndPrintRestrictions;
	[read: ToSubClass, write: ToSubClass] string PublishPrinters;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Privacy02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowAutoAcceptPairingAndPrivacyConsentPrompts;
	[read: ToSubClass, write: ToSubClass] sint32 AllowCrossDeviceClipboard;
	[read: ToSubClass, write: ToSubClass] sint32 AllowInputPersonalization;
	[read: ToSubClass, write: ToSubClass] sint32 DisableAdvertisingId;
	[read: ToSubClass, write: ToSubClass] sint32 DisablePrivacyExperience;
	[read: ToSubClass, write: ToSubClass] sint32 EnableActivityFeed;
	[read: ToSubClass, write: ToSubClass] sint32 LetAppsAccessAccountInfo;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessAccountInfo_ForceAllowTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessAccountInfo_ForceDenyTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessAccountInfo_UserInControlOfTheseApps;
	[read: ToSubClass, write: ToSubClass] sint32 LetAppsAccessBackgroundSpatialPerception;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessBackgroundSpatialPerception_ForceAllowTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessBackgroundSpatialPerception_ForceDenyTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessBackgroundSpatialPerception_UserInControlOfTheseApps;
	[read: ToSubClass, write: ToSubClass] sint32 LetAppsAccessCalendar;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessCalendar_ForceAllowTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessCalendar_ForceDenyTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessCalendar_UserInControlOfTheseApps;
	[read: ToSubClass, write: ToSubClass] sint32 LetAppsAccessCallHistory;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessCallHistory_ForceAllowTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessCallHistory_ForceDenyTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessCallHistory_UserInControlOfTheseApps;
	[read: ToSubClass, write: ToSubClass] sint32 LetAppsAccessCamera;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessCamera_ForceAllowTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessCamera_ForceDenyTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessCamera_UserInControlOfTheseApps;
	[read: ToSubClass, write: ToSubClass] sint32 LetAppsAccessContacts;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessContacts_ForceAllowTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessContacts_ForceDenyTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessContacts_UserInControlOfTheseApps;
	[read: ToSubClass, write: ToSubClass] sint32 LetAppsAccessEmail;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessEmail_ForceAllowTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessEmail_ForceDenyTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessEmail_UserInControlOfTheseApps;
	[read: ToSubClass, write: ToSubClass] sint32 LetAppsAccessGazeInput;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessGazeInput_ForceAllowTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessGazeInput_ForceDenyTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessGazeInput_UserInControlOfTheseApps;
	[read: ToSubClass, write: ToSubClass] sint32 LetAppsAccessGraphicsCaptureProgrammatic;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessGraphicsCaptureProgrammatic_ForceAllowTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessGraphicsCaptureProgrammatic_ForceDenyTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessGraphicsCaptureProgrammatic_UserInControlOfTheseApps;
	[read: ToSubClass, write: ToSubClass] sint32 LetAppsAccessGraphicsCaptureWithoutBorder;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessGraphicsCaptureWithoutBorder_ForceAllowTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessGraphicsCaptureWithoutBorder_ForceDenyTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessGraphicsCaptureWithoutBorder_UserInControlOfTheseApps;
	[read: ToSubClass, write: ToSubClass] sint32 LetAppsAccessLocation;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessLocation_ForceAllowTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessLocation_ForceDenyTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessLocation_UserInControlOfTheseApps;
	[read: ToSubClass, write: ToSubClass] sint32 LetAppsAccessMessaging;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessMessaging_ForceAllowTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessMessaging_ForceDenyTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessMessaging_UserInControlOfTheseApps;
	[read: ToSubClass, write: ToSubClass] sint32 LetAppsAccessMicrophone;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessMicrophone_ForceAllowTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessMicrophone_ForceDenyTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessMicrophone_UserInControlOfTheseApps;
	[read: ToSubClass, write: ToSubClass] sint32 LetAppsAccessMotion;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessMotion_ForceAllowTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessMotion_ForceDenyTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessMotion_UserInControlOfTheseApps;
	[read: ToSubClass, write: ToSubClass] sint32 LetAppsAccessNotifications;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessNotifications_ForceAllowTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessNotifications_ForceDenyTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessNotifications_UserInControlOfTheseApps;
	[read: ToSubClass, write: ToSubClass] sint32 LetAppsAccessPhone;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessPhone_ForceAllowTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessPhone_ForceDenyTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessPhone_UserInControlOfTheseApps;
	[read: ToSubClass, write: ToSubClass] sint32 LetAppsAccessRadios;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessRadios_ForceAllowTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessRadios_ForceDenyTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessRadios_UserInControlOfTheseApps;
	[read: ToSubClass, write: ToSubClass] sint32 LetAppsAccessTasks;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessTasks_ForceAllowTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessTasks_ForceDenyTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessTasks_UserInControlOfTheseApps;
	[read: ToSubClass, write: ToSubClass] sint32 LetAppsAccessTrustedDevices;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessTrustedDevices_ForceAllowTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessTrustedDevices_ForceDenyTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsAccessTrustedDevices_UserInControlOfTheseApps;
	[read: ToSubClass, write: ToSubClass] sint32 LetAppsActivateWithVoice;
	[read: ToSubClass, write: ToSubClass] sint32 LetAppsActivateWithVoiceAboveLock;
	[read: ToSubClass, write: ToSubClass] sint32 LetAppsGetDiagnosticInfo;
	[read: ToSubClass, write: ToSubClass] string LetAppsGetDiagnosticInfo_ForceAllowTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsGetDiagnosticInfo_ForceDenyTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsGetDiagnosticInfo_UserInControlOfTheseApps;
	[read: ToSubClass, write: ToSubClass] sint32 LetAppsRunInBackground;
	[read: ToSubClass, write: ToSubClass] string LetAppsRunInBackground_ForceAllowTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsRunInBackground_ForceDenyTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsRunInBackground_UserInControlOfTheseApps;
	[read: ToSubClass, write: ToSubClass] sint32 LetAppsSyncWithDevices;
	[read: ToSubClass, write: ToSubClass] string LetAppsSyncWithDevices_ForceAllowTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsSyncWithDevices_ForceDenyTheseApps;
	[read: ToSubClass, write: ToSubClass] string LetAppsSyncWithDevices_UserInControlOfTheseApps;
	[read: ToSubClass, write: ToSubClass] sint32 PublishUserActivities;
	[read: ToSubClass, write: ToSubClass] sint32 UploadUserActivities;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_RemoteAssistance02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string CustomizeWarningMessages;
	[read: ToSubClass, write: ToSubClass] string SessionLogging;
	[read: ToSubClass, write: ToSubClass] string SolicitedRemoteAssistance;
	[read: ToSubClass, write: ToSubClass] string UnsolicitedRemoteAssistance;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_RemoteDesktop02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 LoadAadCredKeyFromProfile;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_RemoteDesktopServices02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string AllowUsersToConnectRemotely;
	[read: ToSubClass, write: ToSubClass] string ClientConnectionEncryptionLevel;
	[read: ToSubClass, write: ToSubClass] string DoNotAllowDriveRedirection;
	[read: ToSubClass, write: ToSubClass] string DoNotAllowPasswordSaving;
	[read: ToSubClass, write: ToSubClass] string PromptForPasswordUponConnection;
	[read: ToSubClass, write: ToSubClass] string RequireSecureRPCCommunication;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_RemoteManagement02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string AllowBasicAuthentication_Client;
	[read: ToSubClass, write: ToSubClass] string AllowBasicAuthentication_Service;
	[read: ToSubClass, write: ToSubClass] string AllowCredSSPAuthenticationClient;
	[read: ToSubClass, write: ToSubClass] string AllowCredSSPAuthenticationService;
	[read: ToSubClass, write: ToSubClass] string AllowRemoteServerManagement;
	[read: ToSubClass, write: ToSubClass] string AllowUnencryptedTraffic_Client;
	[read: ToSubClass, write: ToSubClass] string AllowUnencryptedTraffic_Service;
	[read: ToSubClass, write: ToSubClass] string DisallowDigestAuthentication;
	[read: ToSubClass, write: ToSubClass] string DisallowNegotiateAuthenticationClient;
	[read: ToSubClass, write: ToSubClass] string DisallowNegotiateAuthenticationService;
	[read: ToSubClass, write: ToSubClass] string DisallowStoringOfRunAsCredentials;
	[read: ToSubClass, write: ToSubClass] string SpecifyChannelBindingTokenHardeningLevel;
	[read: ToSubClass, write: ToSubClass] string TrustedHosts;
	[read: ToSubClass, write: ToSubClass] string TurnOnCompatibilityHTTPListener;
	[read: ToSubClass, write: ToSubClass] string TurnOnCompatibilityHTTPSListener;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_RemoteProcedureCall02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string RestrictUnauthenticatedRPCClients;
	[read: ToSubClass, write: ToSubClass] string RPCEndpointMapperClientAuthentication;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_RemoteShell02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string AllowRemoteShellAccess;
	[read: ToSubClass, write: ToSubClass] string MaxConcurrentUsers;
	[read: ToSubClass, write: ToSubClass] string SpecifyIdleTimeout;
	[read: ToSubClass, write: ToSubClass] string SpecifyMaxMemory;
	[read: ToSubClass, write: ToSubClass] string SpecifyMaxProcesses;
	[read: ToSubClass, write: ToSubClass] string SpecifyMaxRemoteShells;
	[read: ToSubClass, write: ToSubClass] string SpecifyShellTimeout;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_RestrictedGroups02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string ConfigureGroupMembership;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Search02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowCloudSearch;
	[read: ToSubClass, write: ToSubClass] sint32 AllowCortanaInAAD;
	[read: ToSubClass, write: ToSubClass] sint32 AllowFindMyFiles;
	[read: ToSubClass, write: ToSubClass] sint32 AllowIndexingEncryptedStoresOrItems;
	[read: ToSubClass, write: ToSubClass] sint32 AllowSearchToUseLocation;
	[read: ToSubClass, write: ToSubClass] sint32 AllowStoringImagesFromVisionSearch;
	[read: ToSubClass, write: ToSubClass] sint32 AllowUsingDiacritics;
	[read: ToSubClass, write: ToSubClass] sint32 AllowWindowsIndexer;
	[read: ToSubClass, write: ToSubClass] sint32 AlwaysUseAutoLangDetection;
	[read: ToSubClass, write: ToSubClass] sint32 DisableBackoff;
	[read: ToSubClass, write: ToSubClass] sint32 DisableRemovableDriveIndexing;
	[read: ToSubClass, write: ToSubClass] sint32 DoNotUseWebResults;
	[read: ToSubClass, write: ToSubClass] sint32 PreventIndexingLowDiskSpaceMB;
	[read: ToSubClass, write: ToSubClass] sint32 PreventRemoteQueries;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Security02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowAddProvisioningPackage;
	[read: ToSubClass, write: ToSubClass] sint32 AllowRemoveProvisioningPackage;
	[read: ToSubClass, write: ToSubClass] sint32 ClearTPMIfNotReady;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureWindowsPasswords;
	[read: ToSubClass, write: ToSubClass] sint32 PreventAutomaticDeviceEncryptionForAzureADJoinedDevices;
	[read: ToSubClass, write: ToSubClass] sint32 RecoveryEnvironmentAuthentication;
	[read: ToSubClass, write: ToSubClass] sint32 RequireDeviceEncryption;
	[read: ToSubClass, write: ToSubClass] sint32 RequireProvisioningPackageSignature;
	[read: ToSubClass, write: ToSubClass] sint32 RequireRetrieveHealthCertificateOnBoot;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_ServiceControlManager02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string SvchostProcessMitigation;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Settings02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowAutoPlay;
	[read: ToSubClass, write: ToSubClass] sint32 AllowDataSense;
	[read: ToSubClass, write: ToSubClass] sint32 AllowDateTime;
	[read: ToSubClass, write: ToSubClass] sint32 AllowEditDeviceName;
	[read: ToSubClass, write: ToSubClass] sint32 AllowLanguage;
	[read: ToSubClass, write: ToSubClass] sint32 AllowOnlineTips;
	[read: ToSubClass, write: ToSubClass] sint32 AllowPowerSleep;
	[read: ToSubClass, write: ToSubClass] sint32 AllowRegion;
	[read: ToSubClass, write: ToSubClass] sint32 AllowSignInOptions;
	[read: ToSubClass, write: ToSubClass] sint32 AllowVPN;
	[read: ToSubClass, write: ToSubClass] sint32 AllowWorkplace;
	[read: ToSubClass, write: ToSubClass] sint32 AllowYourAccount;
	[read: ToSubClass, write: ToSubClass] sint32 EnableBatteryCapacity;
	[read: ToSubClass, write: ToSubClass] string PageVisibilityList;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_SmartScreen02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 EnableAppInstallControl;
	[read: ToSubClass, write: ToSubClass] sint32 EnableSmartScreenInShell;
	[read: ToSubClass, write: ToSubClass] sint32 PreventOverrideForFilesInShell;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Speech02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowSpeechModelUpdate;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Start02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowPinnedFolderDocuments;
	[read: ToSubClass, write: ToSubClass] sint32 AllowPinnedFolderDownloads;
	[read: ToSubClass, write: ToSubClass] sint32 AllowPinnedFolderFileExplorer;
	[read: ToSubClass, write: ToSubClass] sint32 AllowPinnedFolderHomeGroup;
	[read: ToSubClass, write: ToSubClass] sint32 AllowPinnedFolderMusic;
	[read: ToSubClass, write: ToSubClass] sint32 AllowPinnedFolderNetwork;
	[read: ToSubClass, write: ToSubClass] sint32 AllowPinnedFolderPersonalFolder;
	[read: ToSubClass, write: ToSubClass] sint32 AllowPinnedFolderPictures;
	[read: ToSubClass, write: ToSubClass] sint32 AllowPinnedFolderSettings;
	[read: ToSubClass, write: ToSubClass] sint32 AllowPinnedFolderVideos;
	[read: ToSubClass, write: ToSubClass] sint32 DisableContextMenus;
	[read: ToSubClass, write: ToSubClass] sint32 ForceStartSize;
	[read: ToSubClass, write: ToSubClass] sint32 HideAppList;
	[read: ToSubClass, write: ToSubClass] sint32 HideChangeAccountSettings;
	[read: ToSubClass, write: ToSubClass] sint32 HideFrequentlyUsedApps;
	[read: ToSubClass, write: ToSubClass] sint32 HideHibernate;
	[read: ToSubClass, write: ToSubClass] sint32 HideLock;
	[read: ToSubClass, write: ToSubClass] sint32 HidePowerButton;
	[read: ToSubClass, write: ToSubClass] sint32 HideRecentJumplists;
	[read: ToSubClass, write: ToSubClass] sint32 HideRecentlyAddedApps;
	[read: ToSubClass, write: ToSubClass] sint32 HideRestart;
	[read: ToSubClass, write: ToSubClass] sint32 HideShutDown;
	[read: ToSubClass, write: ToSubClass] sint32 HideSignOut;
	[read: ToSubClass, write: ToSubClass] sint32 HideSleep;
	[read: ToSubClass, write: ToSubClass] sint32 HideSwitchAccount;
	[read: ToSubClass, write: ToSubClass] sint32 HideUserTile;
	[read: ToSubClass, write: ToSubClass] string ImportEdgeAssets;
	[read: ToSubClass, write: ToSubClass] sint32 NoPinningToTaskbar;
	[read: ToSubClass, write: ToSubClass] sint32 ShowOrHideMostUsedApps;
	[read: ToSubClass, write: ToSubClass] string StartLayout;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Storage02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowDiskHealthModelUpdates;
	[read: ToSubClass, write: ToSubClass] sint32 AllowStorageSenseGlobal;
	[read: ToSubClass, write: ToSubClass] sint32 AllowStorageSenseTemporaryFilesCleanup;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigStorageSenseCloudContentDehydrationThreshold;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigStorageSenseDownloadsCleanupThreshold;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigStorageSenseGlobalCadence;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigStorageSenseRecycleBinCleanupThreshold;
	[read: ToSubClass, write: ToSubClass] string EnhancedStorageDevices;
	[read: ToSubClass, write: ToSubClass] sint32 RemovableDiskDenyWriteAccess;
	[read: ToSubClass, write: ToSubClass] string WPDDevicesDenyReadAccessPerDevice;
	[read: ToSubClass, write: ToSubClass] string WPDDevicesDenyWriteAccessPerDevice;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_System02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowBuildPreview;
	[read: ToSubClass, write: ToSubClass] sint32 AllowCommercialDataPipeline;
	[read: ToSubClass, write: ToSubClass] sint32 AllowDesktopAnalyticsProcessing;
	[read: ToSubClass, write: ToSubClass] sint32 AllowDeviceNameInDiagnosticData;
	[read: ToSubClass, write: ToSubClass] sint32 AllowEmbeddedMode;
	[read: ToSubClass, write: ToSubClass] sint32 AllowExperimentation;
	[read: ToSubClass, write: ToSubClass] sint32 AllowFontProviders;
	[read: ToSubClass, write: ToSubClass] sint32 AllowLocation;
	[read: ToSubClass, write: ToSubClass] sint32 AllowMicrosoftManagedDesktopProcessing;
	[read: ToSubClass, write: ToSubClass] sint32 AllowStorageCard;
	[read: ToSubClass, write: ToSubClass] sint32 AllowTelemetry;
	[read: ToSubClass, write: ToSubClass] sint32 AllowUpdateComplianceProcessing;
	[read: ToSubClass, write: ToSubClass] sint32 AllowUserToResetPhone;
	[read: ToSubClass, write: ToSubClass] sint32 AllowWUfBCloudProcessing;
	[read: ToSubClass, write: ToSubClass] string BootStartDriverInitialization;
	[read: ToSubClass, write: ToSubClass] string ConfigureMicrosoft365UploadEndpoint;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureTelemetryOptInChangeNotification;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureTelemetryOptInSettingsUx;
	[read: ToSubClass, write: ToSubClass] sint32 DisableDeviceDelete;
	[read: ToSubClass, write: ToSubClass] sint32 DisableDiagnosticDataViewer;
	[read: ToSubClass, write: ToSubClass] sint32 DisableDirectXDatabaseUpdate;
	[read: ToSubClass, write: ToSubClass] sint32 DisableEnterpriseAuthProxy;
	[read: ToSubClass, write: ToSubClass] sint32 DisableOneDriveFileSync;
	[read: ToSubClass, write: ToSubClass] sint32 DisableOneSettingsDownloads;
	[read: ToSubClass, write: ToSubClass] string DisableSystemRestore;
	[read: ToSubClass, write: ToSubClass] sint32 EnableOneSettingsAuditing;
	[read: ToSubClass, write: ToSubClass] sint32 FeedbackHubAlwaysSaveDiagnosticsLocally;
	[read: ToSubClass, write: ToSubClass] sint32 LimitDiagnosticLogCollection;
	[read: ToSubClass, write: ToSubClass] sint32 LimitDumpCollection;
	[read: ToSubClass, write: ToSubClass] sint32 LimitEnhancedDiagnosticDataWindowsAnalytics;
	[read: ToSubClass, write: ToSubClass] string TelemetryProxy;
	[read: ToSubClass, write: ToSubClass] sint32 TurnOffFileHistory;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_SystemServices02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureHomeGroupListenerServiceStartupMode;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureHomeGroupProviderServiceStartupMode;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureXboxAccessoryManagementServiceStartupMode;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureXboxLiveAuthManagerServiceStartupMode;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureXboxLiveGameSaveServiceStartupMode;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureXboxLiveNetworkingServiceStartupMode;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_TaskManager02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowEndTask;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_TaskScheduler02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 EnableXboxGameSaveTask;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_TenantRestrictions02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string ConfigureTenantRestrictions;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_TextInput02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowHardwareKeyboardTextSuggestions;
	[read: ToSubClass, write: ToSubClass] sint32 AllowIMELogging;
	[read: ToSubClass, write: ToSubClass] sint32 AllowIMENetworkAccess;
	[read: ToSubClass, write: ToSubClass] sint32 AllowInputPanel;
	[read: ToSubClass, write: ToSubClass] sint32 AllowJapaneseIMESurrogatePairCharacters;
	[read: ToSubClass, write: ToSubClass] sint32 AllowJapaneseIVSCharacters;
	[read: ToSubClass, write: ToSubClass] sint32 AllowJapaneseNonPublishingStandardGlyph;
	[read: ToSubClass, write: ToSubClass] sint32 AllowJapaneseUserDictionary;
	[read: ToSubClass, write: ToSubClass] sint32 AllowKeyboardTextSuggestions;
	[read: ToSubClass, write: ToSubClass] sint32 AllowLanguageFeaturesUninstall;
	[read: ToSubClass, write: ToSubClass] sint32 AllowLinguisticDataCollection;
	[read: ToSubClass, write: ToSubClass] sint32 AllowTextInputSuggestionUpdate;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureJapaneseIMEVersion;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureKoreanIMEVersion;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureSimplifiedChineseIMEVersion;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureTraditionalChineseIMEVersion;
	[read: ToSubClass, write: ToSubClass] sint32 EnableTouchKeyboardAutoInvokeInDesktopMode;
	[read: ToSubClass, write: ToSubClass] sint32 ExcludeJapaneseIMEExceptJIS0208;
	[read: ToSubClass, write: ToSubClass] sint32 ExcludeJapaneseIMEExceptJIS0208andEUDC;
	[read: ToSubClass, write: ToSubClass] sint32 ExcludeJapaneseIMEExceptShiftJIS;
	[read: ToSubClass, write: ToSubClass] sint32 ForceTouchKeyboardDockedState;
	[read: ToSubClass, write: ToSubClass] sint32 TouchKeyboardDictationButtonAvailability;
	[read: ToSubClass, write: ToSubClass] sint32 TouchKeyboardEmojiButtonAvailability;
	[read: ToSubClass, write: ToSubClass] sint32 TouchKeyboardFullModeAvailability;
	[read: ToSubClass, write: ToSubClass] sint32 TouchKeyboardHandwritingModeAvailability;
	[read: ToSubClass, write: ToSubClass] sint32 TouchKeyboardNarrowModeAvailability;
	[read: ToSubClass, write: ToSubClass] sint32 TouchKeyboardSplitModeAvailability;
	[read: ToSubClass, write: ToSubClass] sint32 TouchKeyboardWideModeAvailability;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Theme02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string DefaultBackgroundImage;
	[read: ToSubClass, write: ToSubClass] sint32 SystemUsesLightTheme;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_TimeLanguageSettings02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 BlockCleanupOfUnusedPreinstalledLangPacks;
	[read: ToSubClass, write: ToSubClass] string ConfigureTimeZone;
	[read: ToSubClass, write: ToSubClass] sint32 MachineUILanguageOverwrite;
	[read: ToSubClass, write: ToSubClass] sint32 RestrictLanguagePacksAndFeaturesInstall;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Troubleshooting02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowRecommendations;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Update02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 ActiveHoursEnd;
	[read: ToSubClass, write: ToSubClass] sint32 ActiveHoursMaxRange;
	[read: ToSubClass, write: ToSubClass] sint32 ActiveHoursStart;
	[read: ToSubClass, write: ToSubClass] sint32 AllowAutoUpdate;
	[read: ToSubClass, write: ToSubClass] sint32 AllowAutoWindowsUpdateDownloadOverMeteredNetwork;
	[read: ToSubClass, write: ToSubClass] sint32 AllowMUUpdateService;
	[read: ToSubClass, write: ToSubClass] sint32 AllowNonMicrosoftSignedUpdate;
	[read: ToSubClass, write: ToSubClass] sint32 AllowUpdateService;
	[read: ToSubClass, write: ToSubClass] sint32 AutomaticMaintenanceWakeUp;
	[read: ToSubClass, write: ToSubClass] sint32 AutoRestartDeadlinePeriodInDays;
	[read: ToSubClass, write: ToSubClass] sint32 AutoRestartDeadlinePeriodInDaysForFeatureUpdates;
	[read: ToSubClass, write: ToSubClass] sint32 AutoRestartNotificationSchedule;
	[read: ToSubClass, write: ToSubClass] sint32 AutoRestartRequiredNotificationDismissal;
	[read: ToSubClass, write: ToSubClass] sint32 BranchReadinessLevel;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureDeadlineForFeatureUpdates;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureDeadlineForQualityUpdates;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureDeadlineGracePeriod;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureDeadlineGracePeriodForFeatureUpdates;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureDeadlineNoAutoReboot;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureFeatureUpdateUninstallPeriod;
	[read: ToSubClass, write: ToSubClass] sint32 DeferFeatureUpdatesPeriodInDays;
	[read: ToSubClass, write: ToSubClass] sint32 DeferQualityUpdatesPeriodInDays;
	[read: ToSubClass, write: ToSubClass] sint32 DeferUpdatePeriod;
	[read: ToSubClass, write: ToSubClass] sint32 DeferUpgradePeriod;
	[read: ToSubClass, write: ToSubClass] sint32 DetectionFrequency;
	[read: ToSubClass, write: ToSubClass] sint32 DisableDualScan;
	[read: ToSubClass, write: ToSubClass] sint32 DisableWUfBSafeguards;
	[read: ToSubClass, write: ToSubClass] sint32 DoNotEnforceEnterpriseTLSCertPinningForUpdateDetection;
	[read: ToSubClass, write: ToSubClass] sint32 EngagedRestartDeadline;
	[read: ToSubClass, write: ToSubClass] sint32 EngagedRestartDeadlineForFeatureUpdates;
	[read: ToSubClass, write: ToSubClass] sint32 EngagedRestartSnoozeSchedule;
	[read: ToSubClass, write: ToSubClass] sint32 EngagedRestartSnoozeScheduleForFeatureUpdates;
	[read: ToSubClass, write: ToSubClass] sint32 EngagedRestartTransitionSchedule;
	[read: ToSubClass, write: ToSubClass] sint32 EngagedRestartTransitionScheduleForFeatureUpdates;
	[read: ToSubClass, write: ToSubClass] sint32 ExcludeWUDriversInQualityUpdate;
	[read: ToSubClass, write: ToSubClass] sint32 FillEmptyContentUrls;
	[read: ToSubClass, write: ToSubClass] sint32 IgnoreMOAppDownloadLimit;
	[read: ToSubClass, write: ToSubClass] sint32 IgnoreMOUpdateDownloadLimit;
	[read: ToSubClass, write: ToSubClass] sint32 ManagePreviewBuilds;
	[read: ToSubClass, write: ToSubClass] sint32 PauseDeferrals;
	[read: ToSubClass, write: ToSubClass] sint32 PauseFeatureUpdates;
	[read: ToSubClass, write: ToSubClass] string PauseFeatureUpdatesStartTime;
	[read: ToSubClass, write: ToSubClass] sint32 PauseQualityUpdates;
	[read: ToSubClass, write: ToSubClass] string PauseQualityUpdatesStartTime;
	[read: ToSubClass, write: ToSubClass] sint32 PhoneUpdateRestrictions;
	[read: ToSubClass, write: ToSubClass] sint32 RequireDeferUpgrade;
	[read: ToSubClass, write: ToSubClass] sint32 RequireUpdateApproval;
	[read: ToSubClass, write: ToSubClass] sint32 ScheduledInstallDay;
	[read: ToSubClass, write: ToSubClass] sint32 ScheduledInstallEveryWeek;
	[read: ToSubClass, write: ToSubClass] sint32 ScheduledInstallFirstWeek;
	[read: ToSubClass, write: ToSubClass] sint32 ScheduledInstallFourthWeek;
	[read: ToSubClass, write: ToSubClass] sint32 ScheduledInstallSecondWeek;
	[read: ToSubClass, write: ToSubClass] sint32 ScheduledInstallThirdWeek;
	[read: ToSubClass, write: ToSubClass] sint32 ScheduledInstallTime;
	[read: ToSubClass, write: ToSubClass] sint32 ScheduleImminentRestartWarning;
	[read: ToSubClass, write: ToSubClass] sint32 ScheduleRestartWarning;
	[read: ToSubClass, write: ToSubClass] sint32 SetAutoRestartNotificationDisable;
	[read: ToSubClass, write: ToSubClass] sint32 SetDisablePauseUXAccess;
	[read: ToSubClass, write: ToSubClass] sint32 SetDisableUXWUAccess;
	[read: ToSubClass, write: ToSubClass] sint32 SetEDURestart;
	[read: ToSubClass, write: ToSubClass] sint32 SetPolicyDrivenUpdateSourceForDriverUpdates;
	[read: ToSubClass, write: ToSubClass] sint32 SetPolicyDrivenUpdateSourceForFeatureUpdates;
	[read: ToSubClass, write: ToSubClass] sint32 SetPolicyDrivenUpdateSourceForOtherUpdates;
	[read: ToSubClass, write: ToSubClass] sint32 SetPolicyDrivenUpdateSourceForQualityUpdates;
	[read: ToSubClass, write: ToSubClass] sint32 SetProxyBehaviorForUpdateDetection;
	[read: ToSubClass, write: ToSubClass] string ProductVersion;
	[read: ToSubClass, write: ToSubClass] string TargetReleaseVersion;
	[read: ToSubClass, write: ToSubClass] sint32 UpdateNotificationLevel;
	[read: ToSubClass, write: ToSubClass] string UpdateServiceUrl;
	[read: ToSubClass, write: ToSubClass] string UpdateServiceUrlAlternate;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_UserModel02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string EnterpriseSupport;
	[read: ToSubClass, write: ToSubClass] sint32 UserModel;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_UserRights02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string AccessCredentialManagerAsTrustedCaller;
	[read: ToSubClass, write: ToSubClass] string AccessFromNetwork;
	[read: ToSubClass, write: ToSubClass] string ActAsPartOfTheOperatingSystem;
	[read: ToSubClass, write: ToSubClass] string AllowLocalLogOn;
	[read: ToSubClass, write: ToSubClass] string BackupFilesAndDirectories;
	[read: ToSubClass, write: ToSubClass] string ChangeSystemTime;
	[read: ToSubClass, write: ToSubClass] string CreateGlobalObjects;
	[read: ToSubClass, write: ToSubClass] string CreatePageFile;
	[read: ToSubClass, write: ToSubClass] string CreatePermanentSharedObjects;
	[read: ToSubClass, write: ToSubClass] string CreateSymbolicLinks;
	[read: ToSubClass, write: ToSubClass] string CreateToken;
	[read: ToSubClass, write: ToSubClass] string DebugPrograms;
	[read: ToSubClass, write: ToSubClass] string DenyAccessFromNetwork;
	[read: ToSubClass, write: ToSubClass] string DenyLocalLogOn;
	[read: ToSubClass, write: ToSubClass] string DenyRemoteDesktopServicesLogOn;
	[read: ToSubClass, write: ToSubClass] string EnableDelegation;
	[read: ToSubClass, write: ToSubClass] string GenerateSecurityAudits;
	[read: ToSubClass, write: ToSubClass] string ImpersonateClient;
	[read: ToSubClass, write: ToSubClass] string IncreaseSchedulingPriority;
	[read: ToSubClass, write: ToSubClass] string LoadUnloadDeviceDrivers;
	[read: ToSubClass, write: ToSubClass] string LockMemory;
	[read: ToSubClass, write: ToSubClass] string ManageAuditingAndSecurityLog;
	[read: ToSubClass, write: ToSubClass] string ManageVolume;
	[read: ToSubClass, write: ToSubClass] string ModifyFirmwareEnvironment;
	[read: ToSubClass, write: ToSubClass] string ModifyObjectLabel;
	[read: ToSubClass, write: ToSubClass] string ProfileSingleProcess;
	[read: ToSubClass, write: ToSubClass] string RemoteShutdown;
	[read: ToSubClass, write: ToSubClass] string RestoreFilesAndDirectories;
	[read: ToSubClass, write: ToSubClass] string TakeOwnership;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_VirtualizationBasedTechnology02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 HypervisorEnforcedCodeIntegrity;
	[read: ToSubClass, write: ToSubClass] sint32 RequireUEFIMemoryAttributesTable;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_Wifi02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowAutoConnectToWiFiSenseHotspots;
	[read: ToSubClass, write: ToSubClass] sint32 AllowInternetSharing;
	[read: ToSubClass, write: ToSubClass] sint32 AllowManualWiFiConfiguration;
	[read: ToSubClass, write: ToSubClass] sint32 AllowWiFi;
	[read: ToSubClass, write: ToSubClass] sint32 AllowWiFiDirect;
	[read: ToSubClass, write: ToSubClass] sint32 WiFiToWlan;
	[read: ToSubClass, write: ToSubClass] sint32 WLANScanMode;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_WindowsAutopilot02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 EnableAgilityPostEnrollment;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_WindowsConnectionManager02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string ProhitConnectionToNonDomainNetworksWhenConnectedToDomainAuthenticatedNetwork;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_WindowsDefenderSecurityCenter02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string CompanyName;
	[read: ToSubClass, write: ToSubClass] sint32 DisableAccountProtectionUI;
	[read: ToSubClass, write: ToSubClass] sint32 DisableAppBrowserUI;
	[read: ToSubClass, write: ToSubClass] sint32 DisableClearTpmButton;
	[read: ToSubClass, write: ToSubClass] sint32 DisableDeviceSecurityUI;
	[read: ToSubClass, write: ToSubClass] sint32 DisableEnhancedNotifications;
	[read: ToSubClass, write: ToSubClass] sint32 DisableFamilyUI;
	[read: ToSubClass, write: ToSubClass] sint32 DisableHealthUI;
	[read: ToSubClass, write: ToSubClass] sint32 DisableNetworkUI;
	[read: ToSubClass, write: ToSubClass] sint32 DisableNotifications;
	[read: ToSubClass, write: ToSubClass] sint32 DisableTpmFirmwareUpdateWarning;
	[read: ToSubClass, write: ToSubClass] sint32 DisableVirusUI;
	[read: ToSubClass, write: ToSubClass] sint32 DisallowExploitProtectionOverride;
	[read: ToSubClass, write: ToSubClass] string Email;
	[read: ToSubClass, write: ToSubClass] sint32 EnableCustomizedToasts;
	[read: ToSubClass, write: ToSubClass] sint32 EnableInAppCustomization;
	[read: ToSubClass, write: ToSubClass] sint32 HideRansomwareDataRecovery;
	[read: ToSubClass, write: ToSubClass] sint32 HideSecureBoot;
	[read: ToSubClass, write: ToSubClass] sint32 HideTPMTroubleshooting;
	[read: ToSubClass, write: ToSubClass] sint32 HideWindowsSecurityNotificationAreaControl;
	[read: ToSubClass, write: ToSubClass] string Phone;
	[read: ToSubClass, write: ToSubClass] string URL;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_WindowsInkWorkspace02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowSuggestedAppsInWindowsInkWorkspace;
	[read: ToSubClass, write: ToSubClass] sint32 AllowWindowsInkWorkspace;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_WindowsLogon02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string AllowAutomaticRestartSignOn;
	[read: ToSubClass, write: ToSubClass] string ConfigAutomaticRestartSignOn;
	[read: ToSubClass, write: ToSubClass] string DisableLockScreenAppNotifications;
	[read: ToSubClass, write: ToSubClass] string DontDisplayNetworkSelectionUI;
	[read: ToSubClass, write: ToSubClass] sint32 EnableFirstLogonAnimation;
	[read: ToSubClass, write: ToSubClass] string EnumerateLocalUsersOnDomainJoinedComputers;
	[read: ToSubClass, write: ToSubClass] sint32 HideFastUserSwitching;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_WindowsPowerShell02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string TurnOnPowerShellScriptBlockLogging;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_WindowsSandbox02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowAudioInput;
	[read: ToSubClass, write: ToSubClass] sint32 AllowClipboardRedirection;
	[read: ToSubClass, write: ToSubClass] sint32 AllowNetworking;
	[read: ToSubClass, write: ToSubClass] sint32 AllowPrinterRedirection;
	[read: ToSubClass, write: ToSubClass] sint32 AllowVGPU;
	[read: ToSubClass, write: ToSubClass] sint32 AllowVideoInput;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Config01_WirelessDisplay02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowMdnsAdvertisement;
	[read: ToSubClass, write: ToSubClass] sint32 AllowMdnsDiscovery;
	[read: ToSubClass, write: ToSubClass] sint32 AllowMovementDetectionOnInfrastructure;
	[read: ToSubClass, write: ToSubClass] sint32 AllowPCReceiverToBeTCPServer;
	[read: ToSubClass, write: ToSubClass] sint32 AllowPCSenderToBeTCPClient;
	[read: ToSubClass, write: ToSubClass] sint32 AllowProjectionFromPC;
	[read: ToSubClass, write: ToSubClass] sint32 AllowProjectionFromPCOverInfrastructure;
	[read: ToSubClass, write: ToSubClass] sint32 AllowProjectionToPC;
	[read: ToSubClass, write: ToSubClass] sint32 AllowProjectionToPCOverInfrastructure;
	[read: ToSubClass, write: ToSubClass] sint32 AllowUserInputFromWirelessDisplayReceiver;
	[read: ToSubClass, write: ToSubClass] sint32 RequirePinForPairing;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_AboveLock02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowCortanaAboveLock;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowToasts;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Accounts02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowAddingNonMicrosoftAccountsManually;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowMicrosoftAccountConnection;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowMicrosoftAccountSignInAssistant;
	[read: ToSubClass, write(FALSE): ToSubClass] string DomainNamesForEmailSync;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_ActiveXControls02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string ApprovedInstallationSites;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_ApplicationDefaults02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string DefaultAssociationsConfiguration;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnableAppUriHandlers;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_ApplicationManagement02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowAllTrustedApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowAppStoreAutoUpdate;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowAutomaticAppArchiving;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowDeveloperUnlock;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowGameDVR;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowSharedUserAppData;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 BlockNonAdminUserInstall;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableStoreOriginatedApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LaunchAppAfterLogOn;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 MSIAllowUserControlOverInstall;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 MSIAlwaysInstallWithElevatedPrivileges;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 RequirePrivateStoreOnly;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 RestrictAppDataToSystemVolume;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 RestrictAppToSystemVolume;
	[read: ToSubClass, write(FALSE): ToSubClass] string ScheduleForceRestartForUpdateFailures;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_AppRuntime02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowMicrosoftAccountsToBeOptional;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_AppVirtualization02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowAppVClient;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowDynamicVirtualization;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowPackageCleanup;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowPackageScripts;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowPublishingRefreshUX;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowReportingServer;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowRoamingFileExclusions;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowRoamingRegistryExclusions;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowStreamingAutoload;
	[read: ToSubClass, write(FALSE): ToSubClass] string ClientCoexistenceAllowMigrationmode;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntegrationAllowRootGlobal;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntegrationAllowRootUser;
	[read: ToSubClass, write(FALSE): ToSubClass] string PublishingAllowServer1;
	[read: ToSubClass, write(FALSE): ToSubClass] string PublishingAllowServer2;
	[read: ToSubClass, write(FALSE): ToSubClass] string PublishingAllowServer3;
	[read: ToSubClass, write(FALSE): ToSubClass] string PublishingAllowServer4;
	[read: ToSubClass, write(FALSE): ToSubClass] string PublishingAllowServer5;
	[read: ToSubClass, write(FALSE): ToSubClass] string StreamingAllowCertificateFilterForClient_SSL;
	[read: ToSubClass, write(FALSE): ToSubClass] string StreamingAllowHighCostLaunch;
	[read: ToSubClass, write(FALSE): ToSubClass] string StreamingAllowLocationProvider;
	[read: ToSubClass, write(FALSE): ToSubClass] string StreamingAllowPackageInstallationRoot;
	[read: ToSubClass, write(FALSE): ToSubClass] string StreamingAllowPackageSourceRoot;
	[read: ToSubClass, write(FALSE): ToSubClass] string StreamingAllowReestablishmentInterval;
	[read: ToSubClass, write(FALSE): ToSubClass] string StreamingAllowReestablishmentRetries;
	[read: ToSubClass, write(FALSE): ToSubClass] string StreamingSharedContentStoreMode;
	[read: ToSubClass, write(FALSE): ToSubClass] string StreamingSupportBranchCache;
	[read: ToSubClass, write(FALSE): ToSubClass] string StreamingVerifyCertificateRevocationList;
	[read: ToSubClass, write(FALSE): ToSubClass] string VirtualComponentsAllowList;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Audit02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AccountLogon_AuditCredentialValidation;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AccountLogon_AuditKerberosAuthenticationService;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AccountLogon_AuditKerberosServiceTicketOperations;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AccountLogon_AuditOtherAccountLogonEvents;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AccountLogonLogoff_AuditAccountLockout;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AccountLogonLogoff_AuditGroupMembership;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AccountLogonLogoff_AuditIPsecExtendedMode;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AccountLogonLogoff_AuditIPsecMainMode;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AccountLogonLogoff_AuditIPsecQuickMode;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AccountLogonLogoff_AuditLogoff;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AccountLogonLogoff_AuditLogon;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AccountLogonLogoff_AuditNetworkPolicyServer;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AccountLogonLogoff_AuditOtherLogonLogoffEvents;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AccountLogonLogoff_AuditSpecialLogon;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AccountLogonLogoff_AuditUserDeviceClaims;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AccountManagement_AuditApplicationGroupManagement;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AccountManagement_AuditComputerAccountManagement;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AccountManagement_AuditDistributionGroupManagement;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AccountManagement_AuditOtherAccountManagementEvents;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AccountManagement_AuditSecurityGroupManagement;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AccountManagement_AuditUserAccountManagement;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DetailedTracking_AuditDPAPIActivity;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DetailedTracking_AuditPNPActivity;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DetailedTracking_AuditProcessCreation;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DetailedTracking_AuditProcessTermination;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DetailedTracking_AuditRPCEvents;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DetailedTracking_AuditTokenRightAdjusted;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DSAccess_AuditDetailedDirectoryServiceReplication;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DSAccess_AuditDirectoryServiceAccess;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DSAccess_AuditDirectoryServiceChanges;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DSAccess_AuditDirectoryServiceReplication;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ObjectAccess_AuditApplicationGenerated;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ObjectAccess_AuditCentralAccessPolicyStaging;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ObjectAccess_AuditCertificationServices;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ObjectAccess_AuditDetailedFileShare;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ObjectAccess_AuditFileShare;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ObjectAccess_AuditFileSystem;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ObjectAccess_AuditFilteringPlatformConnection;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ObjectAccess_AuditFilteringPlatformPacketDrop;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ObjectAccess_AuditHandleManipulation;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ObjectAccess_AuditKernelObject;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ObjectAccess_AuditOtherObjectAccessEvents;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ObjectAccess_AuditRegistry;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ObjectAccess_AuditRemovableStorage;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ObjectAccess_AuditSAM;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PolicyChange_AuditAuthenticationPolicyChange;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PolicyChange_AuditAuthorizationPolicyChange;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PolicyChange_AuditFilteringPlatformPolicyChange;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PolicyChange_AuditMPSSVCRuleLevelPolicyChange;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PolicyChange_AuditOtherPolicyChangeEvents;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PolicyChange_AuditPolicyChange;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PrivilegeUse_AuditNonSensitivePrivilegeUse;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PrivilegeUse_AuditOtherPrivilegeUseEvents;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PrivilegeUse_AuditSensitivePrivilegeUse;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 System_AuditIPsecDriver;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 System_AuditOtherSystemEvents;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 System_AuditSecurityStateChange;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 System_AuditSecuritySystemExtension;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 System_AuditSystemIntegrity;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Authentication02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowAadPasswordReset;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowFastReconnect;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowSecondaryAuthenticationDevice;
	[read: ToSubClass, write(FALSE): ToSubClass] string ConfigureWebcamAccessDomainNames;
	[read: ToSubClass, write(FALSE): ToSubClass] string ConfigureWebSignInAllowedUrls;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnableFastFirstSignIn;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnableWebSignIn;
	[read: ToSubClass, write(FALSE): ToSubClass] string PreferredAadTenantDomainName;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Autoplay02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisallowAutoplayForNonVolumeDevices;
	[read: ToSubClass, write(FALSE): ToSubClass] string SetDefaultAutoRunBehavior;
	[read: ToSubClass, write(FALSE): ToSubClass] string TurnOffAutoPlay;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Bitlocker02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EncryptionMethod;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_BITS02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 BandwidthThrottlingEndTime;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 BandwidthThrottlingStartTime;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 BandwidthThrottlingTransferRate;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 CostedNetworkBehaviorBackgroundPriority;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 CostedNetworkBehaviorForegroundPriority;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 JobInactivityTimeout;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Bluetooth02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowAdvertising;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowDiscoverableMode;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowPrepairing;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowPromptedProximalConnections;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalDeviceName;
	[read: ToSubClass, write(FALSE): ToSubClass] string ServicesAllowedList;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SetMinimumEncryptionKeySize;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Browser02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowAddressBarDropdown;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowAutofill;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowConfigurationUpdateForBooksLibrary;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowCookies;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowDeveloperTools;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowDoNotTrack;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowExtensions;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowFlash;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowFlashClickToRun;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowFullScreenMode;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowInPrivate;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowMicrosoftCompatibilityList;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowPasswordManager;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowPopups;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowPrelaunch;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowPrinting;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowSavingHistory;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowSearchEngineCustomization;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowSearchSuggestionsinAddressBar;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowSideloadingOfExtensions;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowSmartScreen;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowTabPreloading;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowWebContentOnNewTabPage;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AlwaysEnableBooksLibrary;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ClearBrowsingDataOnExit;
	[read: ToSubClass, write(FALSE): ToSubClass] string ConfigureAdditionalSearchEngines;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureFavoritesBar;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureHomeButton;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureKioskMode;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureKioskResetAfterIdleTimeout;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureOpenMicrosoftEdgeWith;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureTelemetryForMicrosoft365Analytics;
	[read: ToSubClass, write(FALSE): ToSubClass] string DefaultFavoriteBarItem1Name;
	[read: ToSubClass, write(FALSE): ToSubClass] string DefaultFavoriteBarItem1Url;
	[read: ToSubClass, write(FALSE): ToSubClass] string DefaultFavoriteBarItem2Name;
	[read: ToSubClass, write(FALSE): ToSubClass] string DefaultFavoriteBarItem2Url;
	[read: ToSubClass, write(FALSE): ToSubClass] string DefaultFavoriteBarItem3Name;
	[read: ToSubClass, write(FALSE): ToSubClass] string DefaultFavoriteBarItem3Url;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableLockdownOfStartPages;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnableExtendedBooksTelemetry;
	[read: ToSubClass, write(FALSE): ToSubClass] string EnterpriseModeSiteList;
	[read: ToSubClass, write(FALSE): ToSubClass] string EnterpriseSiteListServiceUrl;
	[read: ToSubClass, write(FALSE): ToSubClass] string HomePages;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LockdownFavorites;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PreventAccessToAboutFlagsInMicrosoftEdge;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PreventCertErrorOverrides;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PreventFirstRunPage;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PreventLiveTileDataCollection;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PreventSmartScreenPromptOverride;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PreventSmartScreenPromptOverrideForFiles;
	[read: ToSubClass, write(FALSE): ToSubClass] string PreventTurningOffRequiredExtensions;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PreventUsingLocalHostIPAddressForWebRTC;
	[read: ToSubClass, write(FALSE): ToSubClass] string ProvisionFavorites;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SendIntranetTraffictoInternetExplorer;
	[read: ToSubClass, write(FALSE): ToSubClass] string SetDefaultSearchEngine;
	[read: ToSubClass, write(FALSE): ToSubClass] string SetHomeButtonURL;
	[read: ToSubClass, write(FALSE): ToSubClass] string SetNewTabPageURL;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ShowMessageWhenOpeningSitesInInternetExplorer;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SyncFavoritesBetweenIEAndMicrosoftEdge;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 UnlockHomeButton;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 UseSharedFolderForBooks;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Camera02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowCamera;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Cellular02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LetAppsAccessCellularData;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessCellularData_ForceAllowTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessCellularData_ForceDenyTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessCellularData_UserInControlOfTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string ShowAppCellularAccessUI;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Connectivity02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowBluetooth;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowCellularData;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowCellularDataRoaming;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowConnectedDevices;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowPhonePCLinking;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowVPNOverCellular;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowVPNRoamingOverCellular;
	[read: ToSubClass, write(FALSE): ToSubClass] string DiablePrintingOverHTTP;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableDownloadingOfPrintDriversOverHTTP;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableInternetDownloadForWebPublishingAndOnlineOrderingWizards;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisallowNetworkConnectivityActiveTests;
	[read: ToSubClass, write(FALSE): ToSubClass] string HardenedUNCPaths;
	[read: ToSubClass, write(FALSE): ToSubClass] string ProhibitInstallationAndConfigurationOfNetworkBridge;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_ControlPolicyConflict02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 MDMWinsOverGP;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_CredentialProviders02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowPINLogon;
	[read: ToSubClass, write(FALSE): ToSubClass] string BlockPicturePassword;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableAutomaticReDeploymentCredentials;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_CredentialsDelegation02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string RemoteHostAllowsDelegationOfNonExportableCredentials;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_CredentialsUI02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisablePasswordReveal;
	[read: ToSubClass, write(FALSE): ToSubClass] string EnumerateAdministrators;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Cryptography02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowFipsAlgorithmPolicy;
	[read: ToSubClass, write(FALSE): ToSubClass] string TLSCipherSuites;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_DataProtection02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowDirectMemoryAccess;
	[read: ToSubClass, write(FALSE): ToSubClass] string LegacySelectiveWipeID;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_DataUsage02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string SetCost3G;
	[read: ToSubClass, write(FALSE): ToSubClass] string SetCost4G;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Defender02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowArchiveScanning;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowBehaviorMonitoring;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowCloudProtection;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowEmailScanning;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowFullScanOnMappedNetworkDrives;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowFullScanRemovableDriveScanning;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowIntrusionPreventionSystem;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowIOAVProtection;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowOnAccessProtection;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowRealtimeMonitoring;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowScanningNetworkFiles;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowScriptScanning;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowUserUIAccess;
	[read: ToSubClass, write(FALSE): ToSubClass] string AttackSurfaceReductionOnlyExclusions;
	[read: ToSubClass, write(FALSE): ToSubClass] string AttackSurfaceReductionRules;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AvgCPULoadFactor;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 CheckForSignaturesBeforeRunningScan;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 CloudBlockLevel;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 CloudExtendedTimeout;
	[read: ToSubClass, write(FALSE): ToSubClass] string ControlledFolderAccessAllowedApplications;
	[read: ToSubClass, write(FALSE): ToSubClass] string ControlledFolderAccessProtectedFolders;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DaysToRetainCleanedMalware;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableCatchupFullScan;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableCatchupQuickScan;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnableControlledFolderAccess;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnableLowCPUPriority;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnableNetworkProtection;
	[read: ToSubClass, write(FALSE): ToSubClass] string ExcludedExtensions;
	[read: ToSubClass, write(FALSE): ToSubClass] string ExcludedPaths;
	[read: ToSubClass, write(FALSE): ToSubClass] string ExcludedProcesses;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PUAProtection;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 RealTimeScanDirection;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ScanParameter;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ScheduleQuickScanTime;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ScheduleScanDay;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ScheduleScanTime;
	[read: ToSubClass, write(FALSE): ToSubClass] string SecurityIntelligenceLocation;
	[read: ToSubClass, write(FALSE): ToSubClass] string SignatureUpdateFallbackOrder;
	[read: ToSubClass, write(FALSE): ToSubClass] string SignatureUpdateFileSharesSources;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SignatureUpdateInterval;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SubmitSamplesConsent;
	[read: ToSubClass, write(FALSE): ToSubClass] string ThreatSeverityDefaultAction;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_DeliveryOptimization02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DOAbsoluteMaxCacheSize;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DOAllowVPNPeerCaching;
	[read: ToSubClass, write(FALSE): ToSubClass] string DOCacheHost;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DOCacheHostSource;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DODelayBackgroundDownloadFromHttp;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DODelayCacheServerFallbackBackground;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DODelayCacheServerFallbackForeground;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DODelayForegroundDownloadFromHttp;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DODownloadMode;
	[read: ToSubClass, write(FALSE): ToSubClass] string DOGroupId;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DOGroupIdSource;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DOMaxBackgroundDownloadBandwidth;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DOMaxCacheAge;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DOMaxCacheSize;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DOMaxForegroundDownloadBandwidth;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DOMinBackgroundQos;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DOMinBatteryPercentageAllowedToUpload;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DOMinDiskSizeAllowedToPeer;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DOMinFileSizeToCache;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DOMinRAMAllowedToPeer;
	[read: ToSubClass, write(FALSE): ToSubClass] string DOModifyCacheDrive;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DOMonthlyUploadDataCap;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DOPercentageMaxBackgroundBandwidth;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DOPercentageMaxForegroundBandwidth;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DORestrictPeerSelectionBy;
	[read: ToSubClass, write(FALSE): ToSubClass] string DOSetHoursToLimitBackgroundDownloadBandwidth;
	[read: ToSubClass, write(FALSE): ToSubClass] string DOSetHoursToLimitForegroundDownloadBandwidth;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_DeviceGuard02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureSystemGuardLaunch;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnableVirtualizationBasedSecurity;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LsaCfgFlags;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 RequirePlatformSecurityFeatures;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_DeviceHealthMonitoring02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowDeviceHealthMonitoring;
	[read: ToSubClass, write(FALSE): ToSubClass] string ConfigDeviceHealthMonitoringScope;
	[read: ToSubClass, write(FALSE): ToSubClass] string ConfigDeviceHealthMonitoringServiceInstance;
	[read: ToSubClass, write(FALSE): ToSubClass] string ConfigDeviceHealthMonitoringUploadDestination;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_DeviceInstallation02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowInstallationOfMatchingDeviceIDs;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowInstallationOfMatchingDeviceInstanceIDs;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowInstallationOfMatchingDeviceSetupClasses;
	[read: ToSubClass, write(FALSE): ToSubClass] string EnableInstallationPolicyLayering;
	[read: ToSubClass, write(FALSE): ToSubClass] string PreventDeviceMetadataFromNetwork;
	[read: ToSubClass, write(FALSE): ToSubClass] string PreventInstallationOfDevicesNotDescribedByOtherPolicySettings;
	[read: ToSubClass, write(FALSE): ToSubClass] string PreventInstallationOfMatchingDeviceIDs;
	[read: ToSubClass, write(FALSE): ToSubClass] string PreventInstallationOfMatchingDeviceInstanceIDs;
	[read: ToSubClass, write(FALSE): ToSubClass] string PreventInstallationOfMatchingDeviceSetupClasses;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_DeviceLock02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowScreenTimeoutWhileLockedUserConfig;
	[read: ToSubClass, write(FALSE): ToSubClass] string EnforceLockScreenAndLogonImage;
	[read: ToSubClass, write(FALSE): ToSubClass] string EnforceLockScreenProvider;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 MinimumPasswordAge;
	[read: ToSubClass, write(FALSE): ToSubClass] string PreventEnablingLockScreenCamera;
	[read: ToSubClass, write(FALSE): ToSubClass] string PreventLockScreenSlideShow;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ScreenTimeoutWhileLocked;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DevicePasswordEnabled;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowSimpleDevicePassword;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 MinDevicePasswordLength;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AlphanumericDevicePasswordRequired;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 MinDevicePasswordComplexCharacters;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DevicePasswordExpiration;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DevicePasswordHistory;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 MaxDevicePasswordFailedAttempts;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 MaxInactivityTimeDeviceLock;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Display02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisablePerProcessDpiForApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnablePerProcessDpi;
	[read: ToSubClass, write(FALSE): ToSubClass] string EnablePerProcessDpiForApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string TurnOffGdiDPIScalingForApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string TurnOnGdiDPIScalingForApps;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_DisplayEnhancement02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string AutobrightnessLuxToNitsCurve;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DefaultAdaptiveColorAdaptationStrength;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DefaultBatterySaverBrightnessMultiplier;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DefaultBrightnessSliderPercentage;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DefaultDimBrightnessMultiplier;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 IsAdaptiveColorOnByDefault;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 IsAutobrightnessOnByDefault;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ShouldStopTransitionDuringHandsOnDisplay;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_DmaGuard02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DeviceEnumerationPolicy;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Eap02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowTLS1_3;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_ErrorReporting02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string CustomizeConsentSettings;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableWindowsErrorReporting;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisplayErrorNotification;
	[read: ToSubClass, write(FALSE): ToSubClass] string DoNotSendAdditionalData;
	[read: ToSubClass, write(FALSE): ToSubClass] string PreventCriticalErrorDisplay;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_EventLogService02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string ControlEventLogBehavior;
	[read: ToSubClass, write(FALSE): ToSubClass] string SpecifyMaximumFileSizeApplicationLog;
	[read: ToSubClass, write(FALSE): ToSubClass] string SpecifyMaximumFileSizeSecurityLog;
	[read: ToSubClass, write(FALSE): ToSubClass] string SpecifyMaximumFileSizeSystemLog;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Experience02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowClipboardHistory;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowCortana;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowDeviceDiscovery;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowFindMyDevice;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowManualMDMUnenrollment;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowSaveAsOfOfficeFiles;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowScreenCapture;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowSharingOfOfficeFiles;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowSIMErrorDialogPromptWhenNoSIM;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowSyncMySettings;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowWindowsConsumerFeatures;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowWindowsTips;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableCloudOptimizedContent;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableConsumerAccountStateContent;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DoNotShowFeedbackNotifications;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DoNotSyncBrowserSettings;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PreventUsersFromTurningOnBrowserSyncing;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ShowLockOnUserTile;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_ExploitGuard02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string ExploitProtectionSettings;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Feeds02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 FeedsEnabled;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_FileExplorer02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string TurnOffDataExecutionPreventionForExplorer;
	[read: ToSubClass, write(FALSE): ToSubClass] string TurnOffHeapTerminationOnCorruption;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Games02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowAdvancedGamingServices;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Handwriting02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PanelDefaultModeDocked;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_HumanPresence02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ForceInstantLock;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ForceInstantWake;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ForceLockTimeout;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_InternetExplorer02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string AddSearchProvider;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowActiveXFiltering;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowAddOnList;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowCertificateAddressMismatchWarning;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowDeletingBrowsingHistoryOnExit;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowEnhancedProtectedMode;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowEnhancedSuggestionsInAddressBar;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowEnterpriseModeFromToolsMenu;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowEnterpriseModeSiteList;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowFallbackToSSL3;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowInternetExplorer7PolicyList;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowInternetExplorerStandardsMode;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowInternetZoneTemplate;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowIntranetZoneTemplate;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowLocalMachineZoneTemplate;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowLockedDownInternetZoneTemplate;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowLockedDownIntranetZoneTemplate;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowLockedDownLocalMachineZoneTemplate;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowLockedDownRestrictedSitesZoneTemplate;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowOneWordEntry;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowSaveTargetAsInIEMode;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowSiteToZoneAssignmentList;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowsLockedDownTrustedSitesZoneTemplate;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowSoftwareWhenSignatureIsInvalid;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowsRestrictedSitesZoneTemplate;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowSuggestedSites;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowTrustedSitesZoneTemplate;
	[read: ToSubClass, write(FALSE): ToSubClass] string CheckServerCertificateRevocation;
	[read: ToSubClass, write(FALSE): ToSubClass] string CheckSignaturesOnDownloadedPrograms;
	[read: ToSubClass, write(FALSE): ToSubClass] string ConfigureEdgeRedirectChannel;
	[read: ToSubClass, write(FALSE): ToSubClass] string ConsistentMimeHandlingInternetExplorerProcesses;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableBypassOfSmartScreenWarnings;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableBypassOfSmartScreenWarningsAboutUncommonFiles;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableCompatView;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableConfiguringHistory;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableCrashDetection;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableCustomerExperienceImprovementProgramParticipation;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableDeletingUserVisitedWebsites;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableEnclosureDownloading;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableEncryptionSupport;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableFeedsBackgroundSync;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableFirstRunWizard;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableFlipAheadFeature;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableGeolocation;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableIgnoringCertificateErrors;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableInPrivateBrowsing;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableInternetExplorerApp;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableProcessesInEnhancedProtectedMode;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableProxyChange;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableSearchProviderChange;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableSecondaryHomePageChange;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableSecuritySettingsCheck;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableUpdateCheck;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableWebAddressAutoComplete;
	[read: ToSubClass, write(FALSE): ToSubClass] string DoNotAllowActiveXControlsInProtectedMode;
	[read: ToSubClass, write(FALSE): ToSubClass] string DoNotAllowUsersToAddSites;
	[read: ToSubClass, write(FALSE): ToSubClass] string DoNotAllowUsersToChangePolicies;
	[read: ToSubClass, write(FALSE): ToSubClass] string DoNotBlockOutdatedActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string DoNotBlockOutdatedActiveXControlsOnSpecificDomains;
	[read: ToSubClass, write(FALSE): ToSubClass] string EnableExtendedIEModeHotkeys;
	[read: ToSubClass, write(FALSE): ToSubClass] string IncludeAllLocalSites;
	[read: ToSubClass, write(FALSE): ToSubClass] string IncludeAllNetworkPaths;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowAccessToDataSources;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowCopyPasteViaScript;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowDragAndDropCopyAndPasteFiles;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowFontDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowLoadingOfXAMLFiles;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowOnlyApprovedDomainsToUseActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowOnlyApprovedDomainsToUseTDCActiveXControl;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowScriptingOfInternetExplorerWebBrowserControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowScriptInitiatedWindows;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowScriptlets;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowSmartScreenIE;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowUpdatesToStatusBarViaScript;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowUserDataPersistence;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowVBScriptToRunInInternetExplorer;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneDoNotRunAntimalwareAgainstActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneDownloadSignedActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneDownloadUnsignedActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneEnableCrossSiteScriptingFilter;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneEnableDraggingOfContentFromDifferentDomainsAcrossWindows;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneEnableDraggingOfContentFromDifferentDomainsWithinWindows;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneEnableMIMESniffing;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneEnableProtectedMode;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneIncludeLocalPathWhenUploadingFilesToServer;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneJavaPermissions;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneLaunchingApplicationsAndFilesInIFRAME;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneLogonOptions;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneRunNETFrameworkReliantComponentsSignedWithAuthenticode;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneShowSecurityWarningForPotentiallyUnsafeFiles;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneUsePopupBlocker;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntranetZoneAllowAccessToDataSources;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntranetZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntranetZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntranetZoneAllowFontDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntranetZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntranetZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntranetZoneAllowScriptlets;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntranetZoneAllowSmartScreenIE;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntranetZoneAllowUserDataPersistence;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntranetZoneDoNotRunAntimalwareAgainstActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntranetZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntranetZoneJavaPermissions;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntranetZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write(FALSE): ToSubClass] string JScriptReplacement;
	[read: ToSubClass, write(FALSE): ToSubClass] string KeepIntranetSitesInInternetExplorer;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalMachineZoneAllowAccessToDataSources;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalMachineZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalMachineZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalMachineZoneAllowFontDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalMachineZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalMachineZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalMachineZoneAllowScriptlets;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalMachineZoneAllowSmartScreenIE;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalMachineZoneAllowUserDataPersistence;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalMachineZoneDoNotRunAntimalwareAgainstActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalMachineZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalMachineZoneJavaPermissions;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalMachineZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownInternetZoneAllowAccessToDataSources;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownInternetZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownInternetZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownInternetZoneAllowFontDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownInternetZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownInternetZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownInternetZoneAllowScriptlets;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownInternetZoneAllowSmartScreenIE;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownInternetZoneAllowUserDataPersistence;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownInternetZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownInternetZoneJavaPermissions;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownInternetZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownIntranetJavaPermissions;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownIntranetZoneAllowAccessToDataSources;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownIntranetZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownIntranetZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownIntranetZoneAllowFontDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownIntranetZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownIntranetZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownIntranetZoneAllowScriptlets;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownIntranetZoneAllowSmartScreenIE;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownIntranetZoneAllowUserDataPersistence;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownIntranetZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownIntranetZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownLocalMachineZoneAllowAccessToDataSources;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownLocalMachineZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownLocalMachineZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownLocalMachineZoneAllowFontDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownLocalMachineZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownLocalMachineZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownLocalMachineZoneAllowScriptlets;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownLocalMachineZoneAllowSmartScreenIE;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownLocalMachineZoneAllowUserDataPersistence;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownLocalMachineZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownLocalMachineZoneJavaPermissions;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownLocalMachineZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownRestrictedSitesZoneAllowAccessToDataSources;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownRestrictedSitesZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownRestrictedSitesZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownRestrictedSitesZoneAllowFontDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownRestrictedSitesZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownRestrictedSitesZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownRestrictedSitesZoneAllowScriptlets;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownRestrictedSitesZoneAllowSmartScreenIE;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownRestrictedSitesZoneAllowUserDataPersistence;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownRestrictedSitesZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownRestrictedSitesZoneJavaPermissions;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownRestrictedSitesZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownTrustedSitesZoneAllowAccessToDataSources;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownTrustedSitesZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownTrustedSitesZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownTrustedSitesZoneAllowFontDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownTrustedSitesZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownTrustedSitesZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownTrustedSitesZoneAllowScriptlets;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownTrustedSitesZoneAllowSmartScreenIE;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownTrustedSitesZoneAllowUserDataPersistence;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownTrustedSitesZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownTrustedSitesZoneJavaPermissions;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownTrustedSitesZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write(FALSE): ToSubClass] string MimeSniffingSafetyFeatureInternetExplorerProcesses;
	[read: ToSubClass, write(FALSE): ToSubClass] string MKProtocolSecurityRestrictionInternetExplorerProcesses;
	[read: ToSubClass, write(FALSE): ToSubClass] string NewTabDefaultPage;
	[read: ToSubClass, write(FALSE): ToSubClass] string NotificationBarInternetExplorerProcesses;
	[read: ToSubClass, write(FALSE): ToSubClass] string PreventManagingSmartScreenFilter;
	[read: ToSubClass, write(FALSE): ToSubClass] string PreventPerUserInstallationOfActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string ProtectionFromZoneElevationInternetExplorerProcesses;
	[read: ToSubClass, write(FALSE): ToSubClass] string RemoveRunThisTimeButtonForOutdatedActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictActiveXInstallInternetExplorerProcesses;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowAccessToDataSources;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowActiveScripting;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowBinaryAndScriptBehaviors;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowCopyPasteViaScript;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowDragAndDropCopyAndPasteFiles;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowFileDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowFontDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowLoadingOfXAMLFiles;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowMETAREFRESH;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowOnlyApprovedDomainsToUseActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowOnlyApprovedDomainsToUseTDCActiveXControl;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowScriptingOfInternetExplorerWebBrowserControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowScriptInitiatedWindows;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowScriptlets;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowSmartScreenIE;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowUpdatesToStatusBarViaScript;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowUserDataPersistence;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowVBScriptToRunInInternetExplorer;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneDoNotRunAntimalwareAgainstActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneDownloadSignedActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneDownloadUnsignedActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneEnableCrossSiteScriptingFilter;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneEnableDraggingOfContentFromDifferentDomainsAcrossWindows;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneEnableDraggingOfContentFromDifferentDomainsWithinWindows;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneEnableMIMESniffing;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneIncludeLocalPathWhenUploadingFilesToServer;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneJavaPermissions;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneLaunchingApplicationsAndFilesInIFRAME;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneLogonOptions;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneRunActiveXControlsAndPlugins;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneRunNETFrameworkReliantComponentsSignedWithAuthenticode;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneScriptActiveXControlsMarkedSafeForScripting;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneScriptingOfJavaApplets;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneShowSecurityWarningForPotentiallyUnsafeFiles;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneTurnOnProtectedMode;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneUsePopupBlocker;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictFileDownloadInternetExplorerProcesses;
	[read: ToSubClass, write(FALSE): ToSubClass] string ScriptedWindowSecurityRestrictionsInternetExplorerProcesses;
	[read: ToSubClass, write(FALSE): ToSubClass] string SearchProviderList;
	[read: ToSubClass, write(FALSE): ToSubClass] string SecurityZonesUseOnlyMachineSettings;
	[read: ToSubClass, write(FALSE): ToSubClass] string SendSitesNotInEnterpriseSiteListToEdge;
	[read: ToSubClass, write(FALSE): ToSubClass] string SpecifyUseOfActiveXInstallerService;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedSitesZoneAllowAccessToDataSources;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedSitesZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedSitesZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedSitesZoneAllowFontDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedSitesZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedSitesZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedSitesZoneAllowScriptlets;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedSitesZoneAllowSmartScreenIE;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedSitesZoneAllowUserDataPersistence;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedSitesZoneDoNotRunAntimalwareAgainstActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedSitesZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedSitesZoneJavaPermissions;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedSitesZoneNavigateWindowsAndFrames;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Kerberos02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowForestSearchOrder;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 CloudKerberosTicketRetrievalEnabled;
	[read: ToSubClass, write(FALSE): ToSubClass] string KerberosClientSupportsClaimsCompoundArmor;
	[read: ToSubClass, write(FALSE): ToSubClass] string RequireKerberosArmoring;
	[read: ToSubClass, write(FALSE): ToSubClass] string RequireStrictKDCValidation;
	[read: ToSubClass, write(FALSE): ToSubClass] string SetMaximumContextTokenSize;
	[read: ToSubClass, write(FALSE): ToSubClass] string UPNNameHints;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_KioskBrowser02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string BlockedUrlExceptions;
	[read: ToSubClass, write(FALSE): ToSubClass] string BlockedUrls;
	[read: ToSubClass, write(FALSE): ToSubClass] string DefaultURL;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnableEndSessionButton;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnableHomeButton;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnableNavigationButtons;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 RestartOnIdleTime;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_LanmanWorkstation02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnableInsecureGuestLogons;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Licensing02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowWindowsEntitlementReactivation;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisallowKMSClientOnlineAVSValidation;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_LocalPoliciesSecurityOptions02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 Accounts_BlockMicrosoftAccounts;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 Accounts_EnableAdministratorAccountStatus;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 Accounts_EnableGuestAccountStatus;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 Accounts_LimitLocalAccountUseOfBlankPasswordsToConsoleLogonOnly;
	[read: ToSubClass, write(FALSE): ToSubClass] string Accounts_RenameAdministratorAccount;
	[read: ToSubClass, write(FALSE): ToSubClass] string Accounts_RenameGuestAccount;
	[read: ToSubClass, write(FALSE): ToSubClass] string Devices_AllowedToFormatAndEjectRemovableMedia;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 Devices_AllowUndockWithoutHavingToLogon;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 Devices_PreventUsersFromInstallingPrinterDriversWhenConnectingToSharedPrinters;
	[read: ToSubClass, write(FALSE): ToSubClass] string Devices_RestrictCDROMAccessToLocallyLoggedOnUserOnly;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 InteractiveLogon_DisplayUserInformationWhenTheSessionIsLocked;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 InteractiveLogon_DoNotDisplayLastSignedIn;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 InteractiveLogon_DoNotDisplayUsernameAtSignIn;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 InteractiveLogon_DoNotRequireCTRLALTDEL;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 InteractiveLogon_MachineInactivityLimit;
	[read: ToSubClass, write(FALSE): ToSubClass] string InteractiveLogon_MessageTextForUsersAttemptingToLogOn;
	[read: ToSubClass, write(FALSE): ToSubClass] string InteractiveLogon_MessageTitleForUsersAttemptingToLogOn;
	[read: ToSubClass, write(FALSE): ToSubClass] string InteractiveLogon_SmartCardRemovalBehavior;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 MicrosoftNetworkClient_DigitallySignCommunicationsAlways;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 MicrosoftNetworkClient_DigitallySignCommunicationsIfServerAgrees;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 MicrosoftNetworkClient_SendUnencryptedPasswordToThirdPartySMBServers;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 MicrosoftNetworkServer_DigitallySignCommunicationsAlways;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 MicrosoftNetworkServer_DigitallySignCommunicationsIfClientAgrees;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 NetworkAccess_DoNotAllowAnonymousEnumerationOfSAMAccounts;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 NetworkAccess_DoNotAllowAnonymousEnumerationOfSamAccountsAndShares;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 NetworkAccess_RestrictAnonymousAccessToNamedPipesAndShares;
	[read: ToSubClass, write(FALSE): ToSubClass] string NetworkAccess_RestrictClientsAllowedToMakeRemoteCallsToSAM;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 NetworkSecurity_AllowLocalSystemToUseComputerIdentityForNTLM;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 NetworkSecurity_AllowPKU2UAuthenticationRequests;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 NetworkSecurity_DoNotStoreLANManagerHashValueOnNextPasswordChange;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 NetworkSecurity_LANManagerAuthenticationLevel;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 NetworkSecurity_MinimumSessionSecurityForNTLMSSPBasedClients;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 NetworkSecurity_MinimumSessionSecurityForNTLMSSPBasedServers;
	[read: ToSubClass, write(FALSE): ToSubClass] string NetworkSecurity_RestrictNTLM_AddRemoteServerExceptionsForNTLMAuthentication;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 NetworkSecurity_RestrictNTLM_AuditIncomingNTLMTraffic;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 NetworkSecurity_RestrictNTLM_IncomingNTLMTraffic;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 NetworkSecurity_RestrictNTLM_OutgoingNTLMTrafficToRemoteServers;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 Shutdown_AllowSystemToBeShutDownWithoutHavingToLogOn;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 Shutdown_ClearVirtualMemoryPageFile;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 UserAccountControl_AllowUIAccessApplicationsToPromptForElevation;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 UserAccountControl_BehaviorOfTheElevationPromptForAdministrators;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 UserAccountControl_BehaviorOfTheElevationPromptForStandardUsers;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 UserAccountControl_DetectApplicationInstallationsAndPromptForElevation;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 UserAccountControl_OnlyElevateExecutableFilesThatAreSignedAndValidated;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 UserAccountControl_OnlyElevateUIAccessApplicationsThatAreInstalledInSecureLocations;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 UserAccountControl_RunAllAdministratorsInAdminApprovalMode;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 UserAccountControl_SwitchToTheSecureDesktopWhenPromptingForElevation;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 UserAccountControl_UseAdminApprovalMode;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 UserAccountControl_VirtualizeFileAndRegistryWriteFailuresToPerUserLocations;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_LocalUsersAndGroups02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string Configure;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_LockDown02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowEdgeSwipe;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Maps02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowOfflineMapsDownloadOverMeteredConnection;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnableOfflineMapsAutoUpdate;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_MemoryDump02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowCrashDump;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowLiveDump;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Messaging02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowMessageSync;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_MixedReality02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AADGroupMembershipCacheValidityInDays;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AutomaticDisplayAdjustment;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 BrightnessButtonDisabled;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EyeTrackingCalibrationPrompt;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 FallbackDiagnostics;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HeadTrackingMode;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 MicrophoneDisabled;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 VisitorAutoLogon;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 VolumeButtonDisabled;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_MSSecurityGuide02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string ApplyUACRestrictionsToLocalAccountsOnNetworkLogon;
	[read: ToSubClass, write(FALSE): ToSubClass] string ConfigureSMBV1ClientDriver;
	[read: ToSubClass, write(FALSE): ToSubClass] string ConfigureSMBV1Server;
	[read: ToSubClass, write(FALSE): ToSubClass] string EnableStructuredExceptionHandlingOverwriteProtection;
	[read: ToSubClass, write(FALSE): ToSubClass] string TurnOnWindowsDefenderProtectionAgainstPotentiallyUnwantedApplications;
	[read: ToSubClass, write(FALSE): ToSubClass] string WDigestAuthentication;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_MSSLegacy02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowICMPRedirectsToOverrideOSPFGeneratedRoutes;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowTheComputerToIgnoreNetBIOSNameReleaseRequestsExceptFromWINSServers;
	[read: ToSubClass, write(FALSE): ToSubClass] string IPSourceRoutingProtectionLevel;
	[read: ToSubClass, write(FALSE): ToSubClass] string IPv6SourceRoutingProtectionLevel;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_NetworkIsolation02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string EnterpriseCloudResources;
	[read: ToSubClass, write(FALSE): ToSubClass] string EnterpriseInternalProxyServers;
	[read: ToSubClass, write(FALSE): ToSubClass] string EnterpriseIPRange;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnterpriseIPRangesAreAuthoritative;
	[read: ToSubClass, write(FALSE): ToSubClass] string EnterpriseNetworkDomainNames;
	[read: ToSubClass, write(FALSE): ToSubClass] string EnterpriseProxyServers;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnterpriseProxyServersAreAuthoritative;
	[read: ToSubClass, write(FALSE): ToSubClass] string NeutralResources;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_NetworkListManager02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowedTlsAuthenticationEndpoints;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_NewsAndInterests02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowNewsAndInterests;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Notifications02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisallowCloudNotification;
	[read: ToSubClass, write(FALSE): ToSubClass] string WnsEndpoint;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Power02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowHibernate;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowStandbyStatesWhenSleepingOnBattery;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowStandbyWhenSleepingPluggedIn;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisplayOffTimeoutOnBattery;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisplayOffTimeoutPluggedIn;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnergySaverBatteryThresholdOnBattery;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnergySaverBatteryThresholdPluggedIn;
	[read: ToSubClass, write(FALSE): ToSubClass] string HibernateTimeoutOnBattery;
	[read: ToSubClass, write(FALSE): ToSubClass] string HibernateTimeoutPluggedIn;
	[read: ToSubClass, write(FALSE): ToSubClass] string RequirePasswordWhenComputerWakesOnBattery;
	[read: ToSubClass, write(FALSE): ToSubClass] string RequirePasswordWhenComputerWakesPluggedIn;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SelectLidCloseActionOnBattery;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SelectLidCloseActionPluggedIn;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SelectPowerButtonActionOnBattery;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SelectPowerButtonActionPluggedIn;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SelectSleepButtonActionOnBattery;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SelectSleepButtonActionPluggedIn;
	[read: ToSubClass, write(FALSE): ToSubClass] string StandbyTimeoutOnBattery;
	[read: ToSubClass, write(FALSE): ToSubClass] string StandbyTimeoutPluggedIn;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 TurnOffHybridSleepOnBattery;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 TurnOffHybridSleepPluggedIn;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 UnattendedSleepTimeoutOnBattery;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 UnattendedSleepTimeoutPluggedIn;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Printers02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string ApprovedUsbPrintDevices;
	[read: ToSubClass, write(FALSE): ToSubClass] string EnableDeviceControl;
	[read: ToSubClass, write(FALSE): ToSubClass] string PointAndPrintRestrictions;
	[read: ToSubClass, write(FALSE): ToSubClass] string PublishPrinters;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Privacy02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowAutoAcceptPairingAndPrivacyConsentPrompts;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowCrossDeviceClipboard;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowInputPersonalization;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableAdvertisingId;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisablePrivacyExperience;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnableActivityFeed;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LetAppsAccessAccountInfo;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessAccountInfo_ForceAllowTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessAccountInfo_ForceDenyTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessAccountInfo_UserInControlOfTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LetAppsAccessBackgroundSpatialPerception;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessBackgroundSpatialPerception_ForceAllowTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessBackgroundSpatialPerception_ForceDenyTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessBackgroundSpatialPerception_UserInControlOfTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LetAppsAccessCalendar;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessCalendar_ForceAllowTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessCalendar_ForceDenyTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessCalendar_UserInControlOfTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LetAppsAccessCallHistory;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessCallHistory_ForceAllowTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessCallHistory_ForceDenyTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessCallHistory_UserInControlOfTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LetAppsAccessCamera;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessCamera_ForceAllowTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessCamera_ForceDenyTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessCamera_UserInControlOfTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LetAppsAccessContacts;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessContacts_ForceAllowTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessContacts_ForceDenyTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessContacts_UserInControlOfTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LetAppsAccessEmail;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessEmail_ForceAllowTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessEmail_ForceDenyTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessEmail_UserInControlOfTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LetAppsAccessGazeInput;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessGazeInput_ForceAllowTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessGazeInput_ForceDenyTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessGazeInput_UserInControlOfTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LetAppsAccessGraphicsCaptureProgrammatic;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessGraphicsCaptureProgrammatic_ForceAllowTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessGraphicsCaptureProgrammatic_ForceDenyTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessGraphicsCaptureProgrammatic_UserInControlOfTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LetAppsAccessGraphicsCaptureWithoutBorder;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessGraphicsCaptureWithoutBorder_ForceAllowTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessGraphicsCaptureWithoutBorder_ForceDenyTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessGraphicsCaptureWithoutBorder_UserInControlOfTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LetAppsAccessLocation;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessLocation_ForceAllowTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessLocation_ForceDenyTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessLocation_UserInControlOfTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LetAppsAccessMessaging;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessMessaging_ForceAllowTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessMessaging_ForceDenyTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessMessaging_UserInControlOfTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LetAppsAccessMicrophone;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessMicrophone_ForceAllowTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessMicrophone_ForceDenyTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessMicrophone_UserInControlOfTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LetAppsAccessMotion;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessMotion_ForceAllowTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessMotion_ForceDenyTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessMotion_UserInControlOfTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LetAppsAccessNotifications;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessNotifications_ForceAllowTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessNotifications_ForceDenyTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessNotifications_UserInControlOfTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LetAppsAccessPhone;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessPhone_ForceAllowTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessPhone_ForceDenyTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessPhone_UserInControlOfTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LetAppsAccessRadios;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessRadios_ForceAllowTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessRadios_ForceDenyTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessRadios_UserInControlOfTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LetAppsAccessTasks;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessTasks_ForceAllowTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessTasks_ForceDenyTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessTasks_UserInControlOfTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LetAppsAccessTrustedDevices;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessTrustedDevices_ForceAllowTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessTrustedDevices_ForceDenyTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsAccessTrustedDevices_UserInControlOfTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LetAppsActivateWithVoice;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LetAppsActivateWithVoiceAboveLock;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LetAppsGetDiagnosticInfo;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsGetDiagnosticInfo_ForceAllowTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsGetDiagnosticInfo_ForceDenyTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsGetDiagnosticInfo_UserInControlOfTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LetAppsRunInBackground;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsRunInBackground_ForceAllowTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsRunInBackground_ForceDenyTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsRunInBackground_UserInControlOfTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LetAppsSyncWithDevices;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsSyncWithDevices_ForceAllowTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsSyncWithDevices_ForceDenyTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string LetAppsSyncWithDevices_UserInControlOfTheseApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PublishUserActivities;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 UploadUserActivities;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_RemoteAssistance02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string CustomizeWarningMessages;
	[read: ToSubClass, write(FALSE): ToSubClass] string SessionLogging;
	[read: ToSubClass, write(FALSE): ToSubClass] string SolicitedRemoteAssistance;
	[read: ToSubClass, write(FALSE): ToSubClass] string UnsolicitedRemoteAssistance;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_RemoteDesktop02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LoadAadCredKeyFromProfile;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_RemoteDesktopServices02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowUsersToConnectRemotely;
	[read: ToSubClass, write(FALSE): ToSubClass] string ClientConnectionEncryptionLevel;
	[read: ToSubClass, write(FALSE): ToSubClass] string DoNotAllowDriveRedirection;
	[read: ToSubClass, write(FALSE): ToSubClass] string DoNotAllowPasswordSaving;
	[read: ToSubClass, write(FALSE): ToSubClass] string PromptForPasswordUponConnection;
	[read: ToSubClass, write(FALSE): ToSubClass] string RequireSecureRPCCommunication;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_RemoteManagement02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowBasicAuthentication_Client;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowBasicAuthentication_Service;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowCredSSPAuthenticationClient;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowCredSSPAuthenticationService;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowRemoteServerManagement;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowUnencryptedTraffic_Client;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowUnencryptedTraffic_Service;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisallowDigestAuthentication;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisallowNegotiateAuthenticationClient;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisallowNegotiateAuthenticationService;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisallowStoringOfRunAsCredentials;
	[read: ToSubClass, write(FALSE): ToSubClass] string SpecifyChannelBindingTokenHardeningLevel;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedHosts;
	[read: ToSubClass, write(FALSE): ToSubClass] string TurnOnCompatibilityHTTPListener;
	[read: ToSubClass, write(FALSE): ToSubClass] string TurnOnCompatibilityHTTPSListener;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_RemoteProcedureCall02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictUnauthenticatedRPCClients;
	[read: ToSubClass, write(FALSE): ToSubClass] string RPCEndpointMapperClientAuthentication;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_RemoteShell02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowRemoteShellAccess;
	[read: ToSubClass, write(FALSE): ToSubClass] string MaxConcurrentUsers;
	[read: ToSubClass, write(FALSE): ToSubClass] string SpecifyIdleTimeout;
	[read: ToSubClass, write(FALSE): ToSubClass] string SpecifyMaxMemory;
	[read: ToSubClass, write(FALSE): ToSubClass] string SpecifyMaxProcesses;
	[read: ToSubClass, write(FALSE): ToSubClass] string SpecifyMaxRemoteShells;
	[read: ToSubClass, write(FALSE): ToSubClass] string SpecifyShellTimeout;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_RestrictedGroups02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string ConfigureGroupMembership;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Search02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowCloudSearch;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowCortanaInAAD;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowFindMyFiles;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowIndexingEncryptedStoresOrItems;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowSearchToUseLocation;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowStoringImagesFromVisionSearch;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowUsingDiacritics;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowWindowsIndexer;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AlwaysUseAutoLangDetection;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableBackoff;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableRemovableDriveIndexing;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DoNotUseWebResults;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PreventIndexingLowDiskSpaceMB;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PreventRemoteQueries;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Security02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowAddProvisioningPackage;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowRemoveProvisioningPackage;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ClearTPMIfNotReady;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureWindowsPasswords;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PreventAutomaticDeviceEncryptionForAzureADJoinedDevices;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 RecoveryEnvironmentAuthentication;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 RequireDeviceEncryption;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 RequireProvisioningPackageSignature;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 RequireRetrieveHealthCertificateOnBoot;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_ServiceControlManager02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string SvchostProcessMitigation;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Settings02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowAutoPlay;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowDataSense;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowDateTime;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowEditDeviceName;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowLanguage;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowOnlineTips;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowPowerSleep;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowRegion;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowSignInOptions;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowVPN;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowWorkplace;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowYourAccount;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnableBatteryCapacity;
	[read: ToSubClass, write(FALSE): ToSubClass] string PageVisibilityList;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_SmartScreen02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnableAppInstallControl;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnableSmartScreenInShell;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PreventOverrideForFilesInShell;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Speech02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowSpeechModelUpdate;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Start02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowPinnedFolderDocuments;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowPinnedFolderDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowPinnedFolderFileExplorer;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowPinnedFolderHomeGroup;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowPinnedFolderMusic;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowPinnedFolderNetwork;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowPinnedFolderPersonalFolder;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowPinnedFolderPictures;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowPinnedFolderSettings;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowPinnedFolderVideos;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableContextMenus;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ForceStartSize;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HideAppList;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HideChangeAccountSettings;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HideFrequentlyUsedApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HideHibernate;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HideLock;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HidePowerButton;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HideRecentJumplists;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HideRecentlyAddedApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HideRestart;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HideShutDown;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HideSignOut;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HideSleep;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HideSwitchAccount;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HideUserTile;
	[read: ToSubClass, write(FALSE): ToSubClass] string ImportEdgeAssets;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 NoPinningToTaskbar;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ShowOrHideMostUsedApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string StartLayout;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Storage02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowDiskHealthModelUpdates;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowStorageSenseGlobal;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowStorageSenseTemporaryFilesCleanup;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigStorageSenseCloudContentDehydrationThreshold;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigStorageSenseDownloadsCleanupThreshold;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigStorageSenseGlobalCadence;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigStorageSenseRecycleBinCleanupThreshold;
	[read: ToSubClass, write(FALSE): ToSubClass] string EnhancedStorageDevices;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 RemovableDiskDenyWriteAccess;
	[read: ToSubClass, write(FALSE): ToSubClass] string WPDDevicesDenyReadAccessPerDevice;
	[read: ToSubClass, write(FALSE): ToSubClass] string WPDDevicesDenyWriteAccessPerDevice;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_System02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowBuildPreview;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowCommercialDataPipeline;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowDesktopAnalyticsProcessing;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowDeviceNameInDiagnosticData;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowEmbeddedMode;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowExperimentation;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowFontProviders;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowLocation;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowMicrosoftManagedDesktopProcessing;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowStorageCard;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowTelemetry;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowUpdateComplianceProcessing;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowUserToResetPhone;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowWUfBCloudProcessing;
	[read: ToSubClass, write(FALSE): ToSubClass] string BootStartDriverInitialization;
	[read: ToSubClass, write(FALSE): ToSubClass] string ConfigureMicrosoft365UploadEndpoint;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureTelemetryOptInChangeNotification;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureTelemetryOptInSettingsUx;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableDeviceDelete;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableDiagnosticDataViewer;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableDirectXDatabaseUpdate;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableEnterpriseAuthProxy;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableOneDriveFileSync;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableOneSettingsDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableSystemRestore;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnableOneSettingsAuditing;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 FeedbackHubAlwaysSaveDiagnosticsLocally;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LimitDiagnosticLogCollection;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LimitDumpCollection;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LimitEnhancedDiagnosticDataWindowsAnalytics;
	[read: ToSubClass, write(FALSE): ToSubClass] string TelemetryProxy;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 TurnOffFileHistory;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_SystemServices02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureHomeGroupListenerServiceStartupMode;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureHomeGroupProviderServiceStartupMode;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureXboxAccessoryManagementServiceStartupMode;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureXboxLiveAuthManagerServiceStartupMode;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureXboxLiveGameSaveServiceStartupMode;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureXboxLiveNetworkingServiceStartupMode;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_TaskManager02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowEndTask;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_TaskScheduler02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnableXboxGameSaveTask;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_TenantRestrictions02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string ConfigureTenantRestrictions;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_TextInput02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowHardwareKeyboardTextSuggestions;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowIMELogging;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowIMENetworkAccess;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowInputPanel;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowJapaneseIMESurrogatePairCharacters;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowJapaneseIVSCharacters;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowJapaneseNonPublishingStandardGlyph;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowJapaneseUserDictionary;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowKeyboardTextSuggestions;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowLanguageFeaturesUninstall;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowLinguisticDataCollection;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowTextInputSuggestionUpdate;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureJapaneseIMEVersion;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureKoreanIMEVersion;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureSimplifiedChineseIMEVersion;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureTraditionalChineseIMEVersion;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnableTouchKeyboardAutoInvokeInDesktopMode;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ExcludeJapaneseIMEExceptJIS0208;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ExcludeJapaneseIMEExceptJIS0208andEUDC;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ExcludeJapaneseIMEExceptShiftJIS;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ForceTouchKeyboardDockedState;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 TouchKeyboardDictationButtonAvailability;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 TouchKeyboardEmojiButtonAvailability;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 TouchKeyboardFullModeAvailability;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 TouchKeyboardHandwritingModeAvailability;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 TouchKeyboardNarrowModeAvailability;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 TouchKeyboardSplitModeAvailability;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 TouchKeyboardWideModeAvailability;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Theme02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string DefaultBackgroundImage;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SystemUsesLightTheme;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_TimeLanguageSettings02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 BlockCleanupOfUnusedPreinstalledLangPacks;
	[read: ToSubClass, write(FALSE): ToSubClass] string ConfigureTimeZone;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 MachineUILanguageOverwrite;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 RestrictLanguagePacksAndFeaturesInstall;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Troubleshooting02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowRecommendations;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Update02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ActiveHoursEnd;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ActiveHoursMaxRange;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ActiveHoursStart;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowAutoUpdate;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowAutoWindowsUpdateDownloadOverMeteredNetwork;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowMUUpdateService;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowNonMicrosoftSignedUpdate;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowUpdateService;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AutomaticMaintenanceWakeUp;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AutoRestartDeadlinePeriodInDays;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AutoRestartDeadlinePeriodInDaysForFeatureUpdates;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AutoRestartNotificationSchedule;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AutoRestartRequiredNotificationDismissal;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 BranchReadinessLevel;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureDeadlineForFeatureUpdates;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureDeadlineForQualityUpdates;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureDeadlineGracePeriod;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureDeadlineGracePeriodForFeatureUpdates;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureDeadlineNoAutoReboot;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureFeatureUpdateUninstallPeriod;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DeferFeatureUpdatesPeriodInDays;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DeferQualityUpdatesPeriodInDays;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DeferUpdatePeriod;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DeferUpgradePeriod;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DetectionFrequency;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableDualScan;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableWUfBSafeguards;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DoNotEnforceEnterpriseTLSCertPinningForUpdateDetection;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EngagedRestartDeadline;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EngagedRestartDeadlineForFeatureUpdates;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EngagedRestartSnoozeSchedule;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EngagedRestartSnoozeScheduleForFeatureUpdates;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EngagedRestartTransitionSchedule;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EngagedRestartTransitionScheduleForFeatureUpdates;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ExcludeWUDriversInQualityUpdate;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 FillEmptyContentUrls;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 IgnoreMOAppDownloadLimit;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 IgnoreMOUpdateDownloadLimit;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ManagePreviewBuilds;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PauseDeferrals;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PauseFeatureUpdates;
	[read: ToSubClass, write(FALSE): ToSubClass] string PauseFeatureUpdatesStartTime;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PauseQualityUpdates;
	[read: ToSubClass, write(FALSE): ToSubClass] string PauseQualityUpdatesStartTime;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PhoneUpdateRestrictions;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 RequireDeferUpgrade;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 RequireUpdateApproval;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ScheduledInstallDay;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ScheduledInstallEveryWeek;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ScheduledInstallFirstWeek;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ScheduledInstallFourthWeek;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ScheduledInstallSecondWeek;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ScheduledInstallThirdWeek;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ScheduledInstallTime;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ScheduleImminentRestartWarning;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ScheduleRestartWarning;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SetAutoRestartNotificationDisable;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SetDisablePauseUXAccess;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SetDisableUXWUAccess;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SetEDURestart;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SetPolicyDrivenUpdateSourceForDriverUpdates;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SetPolicyDrivenUpdateSourceForFeatureUpdates;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SetPolicyDrivenUpdateSourceForOtherUpdates;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SetPolicyDrivenUpdateSourceForQualityUpdates;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SetProxyBehaviorForUpdateDetection;
	[read: ToSubClass, write: ToSubClass] string ProductVersion;
	[read: ToSubClass, write(FALSE): ToSubClass] string TargetReleaseVersion;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 UpdateNotificationLevel;
	[read: ToSubClass, write(FALSE): ToSubClass] string UpdateServiceUrl;
	[read: ToSubClass, write(FALSE): ToSubClass] string UpdateServiceUrlAlternate;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_UserModel02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string EnterpriseSupport;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 UserModel;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_UserRights02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string AccessCredentialManagerAsTrustedCaller;
	[read: ToSubClass, write(FALSE): ToSubClass] string AccessFromNetwork;
	[read: ToSubClass, write(FALSE): ToSubClass] string ActAsPartOfTheOperatingSystem;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowLocalLogOn;
	[read: ToSubClass, write(FALSE): ToSubClass] string BackupFilesAndDirectories;
	[read: ToSubClass, write(FALSE): ToSubClass] string ChangeSystemTime;
	[read: ToSubClass, write(FALSE): ToSubClass] string CreateGlobalObjects;
	[read: ToSubClass, write(FALSE): ToSubClass] string CreatePageFile;
	[read: ToSubClass, write(FALSE): ToSubClass] string CreatePermanentSharedObjects;
	[read: ToSubClass, write(FALSE): ToSubClass] string CreateSymbolicLinks;
	[read: ToSubClass, write(FALSE): ToSubClass] string CreateToken;
	[read: ToSubClass, write(FALSE): ToSubClass] string DebugPrograms;
	[read: ToSubClass, write(FALSE): ToSubClass] string DenyAccessFromNetwork;
	[read: ToSubClass, write(FALSE): ToSubClass] string DenyLocalLogOn;
	[read: ToSubClass, write(FALSE): ToSubClass] string DenyRemoteDesktopServicesLogOn;
	[read: ToSubClass, write(FALSE): ToSubClass] string EnableDelegation;
	[read: ToSubClass, write(FALSE): ToSubClass] string GenerateSecurityAudits;
	[read: ToSubClass, write(FALSE): ToSubClass] string ImpersonateClient;
	[read: ToSubClass, write(FALSE): ToSubClass] string IncreaseSchedulingPriority;
	[read: ToSubClass, write(FALSE): ToSubClass] string LoadUnloadDeviceDrivers;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockMemory;
	[read: ToSubClass, write(FALSE): ToSubClass] string ManageAuditingAndSecurityLog;
	[read: ToSubClass, write(FALSE): ToSubClass] string ManageVolume;
	[read: ToSubClass, write(FALSE): ToSubClass] string ModifyFirmwareEnvironment;
	[read: ToSubClass, write(FALSE): ToSubClass] string ModifyObjectLabel;
	[read: ToSubClass, write(FALSE): ToSubClass] string ProfileSingleProcess;
	[read: ToSubClass, write(FALSE): ToSubClass] string RemoteShutdown;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestoreFilesAndDirectories;
	[read: ToSubClass, write(FALSE): ToSubClass] string TakeOwnership;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_VirtualizationBasedTechnology02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HypervisorEnforcedCodeIntegrity;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 RequireUEFIMemoryAttributesTable;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_Wifi02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowAutoConnectToWiFiSenseHotspots;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowInternetSharing;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowManualWiFiConfiguration;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowWiFi;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowWiFiDirect;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 WiFiToWlan;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 WLANScanMode;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_WindowsAutopilot02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnableAgilityPostEnrollment;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_WindowsConnectionManager02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string ProhitConnectionToNonDomainNetworksWhenConnectedToDomainAuthenticatedNetwork;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_WindowsDefenderSecurityCenter02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string CompanyName;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableAccountProtectionUI;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableAppBrowserUI;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableClearTpmButton;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableDeviceSecurityUI;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableEnhancedNotifications;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableFamilyUI;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableHealthUI;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableNetworkUI;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableNotifications;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableTpmFirmwareUpdateWarning;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableVirusUI;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisallowExploitProtectionOverride;
	[read: ToSubClass, write(FALSE): ToSubClass] string Email;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnableCustomizedToasts;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnableInAppCustomization;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HideRansomwareDataRecovery;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HideSecureBoot;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HideTPMTroubleshooting;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HideWindowsSecurityNotificationAreaControl;
	[read: ToSubClass, write(FALSE): ToSubClass] string Phone;
	[read: ToSubClass, write(FALSE): ToSubClass] string URL;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_WindowsInkWorkspace02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowSuggestedAppsInWindowsInkWorkspace;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowWindowsInkWorkspace;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_WindowsLogon02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowAutomaticRestartSignOn;
	[read: ToSubClass, write(FALSE): ToSubClass] string ConfigAutomaticRestartSignOn;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableLockScreenAppNotifications;
	[read: ToSubClass, write(FALSE): ToSubClass] string DontDisplayNetworkSelectionUI;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnableFirstLogonAnimation;
	[read: ToSubClass, write(FALSE): ToSubClass] string EnumerateLocalUsersOnDomainJoinedComputers;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HideFastUserSwitching;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_WindowsPowerShell02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string TurnOnPowerShellScriptBlockLogging;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_WindowsSandbox02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowAudioInput;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowClipboardRedirection;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowNetworking;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowPrinterRedirection;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowVGPU;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowVideoInput;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_Result01_WirelessDisplay02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowMdnsAdvertisement;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowMdnsDiscovery;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowMovementDetectionOnInfrastructure;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowPCReceiverToBeTCPServer;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowPCSenderToBeTCPClient;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowProjectionFromPC;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowProjectionFromPCOverInfrastructure;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowProjectionToPC;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowProjectionToPCOverInfrastructure;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowUserInputFromWirelessDisplayReceiver;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 RequirePinForPairing;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Config01_ApplicationManagement02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 MSIAlwaysInstallWithElevatedPrivileges;
	[read: ToSubClass, write: ToSubClass] sint32 RequirePrivateStoreOnly;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Config01_AttachmentManager02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string DoNotPreserveZoneInformation;
	[read: ToSubClass, write: ToSubClass] string HideZoneInfoMechanism;
	[read: ToSubClass, write: ToSubClass] string NotifyAntivirusPrograms;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Config01_Authentication02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowEAPCertSSO;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Config01_Browser02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowAddressBarDropdown;
	[read: ToSubClass, write: ToSubClass] sint32 AllowAutofill;
	[read: ToSubClass, write: ToSubClass] sint32 AllowConfigurationUpdateForBooksLibrary;
	[read: ToSubClass, write: ToSubClass] sint32 AllowCookies;
	[read: ToSubClass, write: ToSubClass] sint32 AllowDeveloperTools;
	[read: ToSubClass, write: ToSubClass] sint32 AllowDoNotTrack;
	[read: ToSubClass, write: ToSubClass] sint32 AllowExtensions;
	[read: ToSubClass, write: ToSubClass] sint32 AllowFlash;
	[read: ToSubClass, write: ToSubClass] sint32 AllowFlashClickToRun;
	[read: ToSubClass, write: ToSubClass] sint32 AllowFullScreenMode;
	[read: ToSubClass, write: ToSubClass] sint32 AllowInPrivate;
	[read: ToSubClass, write: ToSubClass] sint32 AllowMicrosoftCompatibilityList;
	[read: ToSubClass, write: ToSubClass] sint32 AllowPasswordManager;
	[read: ToSubClass, write: ToSubClass] sint32 AllowPopups;
	[read: ToSubClass, write: ToSubClass] sint32 AllowPrelaunch;
	[read: ToSubClass, write: ToSubClass] sint32 AllowPrinting;
	[read: ToSubClass, write: ToSubClass] sint32 AllowSavingHistory;
	[read: ToSubClass, write: ToSubClass] sint32 AllowSearchEngineCustomization;
	[read: ToSubClass, write: ToSubClass] sint32 AllowSearchSuggestionsinAddressBar;
	[read: ToSubClass, write: ToSubClass] sint32 AllowSideloadingOfExtensions;
	[read: ToSubClass, write: ToSubClass] sint32 AllowSmartScreen;
	[read: ToSubClass, write: ToSubClass] sint32 AllowTabPreloading;
	[read: ToSubClass, write: ToSubClass] sint32 AllowWebContentOnNewTabPage;
	[read: ToSubClass, write: ToSubClass] sint32 AlwaysEnableBooksLibrary;
	[read: ToSubClass, write: ToSubClass] sint32 ClearBrowsingDataOnExit;
	[read: ToSubClass, write: ToSubClass] string ConfigureAdditionalSearchEngines;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureFavoritesBar;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureHomeButton;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureKioskMode;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureKioskResetAfterIdleTimeout;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureOpenMicrosoftEdgeWith;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureTelemetryForMicrosoft365Analytics;
	[read: ToSubClass, write: ToSubClass] sint32 DisableLockdownOfStartPages;
	[read: ToSubClass, write: ToSubClass] sint32 EnableExtendedBooksTelemetry;
	[read: ToSubClass, write: ToSubClass] string EnterpriseModeSiteList;
	[read: ToSubClass, write: ToSubClass] string EnterpriseSiteListServiceUrl;
	[read: ToSubClass, write: ToSubClass] string HomePages;
	[read: ToSubClass, write: ToSubClass] sint32 LockdownFavorites;
	[read: ToSubClass, write: ToSubClass] sint32 PreventAccessToAboutFlagsInMicrosoftEdge;
	[read: ToSubClass, write: ToSubClass] sint32 PreventCertErrorOverrides;
	[read: ToSubClass, write: ToSubClass] sint32 PreventFirstRunPage;
	[read: ToSubClass, write: ToSubClass] sint32 PreventLiveTileDataCollection;
	[read: ToSubClass, write: ToSubClass] sint32 PreventSmartScreenPromptOverride;
	[read: ToSubClass, write: ToSubClass] sint32 PreventSmartScreenPromptOverrideForFiles;
	[read: ToSubClass, write: ToSubClass] string PreventTurningOffRequiredExtensions;
	[read: ToSubClass, write: ToSubClass] sint32 PreventUsingLocalHostIPAddressForWebRTC;
	[read: ToSubClass, write: ToSubClass] string ProvisionFavorites;
	[read: ToSubClass, write: ToSubClass] sint32 SendIntranetTraffictoInternetExplorer;
	[read: ToSubClass, write: ToSubClass] string SetDefaultSearchEngine;
	[read: ToSubClass, write: ToSubClass] string SetHomeButtonURL;
	[read: ToSubClass, write: ToSubClass] string SetNewTabPageURL;
	[read: ToSubClass, write: ToSubClass] sint32 ShowMessageWhenOpeningSitesInInternetExplorer;
	[read: ToSubClass, write: ToSubClass] sint32 SyncFavoritesBetweenIEAndMicrosoftEdge;
	[read: ToSubClass, write: ToSubClass] sint32 UnlockHomeButton;
	[read: ToSubClass, write: ToSubClass] sint32 UseSharedFolderForBooks;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Config01_CredentialsUI02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string DisablePasswordReveal;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Config01_Desktop02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string PreventUserRedirectionOfProfileFolders;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Config01_Display02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 EnablePerProcessDpi;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Config01_Education02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowGraphingCalculator;
	[read: ToSubClass, write: ToSubClass] string DefaultPrinterName;
	[read: ToSubClass, write: ToSubClass] sint32 PreventAddingNewPrinters;
	[read: ToSubClass, write: ToSubClass] string PrinterNames;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Config01_EnterpriseCloudPrint02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string CloudPrinterDiscoveryEndPoint;
	[read: ToSubClass, write: ToSubClass] string CloudPrintOAuthAuthority;
	[read: ToSubClass, write: ToSubClass] string CloudPrintOAuthClientId;
	[read: ToSubClass, write: ToSubClass] string CloudPrintResourceId;
	[read: ToSubClass, write: ToSubClass] sint32 DiscoveryMaxPrinterLimit;
	[read: ToSubClass, write: ToSubClass] string MopriaDiscoveryResourceId;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Config01_Experience02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowSpotlightCollection;
	[read: ToSubClass, write: ToSubClass] sint32 AllowTailoredExperiencesWithDiagnosticData;
	[read: ToSubClass, write: ToSubClass] sint32 AllowThirdPartySuggestionsInWindowsSpotlight;
	[read: ToSubClass, write: ToSubClass] sint32 AllowWindowsSpotlight;
	[read: ToSubClass, write: ToSubClass] sint32 AllowWindowsSpotlightOnActionCenter;
	[read: ToSubClass, write: ToSubClass] sint32 AllowWindowsSpotlightOnSettings;
	[read: ToSubClass, write: ToSubClass] sint32 AllowWindowsSpotlightWindowsWelcomeExperience;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureWindowsSpotlightOnLockScreen;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Config01_FileExplorer02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowOptionToShowNetwork;
	[read: ToSubClass, write: ToSubClass] sint32 AllowOptionToShowThisPC;
	[read: ToSubClass, write: ToSubClass] sint32 SetAllowedFolderLocations;
	[read: ToSubClass, write: ToSubClass] sint32 SetAllowedStorageLocations;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Config01_InternetExplorer02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string AddSearchProvider;
	[read: ToSubClass, write: ToSubClass] string AllowActiveXFiltering;
	[read: ToSubClass, write: ToSubClass] string AllowAddOnList;
	[read: ToSubClass, write: ToSubClass] string AllowAutoComplete;
	[read: ToSubClass, write: ToSubClass] string AllowCertificateAddressMismatchWarning;
	[read: ToSubClass, write: ToSubClass] string AllowDeletingBrowsingHistoryOnExit;
	[read: ToSubClass, write: ToSubClass] string AllowEnhancedProtectedMode;
	[read: ToSubClass, write: ToSubClass] string AllowEnhancedSuggestionsInAddressBar;
	[read: ToSubClass, write: ToSubClass] string AllowEnterpriseModeFromToolsMenu;
	[read: ToSubClass, write: ToSubClass] string AllowEnterpriseModeSiteList;
	[read: ToSubClass, write: ToSubClass] string AllowInternetExplorer7PolicyList;
	[read: ToSubClass, write: ToSubClass] string AllowInternetExplorerStandardsMode;
	[read: ToSubClass, write: ToSubClass] string AllowInternetZoneTemplate;
	[read: ToSubClass, write: ToSubClass] string AllowIntranetZoneTemplate;
	[read: ToSubClass, write: ToSubClass] string AllowLocalMachineZoneTemplate;
	[read: ToSubClass, write: ToSubClass] string AllowLockedDownInternetZoneTemplate;
	[read: ToSubClass, write: ToSubClass] string AllowLockedDownIntranetZoneTemplate;
	[read: ToSubClass, write: ToSubClass] string AllowLockedDownLocalMachineZoneTemplate;
	[read: ToSubClass, write: ToSubClass] string AllowLockedDownRestrictedSitesZoneTemplate;
	[read: ToSubClass, write: ToSubClass] string AllowOneWordEntry;
	[read: ToSubClass, write: ToSubClass] string AllowSaveTargetAsInIEMode;
	[read: ToSubClass, write: ToSubClass] string AllowSiteToZoneAssignmentList;
	[read: ToSubClass, write: ToSubClass] string AllowsLockedDownTrustedSitesZoneTemplate;
	[read: ToSubClass, write: ToSubClass] string AllowSoftwareWhenSignatureIsInvalid;
	[read: ToSubClass, write: ToSubClass] string AllowsRestrictedSitesZoneTemplate;
	[read: ToSubClass, write: ToSubClass] string AllowSuggestedSites;
	[read: ToSubClass, write: ToSubClass] string AllowTrustedSitesZoneTemplate;
	[read: ToSubClass, write: ToSubClass] string CheckServerCertificateRevocation;
	[read: ToSubClass, write: ToSubClass] string CheckSignaturesOnDownloadedPrograms;
	[read: ToSubClass, write: ToSubClass] string ConfigureEdgeRedirectChannel;
	[read: ToSubClass, write: ToSubClass] string ConsistentMimeHandlingInternetExplorerProcesses;
	[read: ToSubClass, write: ToSubClass] string DisableActiveXVersionListAutoDownload;
	[read: ToSubClass, write: ToSubClass] string DisableBypassOfSmartScreenWarnings;
	[read: ToSubClass, write: ToSubClass] string DisableBypassOfSmartScreenWarningsAboutUncommonFiles;
	[read: ToSubClass, write: ToSubClass] string DisableCompatView;
	[read: ToSubClass, write: ToSubClass] string DisableConfiguringHistory;
	[read: ToSubClass, write: ToSubClass] string DisableCrashDetection;
	[read: ToSubClass, write: ToSubClass] string DisableCustomerExperienceImprovementProgramParticipation;
	[read: ToSubClass, write: ToSubClass] string DisableDeletingUserVisitedWebsites;
	[read: ToSubClass, write: ToSubClass] string DisableEnclosureDownloading;
	[read: ToSubClass, write: ToSubClass] string DisableEncryptionSupport;
	[read: ToSubClass, write: ToSubClass] string DisableFeedsBackgroundSync;
	[read: ToSubClass, write: ToSubClass] string DisableFirstRunWizard;
	[read: ToSubClass, write: ToSubClass] string DisableFlipAheadFeature;
	[read: ToSubClass, write: ToSubClass] string DisableGeolocation;
	[read: ToSubClass, write: ToSubClass] string DisableHomePageChange;
	[read: ToSubClass, write: ToSubClass] string DisableIgnoringCertificateErrors;
	[read: ToSubClass, write: ToSubClass] string DisableInPrivateBrowsing;
	[read: ToSubClass, write: ToSubClass] string DisableInternetExplorerApp;
	[read: ToSubClass, write: ToSubClass] string DisableProcessesInEnhancedProtectedMode;
	[read: ToSubClass, write: ToSubClass] string DisableProxyChange;
	[read: ToSubClass, write: ToSubClass] string DisableSearchProviderChange;
	[read: ToSubClass, write: ToSubClass] string DisableSecondaryHomePageChange;
	[read: ToSubClass, write: ToSubClass] string DisableSecuritySettingsCheck;
	[read: ToSubClass, write: ToSubClass] string DisableWebAddressAutoComplete;
	[read: ToSubClass, write: ToSubClass] string DoNotAllowActiveXControlsInProtectedMode;
	[read: ToSubClass, write: ToSubClass] string DoNotBlockOutdatedActiveXControls;
	[read: ToSubClass, write: ToSubClass] string DoNotBlockOutdatedActiveXControlsOnSpecificDomains;
	[read: ToSubClass, write: ToSubClass] string EnableExtendedIEModeHotkeys;
	[read: ToSubClass, write: ToSubClass] string IncludeAllLocalSites;
	[read: ToSubClass, write: ToSubClass] string IncludeAllNetworkPaths;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowAccessToDataSources;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowCopyPasteViaScript;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowDragAndDropCopyAndPasteFiles;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowFontDownloads;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowLoadingOfXAMLFiles;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowOnlyApprovedDomainsToUseActiveXControls;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowOnlyApprovedDomainsToUseTDCActiveXControl;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowScriptingOfInternetExplorerWebBrowserControls;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowScriptInitiatedWindows;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowScriptlets;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowSmartScreenIE;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowUpdatesToStatusBarViaScript;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowUserDataPersistence;
	[read: ToSubClass, write: ToSubClass] string InternetZoneAllowVBScriptToRunInInternetExplorer;
	[read: ToSubClass, write: ToSubClass] string InternetZoneDoNotRunAntimalwareAgainstActiveXControls;
	[read: ToSubClass, write: ToSubClass] string InternetZoneDownloadSignedActiveXControls;
	[read: ToSubClass, write: ToSubClass] string InternetZoneDownloadUnsignedActiveXControls;
	[read: ToSubClass, write: ToSubClass] string InternetZoneEnableCrossSiteScriptingFilter;
	[read: ToSubClass, write: ToSubClass] string InternetZoneEnableDraggingOfContentFromDifferentDomainsAcrossWindows;
	[read: ToSubClass, write: ToSubClass] string InternetZoneEnableDraggingOfContentFromDifferentDomainsWithinWindows;
	[read: ToSubClass, write: ToSubClass] string InternetZoneEnableMIMESniffing;
	[read: ToSubClass, write: ToSubClass] string InternetZoneEnableProtectedMode;
	[read: ToSubClass, write: ToSubClass] string InternetZoneIncludeLocalPathWhenUploadingFilesToServer;
	[read: ToSubClass, write: ToSubClass] string InternetZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write: ToSubClass] string InternetZoneJavaPermissions;
	[read: ToSubClass, write: ToSubClass] string InternetZoneLaunchingApplicationsAndFilesInIFRAME;
	[read: ToSubClass, write: ToSubClass] string InternetZoneLogonOptions;
	[read: ToSubClass, write: ToSubClass] string InternetZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write: ToSubClass] string InternetZoneRunNETFrameworkReliantComponentsSignedWithAuthenticode;
	[read: ToSubClass, write: ToSubClass] string InternetZoneShowSecurityWarningForPotentiallyUnsafeFiles;
	[read: ToSubClass, write: ToSubClass] string InternetZoneUsePopupBlocker;
	[read: ToSubClass, write: ToSubClass] string IntranetZoneAllowAccessToDataSources;
	[read: ToSubClass, write: ToSubClass] string IntranetZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write: ToSubClass] string IntranetZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write: ToSubClass] string IntranetZoneAllowFontDownloads;
	[read: ToSubClass, write: ToSubClass] string IntranetZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write: ToSubClass] string IntranetZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write: ToSubClass] string IntranetZoneAllowScriptlets;
	[read: ToSubClass, write: ToSubClass] string IntranetZoneAllowSmartScreenIE;
	[read: ToSubClass, write: ToSubClass] string IntranetZoneAllowUserDataPersistence;
	[read: ToSubClass, write: ToSubClass] string IntranetZoneDoNotRunAntimalwareAgainstActiveXControls;
	[read: ToSubClass, write: ToSubClass] string IntranetZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write: ToSubClass] string IntranetZoneJavaPermissions;
	[read: ToSubClass, write: ToSubClass] string IntranetZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write: ToSubClass] string JScriptReplacement;
	[read: ToSubClass, write: ToSubClass] string KeepIntranetSitesInInternetExplorer;
	[read: ToSubClass, write: ToSubClass] string LocalMachineZoneAllowAccessToDataSources;
	[read: ToSubClass, write: ToSubClass] string LocalMachineZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write: ToSubClass] string LocalMachineZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write: ToSubClass] string LocalMachineZoneAllowFontDownloads;
	[read: ToSubClass, write: ToSubClass] string LocalMachineZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write: ToSubClass] string LocalMachineZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write: ToSubClass] string LocalMachineZoneAllowScriptlets;
	[read: ToSubClass, write: ToSubClass] string LocalMachineZoneAllowSmartScreenIE;
	[read: ToSubClass, write: ToSubClass] string LocalMachineZoneAllowUserDataPersistence;
	[read: ToSubClass, write: ToSubClass] string LocalMachineZoneDoNotRunAntimalwareAgainstActiveXControls;
	[read: ToSubClass, write: ToSubClass] string LocalMachineZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write: ToSubClass] string LocalMachineZoneJavaPermissions;
	[read: ToSubClass, write: ToSubClass] string LocalMachineZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write: ToSubClass] string LockedDownInternetZoneAllowAccessToDataSources;
	[read: ToSubClass, write: ToSubClass] string LockedDownInternetZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write: ToSubClass] string LockedDownInternetZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write: ToSubClass] string LockedDownInternetZoneAllowFontDownloads;
	[read: ToSubClass, write: ToSubClass] string LockedDownInternetZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write: ToSubClass] string LockedDownInternetZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write: ToSubClass] string LockedDownInternetZoneAllowScriptlets;
	[read: ToSubClass, write: ToSubClass] string LockedDownInternetZoneAllowSmartScreenIE;
	[read: ToSubClass, write: ToSubClass] string LockedDownInternetZoneAllowUserDataPersistence;
	[read: ToSubClass, write: ToSubClass] string LockedDownInternetZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write: ToSubClass] string LockedDownInternetZoneJavaPermissions;
	[read: ToSubClass, write: ToSubClass] string LockedDownInternetZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write: ToSubClass] string LockedDownIntranetJavaPermissions;
	[read: ToSubClass, write: ToSubClass] string LockedDownIntranetZoneAllowAccessToDataSources;
	[read: ToSubClass, write: ToSubClass] string LockedDownIntranetZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write: ToSubClass] string LockedDownIntranetZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write: ToSubClass] string LockedDownIntranetZoneAllowFontDownloads;
	[read: ToSubClass, write: ToSubClass] string LockedDownIntranetZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write: ToSubClass] string LockedDownIntranetZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write: ToSubClass] string LockedDownIntranetZoneAllowScriptlets;
	[read: ToSubClass, write: ToSubClass] string LockedDownIntranetZoneAllowSmartScreenIE;
	[read: ToSubClass, write: ToSubClass] string LockedDownIntranetZoneAllowUserDataPersistence;
	[read: ToSubClass, write: ToSubClass] string LockedDownIntranetZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write: ToSubClass] string LockedDownIntranetZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write: ToSubClass] string LockedDownLocalMachineZoneAllowAccessToDataSources;
	[read: ToSubClass, write: ToSubClass] string LockedDownLocalMachineZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write: ToSubClass] string LockedDownLocalMachineZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write: ToSubClass] string LockedDownLocalMachineZoneAllowFontDownloads;
	[read: ToSubClass, write: ToSubClass] string LockedDownLocalMachineZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write: ToSubClass] string LockedDownLocalMachineZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write: ToSubClass] string LockedDownLocalMachineZoneAllowScriptlets;
	[read: ToSubClass, write: ToSubClass] string LockedDownLocalMachineZoneAllowSmartScreenIE;
	[read: ToSubClass, write: ToSubClass] string LockedDownLocalMachineZoneAllowUserDataPersistence;
	[read: ToSubClass, write: ToSubClass] string LockedDownLocalMachineZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write: ToSubClass] string LockedDownLocalMachineZoneJavaPermissions;
	[read: ToSubClass, write: ToSubClass] string LockedDownLocalMachineZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write: ToSubClass] string LockedDownRestrictedSitesZoneAllowAccessToDataSources;
	[read: ToSubClass, write: ToSubClass] string LockedDownRestrictedSitesZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write: ToSubClass] string LockedDownRestrictedSitesZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write: ToSubClass] string LockedDownRestrictedSitesZoneAllowFontDownloads;
	[read: ToSubClass, write: ToSubClass] string LockedDownRestrictedSitesZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write: ToSubClass] string LockedDownRestrictedSitesZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write: ToSubClass] string LockedDownRestrictedSitesZoneAllowScriptlets;
	[read: ToSubClass, write: ToSubClass] string LockedDownRestrictedSitesZoneAllowSmartScreenIE;
	[read: ToSubClass, write: ToSubClass] string LockedDownRestrictedSitesZoneAllowUserDataPersistence;
	[read: ToSubClass, write: ToSubClass] string LockedDownRestrictedSitesZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write: ToSubClass] string LockedDownRestrictedSitesZoneJavaPermissions;
	[read: ToSubClass, write: ToSubClass] string LockedDownRestrictedSitesZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write: ToSubClass] string LockedDownTrustedSitesZoneAllowAccessToDataSources;
	[read: ToSubClass, write: ToSubClass] string LockedDownTrustedSitesZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write: ToSubClass] string LockedDownTrustedSitesZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write: ToSubClass] string LockedDownTrustedSitesZoneAllowFontDownloads;
	[read: ToSubClass, write: ToSubClass] string LockedDownTrustedSitesZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write: ToSubClass] string LockedDownTrustedSitesZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write: ToSubClass] string LockedDownTrustedSitesZoneAllowScriptlets;
	[read: ToSubClass, write: ToSubClass] string LockedDownTrustedSitesZoneAllowSmartScreenIE;
	[read: ToSubClass, write: ToSubClass] string LockedDownTrustedSitesZoneAllowUserDataPersistence;
	[read: ToSubClass, write: ToSubClass] string LockedDownTrustedSitesZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write: ToSubClass] string LockedDownTrustedSitesZoneJavaPermissions;
	[read: ToSubClass, write: ToSubClass] string LockedDownTrustedSitesZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write: ToSubClass] string MimeSniffingSafetyFeatureInternetExplorerProcesses;
	[read: ToSubClass, write: ToSubClass] string MKProtocolSecurityRestrictionInternetExplorerProcesses;
	[read: ToSubClass, write: ToSubClass] string NewTabDefaultPage;
	[read: ToSubClass, write: ToSubClass] string NotificationBarInternetExplorerProcesses;
	[read: ToSubClass, write: ToSubClass] string PreventManagingSmartScreenFilter;
	[read: ToSubClass, write: ToSubClass] string PreventPerUserInstallationOfActiveXControls;
	[read: ToSubClass, write: ToSubClass] string ProtectionFromZoneElevationInternetExplorerProcesses;
	[read: ToSubClass, write: ToSubClass] string RemoveRunThisTimeButtonForOutdatedActiveXControls;
	[read: ToSubClass, write: ToSubClass] string RestrictActiveXInstallInternetExplorerProcesses;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowAccessToDataSources;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowActiveScripting;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowBinaryAndScriptBehaviors;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowCopyPasteViaScript;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowDragAndDropCopyAndPasteFiles;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowFileDownloads;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowFontDownloads;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowLoadingOfXAMLFiles;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowMETAREFRESH;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowOnlyApprovedDomainsToUseActiveXControls;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowOnlyApprovedDomainsToUseTDCActiveXControl;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowScriptingOfInternetExplorerWebBrowserControls;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowScriptInitiatedWindows;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowScriptlets;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowSmartScreenIE;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowUpdatesToStatusBarViaScript;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowUserDataPersistence;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneAllowVBScriptToRunInInternetExplorer;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneDoNotRunAntimalwareAgainstActiveXControls;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneDownloadSignedActiveXControls;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneDownloadUnsignedActiveXControls;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneEnableCrossSiteScriptingFilter;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneEnableDraggingOfContentFromDifferentDomainsAcrossWindows;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneEnableDraggingOfContentFromDifferentDomainsWithinWindows;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneEnableMIMESniffing;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneIncludeLocalPathWhenUploadingFilesToServer;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneJavaPermissions;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneLaunchingApplicationsAndFilesInIFRAME;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneLogonOptions;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneRunActiveXControlsAndPlugins;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneRunNETFrameworkReliantComponentsSignedWithAuthenticode;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneScriptActiveXControlsMarkedSafeForScripting;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneScriptingOfJavaApplets;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneShowSecurityWarningForPotentiallyUnsafeFiles;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneTurnOnProtectedMode;
	[read: ToSubClass, write: ToSubClass] string RestrictedSitesZoneUsePopupBlocker;
	[read: ToSubClass, write: ToSubClass] string RestrictFileDownloadInternetExplorerProcesses;
	[read: ToSubClass, write: ToSubClass] string ScriptedWindowSecurityRestrictionsInternetExplorerProcesses;
	[read: ToSubClass, write: ToSubClass] string SearchProviderList;
	[read: ToSubClass, write: ToSubClass] string SendSitesNotInEnterpriseSiteListToEdge;
	[read: ToSubClass, write: ToSubClass] string SpecifyUseOfActiveXInstallerService;
	[read: ToSubClass, write: ToSubClass] string TrustedSitesZoneAllowAccessToDataSources;
	[read: ToSubClass, write: ToSubClass] string TrustedSitesZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write: ToSubClass] string TrustedSitesZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write: ToSubClass] string TrustedSitesZoneAllowFontDownloads;
	[read: ToSubClass, write: ToSubClass] string TrustedSitesZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write: ToSubClass] string TrustedSitesZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write: ToSubClass] string TrustedSitesZoneAllowScriptlets;
	[read: ToSubClass, write: ToSubClass] string TrustedSitesZoneAllowSmartScreenIE;
	[read: ToSubClass, write: ToSubClass] string TrustedSitesZoneAllowUserDataPersistence;
	[read: ToSubClass, write: ToSubClass] string TrustedSitesZoneDoNotRunAntimalwareAgainstActiveXControls;
	[read: ToSubClass, write: ToSubClass] string TrustedSitesZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write: ToSubClass] string TrustedSitesZoneJavaPermissions;
	[read: ToSubClass, write: ToSubClass] string TrustedSitesZoneNavigateWindowsAndFrames;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Config01_Multitasking02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 BrowserAltTabBlowout;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Config01_Notifications02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 DisallowNotificationMirroring;
	[read: ToSubClass, write: ToSubClass] sint32 DisallowTileNotification;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Config01_Printers02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string ApprovedUsbPrintDevicesUser;
	[read: ToSubClass, write: ToSubClass] string EnableDeviceControlUser;
	[read: ToSubClass, write: ToSubClass] string PointAndPrintRestrictions_User;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Config01_Privacy02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 DisablePrivacyExperience;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Config01_RemoteDesktop02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string AutoSubscription;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Config01_Security02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 RecoveryEnvironmentAuthentication;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Config01_Settings02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 ConfigureTaskbarCalendar;
	[read: ToSubClass, write: ToSubClass] string PageVisibilityList;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Config01_Start02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 DisableContextMenus;
	[read: ToSubClass, write: ToSubClass] sint32 ForceStartSize;
	[read: ToSubClass, write: ToSubClass] sint32 HideAppList;
	[read: ToSubClass, write: ToSubClass] sint32 HideFrequentlyUsedApps;
	[read: ToSubClass, write: ToSubClass] sint32 HidePeopleBar;
	[read: ToSubClass, write: ToSubClass] sint32 HideRecentJumplists;
	[read: ToSubClass, write: ToSubClass] sint32 HideRecentlyAddedApps;
	[read: ToSubClass, write: ToSubClass] sint32 ShowOrHideMostUsedApps;
	[read: ToSubClass, write: ToSubClass] string StartLayout;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Config01_Storage02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string WPDDevicesDenyReadAccessPerUser;
	[read: ToSubClass, write: ToSubClass] string WPDDevicesDenyWriteAccessPerUser;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Config01_System02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 AllowTelemetry;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Config01_TimeLanguageSettings02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] sint32 RestrictLanguagePacksAndFeaturesInstall;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Result01_ApplicationManagement02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 MSIAlwaysInstallWithElevatedPrivileges;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 RequirePrivateStoreOnly;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Result01_AttachmentManager02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string DoNotPreserveZoneInformation;
	[read: ToSubClass, write(FALSE): ToSubClass] string HideZoneInfoMechanism;
	[read: ToSubClass, write(FALSE): ToSubClass] string NotifyAntivirusPrograms;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Result01_Authentication02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowEAPCertSSO;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Result01_Browser02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowAddressBarDropdown;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowAutofill;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowConfigurationUpdateForBooksLibrary;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowCookies;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowDeveloperTools;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowDoNotTrack;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowExtensions;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowFlash;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowFlashClickToRun;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowFullScreenMode;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowInPrivate;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowMicrosoftCompatibilityList;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowPasswordManager;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowPopups;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowPrelaunch;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowPrinting;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowSavingHistory;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowSearchEngineCustomization;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowSearchSuggestionsinAddressBar;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowSideloadingOfExtensions;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowSmartScreen;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowTabPreloading;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowWebContentOnNewTabPage;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AlwaysEnableBooksLibrary;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ClearBrowsingDataOnExit;
	[read: ToSubClass, write(FALSE): ToSubClass] string ConfigureAdditionalSearchEngines;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureFavoritesBar;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureHomeButton;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureKioskMode;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureKioskResetAfterIdleTimeout;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureOpenMicrosoftEdgeWith;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureTelemetryForMicrosoft365Analytics;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableLockdownOfStartPages;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnableExtendedBooksTelemetry;
	[read: ToSubClass, write(FALSE): ToSubClass] string EnterpriseModeSiteList;
	[read: ToSubClass, write(FALSE): ToSubClass] string EnterpriseSiteListServiceUrl;
	[read: ToSubClass, write(FALSE): ToSubClass] string HomePages;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 LockdownFavorites;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PreventAccessToAboutFlagsInMicrosoftEdge;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PreventCertErrorOverrides;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PreventFirstRunPage;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PreventLiveTileDataCollection;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PreventSmartScreenPromptOverride;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PreventSmartScreenPromptOverrideForFiles;
	[read: ToSubClass, write(FALSE): ToSubClass] string PreventTurningOffRequiredExtensions;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PreventUsingLocalHostIPAddressForWebRTC;
	[read: ToSubClass, write(FALSE): ToSubClass] string ProvisionFavorites;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SendIntranetTraffictoInternetExplorer;
	[read: ToSubClass, write(FALSE): ToSubClass] string SetDefaultSearchEngine;
	[read: ToSubClass, write(FALSE): ToSubClass] string SetHomeButtonURL;
	[read: ToSubClass, write(FALSE): ToSubClass] string SetNewTabPageURL;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ShowMessageWhenOpeningSitesInInternetExplorer;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SyncFavoritesBetweenIEAndMicrosoftEdge;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 UnlockHomeButton;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 UseSharedFolderForBooks;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Result01_CredentialsUI02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisablePasswordReveal;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Result01_Desktop02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string PreventUserRedirectionOfProfileFolders;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Result01_Display02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 EnablePerProcessDpi;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Result01_Education02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowGraphingCalculator;
	[read: ToSubClass, write(FALSE): ToSubClass] string DefaultPrinterName;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 PreventAddingNewPrinters;
	[read: ToSubClass, write(FALSE): ToSubClass] string PrinterNames;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Result01_EnterpriseCloudPrint02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string CloudPrinterDiscoveryEndPoint;
	[read: ToSubClass, write(FALSE): ToSubClass] string CloudPrintOAuthAuthority;
	[read: ToSubClass, write(FALSE): ToSubClass] string CloudPrintOAuthClientId;
	[read: ToSubClass, write(FALSE): ToSubClass] string CloudPrintResourceId;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DiscoveryMaxPrinterLimit;
	[read: ToSubClass, write(FALSE): ToSubClass] string MopriaDiscoveryResourceId;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Result01_Experience02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowSpotlightCollection;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowTailoredExperiencesWithDiagnosticData;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowThirdPartySuggestionsInWindowsSpotlight;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowWindowsSpotlight;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowWindowsSpotlightOnActionCenter;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowWindowsSpotlightOnSettings;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowWindowsSpotlightWindowsWelcomeExperience;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureWindowsSpotlightOnLockScreen;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Result01_FileExplorer02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowOptionToShowNetwork;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowOptionToShowThisPC;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SetAllowedFolderLocations;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 SetAllowedStorageLocations;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Result01_InternetExplorer02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string AddSearchProvider;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowActiveXFiltering;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowAddOnList;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowAutoComplete;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowCertificateAddressMismatchWarning;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowDeletingBrowsingHistoryOnExit;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowEnhancedProtectedMode;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowEnhancedSuggestionsInAddressBar;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowEnterpriseModeFromToolsMenu;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowEnterpriseModeSiteList;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowInternetExplorer7PolicyList;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowInternetExplorerStandardsMode;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowInternetZoneTemplate;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowIntranetZoneTemplate;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowLocalMachineZoneTemplate;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowLockedDownInternetZoneTemplate;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowLockedDownIntranetZoneTemplate;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowLockedDownLocalMachineZoneTemplate;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowLockedDownRestrictedSitesZoneTemplate;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowOneWordEntry;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowSaveTargetAsInIEMode;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowSiteToZoneAssignmentList;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowsLockedDownTrustedSitesZoneTemplate;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowSoftwareWhenSignatureIsInvalid;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowsRestrictedSitesZoneTemplate;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowSuggestedSites;
	[read: ToSubClass, write(FALSE): ToSubClass] string AllowTrustedSitesZoneTemplate;
	[read: ToSubClass, write(FALSE): ToSubClass] string CheckServerCertificateRevocation;
	[read: ToSubClass, write(FALSE): ToSubClass] string CheckSignaturesOnDownloadedPrograms;
	[read: ToSubClass, write(FALSE): ToSubClass] string ConfigureEdgeRedirectChannel;
	[read: ToSubClass, write(FALSE): ToSubClass] string ConsistentMimeHandlingInternetExplorerProcesses;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableActiveXVersionListAutoDownload;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableBypassOfSmartScreenWarnings;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableBypassOfSmartScreenWarningsAboutUncommonFiles;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableCompatView;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableConfiguringHistory;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableCrashDetection;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableCustomerExperienceImprovementProgramParticipation;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableDeletingUserVisitedWebsites;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableEnclosureDownloading;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableEncryptionSupport;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableFeedsBackgroundSync;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableFirstRunWizard;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableFlipAheadFeature;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableGeolocation;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableHomePageChange;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableIgnoringCertificateErrors;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableInPrivateBrowsing;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableInternetExplorerApp;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableProcessesInEnhancedProtectedMode;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableProxyChange;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableSearchProviderChange;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableSecondaryHomePageChange;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableSecuritySettingsCheck;
	[read: ToSubClass, write(FALSE): ToSubClass] string DisableWebAddressAutoComplete;
	[read: ToSubClass, write(FALSE): ToSubClass] string DoNotAllowActiveXControlsInProtectedMode;
	[read: ToSubClass, write(FALSE): ToSubClass] string DoNotBlockOutdatedActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string DoNotBlockOutdatedActiveXControlsOnSpecificDomains;
	[read: ToSubClass, write(FALSE): ToSubClass] string EnableExtendedIEModeHotkeys;
	[read: ToSubClass, write(FALSE): ToSubClass] string IncludeAllLocalSites;
	[read: ToSubClass, write(FALSE): ToSubClass] string IncludeAllNetworkPaths;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowAccessToDataSources;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowCopyPasteViaScript;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowDragAndDropCopyAndPasteFiles;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowFontDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowLoadingOfXAMLFiles;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowOnlyApprovedDomainsToUseActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowOnlyApprovedDomainsToUseTDCActiveXControl;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowScriptingOfInternetExplorerWebBrowserControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowScriptInitiatedWindows;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowScriptlets;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowSmartScreenIE;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowUpdatesToStatusBarViaScript;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowUserDataPersistence;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneAllowVBScriptToRunInInternetExplorer;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneDoNotRunAntimalwareAgainstActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneDownloadSignedActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneDownloadUnsignedActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneEnableCrossSiteScriptingFilter;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneEnableDraggingOfContentFromDifferentDomainsAcrossWindows;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneEnableDraggingOfContentFromDifferentDomainsWithinWindows;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneEnableMIMESniffing;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneEnableProtectedMode;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneIncludeLocalPathWhenUploadingFilesToServer;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneJavaPermissions;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneLaunchingApplicationsAndFilesInIFRAME;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneLogonOptions;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneRunNETFrameworkReliantComponentsSignedWithAuthenticode;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneShowSecurityWarningForPotentiallyUnsafeFiles;
	[read: ToSubClass, write(FALSE): ToSubClass] string InternetZoneUsePopupBlocker;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntranetZoneAllowAccessToDataSources;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntranetZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntranetZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntranetZoneAllowFontDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntranetZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntranetZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntranetZoneAllowScriptlets;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntranetZoneAllowSmartScreenIE;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntranetZoneAllowUserDataPersistence;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntranetZoneDoNotRunAntimalwareAgainstActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntranetZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntranetZoneJavaPermissions;
	[read: ToSubClass, write(FALSE): ToSubClass] string IntranetZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write(FALSE): ToSubClass] string JScriptReplacement;
	[read: ToSubClass, write(FALSE): ToSubClass] string KeepIntranetSitesInInternetExplorer;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalMachineZoneAllowAccessToDataSources;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalMachineZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalMachineZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalMachineZoneAllowFontDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalMachineZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalMachineZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalMachineZoneAllowScriptlets;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalMachineZoneAllowSmartScreenIE;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalMachineZoneAllowUserDataPersistence;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalMachineZoneDoNotRunAntimalwareAgainstActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalMachineZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalMachineZoneJavaPermissions;
	[read: ToSubClass, write(FALSE): ToSubClass] string LocalMachineZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownInternetZoneAllowAccessToDataSources;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownInternetZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownInternetZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownInternetZoneAllowFontDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownInternetZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownInternetZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownInternetZoneAllowScriptlets;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownInternetZoneAllowSmartScreenIE;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownInternetZoneAllowUserDataPersistence;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownInternetZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownInternetZoneJavaPermissions;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownInternetZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownIntranetJavaPermissions;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownIntranetZoneAllowAccessToDataSources;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownIntranetZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownIntranetZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownIntranetZoneAllowFontDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownIntranetZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownIntranetZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownIntranetZoneAllowScriptlets;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownIntranetZoneAllowSmartScreenIE;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownIntranetZoneAllowUserDataPersistence;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownIntranetZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownIntranetZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownLocalMachineZoneAllowAccessToDataSources;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownLocalMachineZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownLocalMachineZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownLocalMachineZoneAllowFontDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownLocalMachineZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownLocalMachineZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownLocalMachineZoneAllowScriptlets;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownLocalMachineZoneAllowSmartScreenIE;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownLocalMachineZoneAllowUserDataPersistence;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownLocalMachineZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownLocalMachineZoneJavaPermissions;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownLocalMachineZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownRestrictedSitesZoneAllowAccessToDataSources;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownRestrictedSitesZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownRestrictedSitesZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownRestrictedSitesZoneAllowFontDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownRestrictedSitesZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownRestrictedSitesZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownRestrictedSitesZoneAllowScriptlets;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownRestrictedSitesZoneAllowSmartScreenIE;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownRestrictedSitesZoneAllowUserDataPersistence;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownRestrictedSitesZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownRestrictedSitesZoneJavaPermissions;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownRestrictedSitesZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownTrustedSitesZoneAllowAccessToDataSources;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownTrustedSitesZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownTrustedSitesZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownTrustedSitesZoneAllowFontDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownTrustedSitesZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownTrustedSitesZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownTrustedSitesZoneAllowScriptlets;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownTrustedSitesZoneAllowSmartScreenIE;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownTrustedSitesZoneAllowUserDataPersistence;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownTrustedSitesZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownTrustedSitesZoneJavaPermissions;
	[read: ToSubClass, write(FALSE): ToSubClass] string LockedDownTrustedSitesZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write(FALSE): ToSubClass] string MimeSniffingSafetyFeatureInternetExplorerProcesses;
	[read: ToSubClass, write(FALSE): ToSubClass] string MKProtocolSecurityRestrictionInternetExplorerProcesses;
	[read: ToSubClass, write(FALSE): ToSubClass] string NewTabDefaultPage;
	[read: ToSubClass, write(FALSE): ToSubClass] string NotificationBarInternetExplorerProcesses;
	[read: ToSubClass, write(FALSE): ToSubClass] string PreventManagingSmartScreenFilter;
	[read: ToSubClass, write(FALSE): ToSubClass] string PreventPerUserInstallationOfActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string ProtectionFromZoneElevationInternetExplorerProcesses;
	[read: ToSubClass, write(FALSE): ToSubClass] string RemoveRunThisTimeButtonForOutdatedActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictActiveXInstallInternetExplorerProcesses;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowAccessToDataSources;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowActiveScripting;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowBinaryAndScriptBehaviors;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowCopyPasteViaScript;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowDragAndDropCopyAndPasteFiles;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowFileDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowFontDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowLoadingOfXAMLFiles;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowMETAREFRESH;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowOnlyApprovedDomainsToUseActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowOnlyApprovedDomainsToUseTDCActiveXControl;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowScriptingOfInternetExplorerWebBrowserControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowScriptInitiatedWindows;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowScriptlets;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowSmartScreenIE;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowUpdatesToStatusBarViaScript;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowUserDataPersistence;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneAllowVBScriptToRunInInternetExplorer;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneDoNotRunAntimalwareAgainstActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneDownloadSignedActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneDownloadUnsignedActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneEnableCrossSiteScriptingFilter;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneEnableDraggingOfContentFromDifferentDomainsAcrossWindows;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneEnableDraggingOfContentFromDifferentDomainsWithinWindows;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneEnableMIMESniffing;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneIncludeLocalPathWhenUploadingFilesToServer;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneJavaPermissions;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneLaunchingApplicationsAndFilesInIFRAME;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneLogonOptions;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneNavigateWindowsAndFrames;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneRunActiveXControlsAndPlugins;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneRunNETFrameworkReliantComponentsSignedWithAuthenticode;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneScriptActiveXControlsMarkedSafeForScripting;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneScriptingOfJavaApplets;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneShowSecurityWarningForPotentiallyUnsafeFiles;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneTurnOnProtectedMode;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictedSitesZoneUsePopupBlocker;
	[read: ToSubClass, write(FALSE): ToSubClass] string RestrictFileDownloadInternetExplorerProcesses;
	[read: ToSubClass, write(FALSE): ToSubClass] string ScriptedWindowSecurityRestrictionsInternetExplorerProcesses;
	[read: ToSubClass, write(FALSE): ToSubClass] string SearchProviderList;
	[read: ToSubClass, write(FALSE): ToSubClass] string SendSitesNotInEnterpriseSiteListToEdge;
	[read: ToSubClass, write(FALSE): ToSubClass] string SpecifyUseOfActiveXInstallerService;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedSitesZoneAllowAccessToDataSources;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedSitesZoneAllowAutomaticPromptingForActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedSitesZoneAllowAutomaticPromptingForFileDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedSitesZoneAllowFontDownloads;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedSitesZoneAllowLessPrivilegedSites;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedSitesZoneAllowNETFrameworkReliantComponents;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedSitesZoneAllowScriptlets;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedSitesZoneAllowSmartScreenIE;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedSitesZoneAllowUserDataPersistence;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedSitesZoneDoNotRunAntimalwareAgainstActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedSitesZoneInitializeAndScriptActiveXControls;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedSitesZoneJavaPermissions;
	[read: ToSubClass, write(FALSE): ToSubClass] string TrustedSitesZoneNavigateWindowsAndFrames;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Result01_Multitasking02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 BrowserAltTabBlowout;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Result01_Notifications02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisallowNotificationMirroring;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisallowTileNotification;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Result01_Printers02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string ApprovedUsbPrintDevicesUser;
	[read: ToSubClass, write(FALSE): ToSubClass] string EnableDeviceControlUser;
	[read: ToSubClass, write(FALSE): ToSubClass] string PointAndPrintRestrictions_User;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Result01_Privacy02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisablePrivacyExperience;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Result01_RemoteDesktop02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string AutoSubscription;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Result01_Security02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 RecoveryEnvironmentAuthentication;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Result01_Settings02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ConfigureTaskbarCalendar;
	[read: ToSubClass, write(FALSE): ToSubClass] string PageVisibilityList;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Result01_Start02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 DisableContextMenus;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ForceStartSize;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HideAppList;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HideFrequentlyUsedApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HidePeopleBar;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HideRecentJumplists;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 HideRecentlyAddedApps;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 ShowOrHideMostUsedApps;
	[read: ToSubClass, write(FALSE): ToSubClass] string StartLayout;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Result01_Storage02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] string WPDDevicesDenyReadAccessPerUser;
	[read: ToSubClass, write(FALSE): ToSubClass] string WPDDevicesDenyWriteAccessPerUser;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Result01_System02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 AllowTelemetry;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_Policy_User_Result01_TimeLanguageSettings02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 RestrictLanguagePacksAndFeaturesInstall;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_RemoteWipe
{
	[key] string InstanceID;
	[key] string ParentID;
	[implemented] uint32 doWipeMethod([In] string param);
	[implemented] uint32 doWipePersistProvisionedDataMethod([In] string param);
	[implemented] uint32 doWipeProtectedMethod([In] string param);
	[implemented] uint32 doWipePersistUserDataMethod([In] string param);
	[implemented] uint32 doWipeCloudMethod([In] string param);
	[implemented] uint32 doWipeCloudPersistUserDataMethod([In] string param);
	[implemented] uint32 doWipeCloudPersistProvisionedDataMethod([In] string param);
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_VPNv2_01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string EdpModeId;
	[read: ToSubClass, write: ToSubClass] boolean RememberCredentials;
	[read: ToSubClass, write: ToSubClass] boolean AlwaysOn;
	[read: ToSubClass, write: ToSubClass] boolean LockDown;
	[read: ToSubClass, write: ToSubClass] boolean DeviceTunnel;
	[read: ToSubClass, write: ToSubClass] boolean RegisterDNS;
	[read: ToSubClass, write: ToSubClass] string DnsSuffix;
	[read: ToSubClass, write: ToSubClass] boolean ByPassForLocal;
	[read: ToSubClass, write: ToSubClass] string TrustedNetworkDetection;
	[read: ToSubClass, write: ToSubClass] boolean DisableAdvancedOptionsEditButton;
	[read: ToSubClass, write: ToSubClass] boolean DisableDisconnectButton;
	[read: ToSubClass, write: ToSubClass] string ProfileXML;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_VPNv2_APNBinding02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string ProviderId;
	[read: ToSubClass, write: ToSubClass] string AccessPointName;
	[read: ToSubClass, write: ToSubClass] string UserName;
	[read: ToSubClass, write: ToSubClass] string Password;
	[read: ToSubClass, write: ToSubClass] boolean IsCompressionEnabled;
	[read: ToSubClass, write: ToSubClass] string AuthenticationType;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_VPNv2_AppTriggerList02_App04
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string Id;
	[read: ToSubClass, write(FALSE): ToSubClass] string Type;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_VPNv2_Authentication03
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string UserMethod;
	[read: ToSubClass, write: ToSubClass] string MachineMethod;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_VPNv2_Certificate04
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string Issuer;
	[read: ToSubClass, write: ToSubClass] string Eku;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_VPNv2_CryptographySuite03
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string AuthenticationTransformConstants;
	[read: ToSubClass, write: ToSubClass] string CipherTransformConstants;
	[read: ToSubClass, write: ToSubClass] string EncryptionMethod;
	[read: ToSubClass, write: ToSubClass] string IntegrityCheckMethod;
	[read: ToSubClass, write: ToSubClass] string DHGroup;
	[read: ToSubClass, write: ToSubClass] string PfsGroup;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_VPNv2_DeviceCompliance02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] boolean Enabled;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_VPNv2_DomainNameInformationList02_01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string DomainName;
	[read: ToSubClass, write(FALSE): ToSubClass] string DomainNameType;
	[read: ToSubClass, write: ToSubClass] string DnsServers;
	[read: ToSubClass, write: ToSubClass] string WebProxyServers;
	[read: ToSubClass, write: ToSubClass] boolean AutoTrigger;
	[read: ToSubClass, write: ToSubClass] boolean Persistent;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_VPNv2_Eap04
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string Configuration;
	[read: ToSubClass, write: ToSubClass] sint32 Type;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_VPNv2_Manual03
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string Server;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_VPNv2_NativeProfile02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string Servers;
	[read: ToSubClass, write: ToSubClass] string RoutingPolicyType;
	[read: ToSubClass, write: ToSubClass] string NativeProtocolType;
	[read: ToSubClass, write: ToSubClass] string L2tpPsk;
	[read: ToSubClass, write: ToSubClass] boolean DisableClassBasedDefaultRoute;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_VPNv2_PluginProfile02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string ServerUrlList;
	[read: ToSubClass, write: ToSubClass] string CustomConfiguration;
	[read: ToSubClass, write: ToSubClass] string PluginPackageFamilyName;
	[read: ToSubClass, write: ToSubClass] string CustomStoreUrl;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_VPNv2_Proxy02
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string AutoConfigUrl;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_VPNv2_RouteList02_01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string Address;
	[read: ToSubClass, write: ToSubClass] sint32 PrefixSize;
	[read: ToSubClass, write: ToSubClass] sint32 Metric;
	[read: ToSubClass, write: ToSubClass] boolean ExclusionRoute;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_VPNv2_Sso03
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] boolean Enabled;
	[read: ToSubClass, write: ToSubClass] string IssuerHash;
	[read: ToSubClass, write: ToSubClass] string Eku;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_VPNv2_TrafficFilterList02_01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string Claims;
	[read: ToSubClass, write: ToSubClass] sint32 Protocol;
	[read: ToSubClass, write: ToSubClass] string LocalPortRanges;
	[read: ToSubClass, write: ToSubClass] string RemotePortRanges;
	[read: ToSubClass, write: ToSubClass] string LocalAddressRanges;
	[read: ToSubClass, write: ToSubClass] string RemoteAddressRanges;
	[read: ToSubClass, write: ToSubClass] string RoutingPolicyType;
};
[InPartition{"local-system", "local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_VPNv2_TrafficFilterList02_App04
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string Id;
	[read: ToSubClass, write(FALSE): ToSubClass] string Type;
};
[InPartition{"local-user"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_VPNv2_User_01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write: ToSubClass] string EdpModeId;
	[read: ToSubClass, write: ToSubClass] boolean RememberCredentials;
	[read: ToSubClass, write: ToSubClass] boolean AlwaysOn;
	[read: ToSubClass, write: ToSubClass] string DnsSuffix;
	[read: ToSubClass, write: ToSubClass] boolean ByPassForLocal;
	[read: ToSubClass, write: ToSubClass] string TrustedNetworkDetection;
	[read: ToSubClass, write: ToSubClass] boolean DisableAdvancedOptionsEditButton;
	[read: ToSubClass, write: ToSubClass] boolean DisableDisconnectButton;
	[read: ToSubClass, write: ToSubClass] string ProfileXML;
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_WindowsLicensing
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 Edition;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 Status;
	[read: ToSubClass, write(FALSE): ToSubClass] string LicenseKeyType;
	[implemented] uint32 UpgradeEditionWithProductKeyMethod([In] string param);
	[implemented] uint32 ChangeProductKeyMethod([In] string param);
	[implemented] uint32 UpgradeEditionWithLicenseMethod([In] string param);
	[implemented] uint32 CheckApplicabilityMethod([In] string param);
};
[InPartition{"local-system"}: ToSubClass, dynamic: ToInstance, provider("DMWmiBridgeProv"): ToInstance]
class MDM_WindowsLicensing_Subscriptions01_01
{
	[key] string InstanceID;
	[key] string ParentID;
	[read: ToSubClass, write(FALSE): ToSubClass] sint32 Status;
	[read: ToSubClass, write(FALSE): ToSubClass] string Name;
};
