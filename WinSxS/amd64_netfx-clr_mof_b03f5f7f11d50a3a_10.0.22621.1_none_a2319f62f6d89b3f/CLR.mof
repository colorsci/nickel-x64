//**************************************************
// *** CLR Trace Data Layout
//**************************************************
#pragma autorecover
#pragma classflags("forceupdate")
#pragma namespace ("\\\\.\\Root\\WMI")

[Dynamic,
  Description(".NET Common Language Runtime") : amended,
  Guid("{e13c0d23-ccbc-4e12-931b-d9cc2eee27e4}"),
  locale("MS\\0x409")]
class CLRTrace:EventTrace
{

};

[Dynamic,
 Description("CLR StrongNameVerification") : amended,
 Guid("{15447A14-B523-46ae-B75B-023F900B4393}"),
 DisplayName("CLR StrongNameVerification"),
 locale("MS\\0x409")
]
class CLRStrongNameVerification:CLRTrace
{
};

[Dynamic,
 Description("StrongNameVerification Start/End") : amended,
 EventType{1, 2},
 EVentTypeName{"StrongNameVerificationStart", "StrongNameVerificationEnd"} : amended,
 locale("MS\\0x409")
]
class StrongNameVerification:CLRStrongNameVerification
{
    [WmiDataId(1),
     Description("VerificationFlags") : amended,
     format("x"),
     read]
     uint32 VerificationFlags;
    [WmiDataId(2),
     Description("ErrorCode") : amended,
     format("x"),
     read]
     uint32 ErrorCode;
    [WmiDataId(3),
     Description("FullyQualifiedAssemblyName") : amended,
     Format("w"),
     StringTermination("NullTerminated"),
     read]
     string FullyQualifiedAssemblyName;
};

[Dynamic,
 Description("CLR AuthenticodeVerification") : amended,
 Guid("{B17304D9-5AFA-4da6-9F7B-5A4FA73129B6}"),
 DisplayName("CLR AuthenticodeVerification"),
 locale("MS\\0x409")
]
class CLRAuthenticodeVerification:CLRTrace
{
};

[Dynamic,
 Description("AuthenticodeVerification Start/End") : amended,
 EventType{1, 2},
 EVentTypeName{"AuthenticodeVerificationStart", "AuthenticodeVerificationEnd"} : amended,
 locale("MS\\0x409")
]
class AuthenticodeVerification:CLRAuthenticodeVerification
{
    [WmiDataId(1),
     Description("VerificationFlags") : amended,
     format("x"),
     read]
     uint32 VerificationFlags;
    [WmiDataId(2),
     Description("ErrorCode") : amended,
     format("x"),
     read]
     uint32 ErrorCode;
    [WmiDataId(3),
     Description("ModulePath") : amended,
     Format("w"),
     StringTermination("NullTerminated"),
     read]
     string ModulePath;
};


[Dynamic,
 Description("CLR Loader") : amended,
 Guid("{D00792DA-07B7-40f5-97EB-5D974E054740}"),
 DisplayName("CLR Loader"),
 locale("MS\\0x409")
]
class CLRLoader:CLRTrace
{

};


[Dynamic,
 Description("Module Load/UnLoad") : amended,
 EventType{33, 34, 35, 36},
 EVentTypeName{"ModuleLoad", "ModuleUnload", "ModuleDCStart","ModuleDCEnd"} : amended,
 locale("MS\\0x409")
]
class ModuleLoadUnLoad:CLRLoader
{
    [WmiDataId(1),
     Description("ModuleId") : amended,
     format("x"),
     read]
     uint64 ModuleId;
    [WmiDataId(2),
     Description("AssemblyId") : amended,
     format("x"),
     read]
     uint64 AssemblyId;
    [WmiDataId(3),
     Description("ModuleFlags") : amended,
     format("x"),
     read]
     uint64 ModuleFlags;
    [WmiDataId(4),
     Description("ModuleILPath") : amended,
     Format("w"),
     StringTermination("NullTerminated"),
     read]
     string ModuleILPath;
    [WmiDataId(5),
     Description("ModuleNativePath") : amended,
     Format("w"),
     StringTermination("NullTerminated"),
     read]
     string ModuleNativePath;
};

[Dynamic,
 Description("CLR Method") : amended,
 Guid("{3044F61A-99B0-4c21-B203-D39423C73B00}"),
 DisplayName("CLR Method"),
 locale("MS\\0x409")
]
class CLRMethod:CLRTrace
{

};

[Dynamic,
 Description("Method Load/UnLoad Info") : amended,
 EventType{33, 34, 35, 36},
 EventTypeName{"MethodLoad", "MethodUnload", "MethodDCStart", "MethodDCEnd"} : amended,
 locale("MS\\0x409")
]
class MethodLoadUnLoad:CLRMethod
{
    [WmiDataId(1),
     Description("MethodIdentifier") : amended,
     read]
     uint64 MethodIdentifier;
    [WmiDataId(2),
     Description("ModuleID") : amended,
     read]
     uint64 ModuleID;
    [WmiDataId(3),
     Description("MethodStartAddress") : amended,
     read]
     uint64 MethodStartAddress;
    [WmiDataId(4),
     Description("MethodSize") : amended,
     read]
     uint32 MethodSize;
    [WmiDataId(5),
     Description("MethodToken") : amended,
     read]
     uint32 MethodToken;
    [WmiDataId(6),
     Description("MethodFlags") : amended,
     read]
     uint32 MethodFlags;
};



[Dynamic,
 Description("Method Load/UnLoad Verbose Info") : amended,
 EventType{37, 38, 39, 40},
 EventTypeName{"MethodLoadVerbose", "MethodUnloadVerbose", "MethodDCStartVerbose", "MethodDCEndVerbose"} : amended,
 locale("MS\\0x409")
]
class MethodLoadUnLoadVerbose:CLRMethod
{
    [WmiDataId(1),
     Description("MethodIdentifier") : amended,
     read]
     uint64 MethodIdentifier;
    [WmiDataId(2),
     Description("ModuleID") : amended,
     read]
     uint64 ModuleID;
    [WmiDataId(3),
     Description("MethodStartAddress") : amended,
     read]
     uint64 MethodStartAddress;
    [WmiDataId(4),
     Description("MethodSize") : amended,
     read]
     uint32 MethodSize;
    [WmiDataId(5),
     Description("MethodToken") : amended,
     read]
     uint32 MethodToken;
    [WmiDataId(6),
     Description("MethodFlags") : amended,
     read]
     uint32 MethodFlags;
    [WmiDataId(7),
     Description("MethodNameSpace") : amended,
     Format("w"),
     StringTermination("NullTerminated"),
     read]
     string MethodNameSpace;
    [WmiDataId(8),
     Description("MethodName") : amended,
     Format("w"),
     StringTermination("NullTerminated"),
     read]
     string Methodname;
    [WmiDataId(9),
     Description("MethodSig") : amended,
     Format("w"),
     StringTermination("NullTerminated"),
     read]
     string MethodSig;
};

[Dynamic,
 Description("Rundown Complete Info") : amended,
 EventType{14, 15},
 EventTypeName{"DCStartComplete", "DCEndComplete"} : amended,
 locale("MS\\0x409")
]
class RundownComplete:CLRMethod
{
};



[Dynamic,
 Description("Garbage Collection") : amended,
 Guid("{044973cd-251f-4dff-a3e9-9d6307286b05}"),
 DisplayName("CLR GC"),
 locale("MS\\0x409")
]
class GarbageCollection:CLRTrace
{

};

[Dynamic,
 Description("Start GC Collection") : amended,
 EventType(1),
 EventTypeName("GCStart") : amended,
 locale("MS\\0x409")
]
class GCStart:GarbageCollection
{
    [WmiDataId(1),
     Description("Count") : amended,
     read]
     uint32 Count;
    [WmiDataId(2),
     Description("Depth") : amended,
     read]
     uint32 Depth;
    [WmiDataId(2),
     Description("Reason") : amended,
     read]
     uint32 Reason;
    [WmiDataId(2),
     Description("Type") : amended,
     read]
     uint32 Type;
};

[Dynamic,
 Description("End GC Collection") : amended,
 EventType(2),
 EventTypeName("GCEnd") : amended,
 locale("MS\\0x409")
]
class GCEnd:GarbageCollection
{
    [WmiDataId(1),
     Description("Count") : amended,
     read]
     uint32 Count;
    [WmiDataId(2),
     Description("Depth") : amended,
     read]
     uint32 Depth;
};

[Dynamic,
 Description("GC Heap Statistics") : amended,
 EventType(5),
 EventTypeName("GCHeapStats") : amended,
 locale("MS\\0x409")
]
class HeapStats:GarbageCollection
{
    [WmiDataId(1),
     Description("GenerationSize0") : amended,
     read]
     uint64 GenerationSize0;
    [WmiDataId(2),
     Description("TotalPromotedSize0") : amended,
     read]
     uint64 TotalPromotedSize0;
    [WmiDataId(3),
     Description("GenerationSize1") : amended,
     read]
     uint64 GenerationSize1;
    [WmiDataId(4),
     Description("TotalPromotedSize1") : amended,
     read]
     uint64 TotalPromotedSize1;
    [WmiDataId(5),
     Description("GenerationSize2") : amended,
     read]
     uint64 GenerationSize2;
    [WmiDataId(6),
     Description("TotalPromotedSize2") : amended,
     read]
     uint64 TotalPromotedSize2;
    [WmiDataId(7),
     Description("GenerationSize3") : amended,
     read]
     uint64 GenerationSize3;
    [WmiDataId(8),
     Description("TotalPromotedSize3") : amended,
     read]
     uint64 TotalPromotedSize3;
    [WmiDataId(9),
     Description("FinalizationPromotedSize") : amended,
     read]
     uint64 FinalizationPromotedSize;
    [WmiDataId(10),
     Description("FinalizationPromotedCount") : amended,
     read]
     uint64 FinalizationPromotedCount;
    [WmiDataId(11),
     Description("PinnedObjectCount") : amended,
     read]
     uint32 PinnedObjectCount;
    [WmiDataId(12),
     Description("SinkBlockCount") : amended,
     read]
     uint32 SinkBlockCount;
    [WmiDataId(13),
     Description("GCHandleCount") : amended,
     read]
     uint32 GCHandleCount;
};


[Dynamic,
 Description("Segment allocation") : amended,
 EventType(6),
 EventTypeName("CreateSegment") : amended,
 locale("MS\\0x409")
]
class AllocateSegment:GarbageCollection
{
    [WmiDataId(1),
     Description("SegAddress") : amended,
     format("x"),
     read]
     uint64 Address;
    [WmiDataId(2),
     Description("SegSize") : amended,
     format("x"),
     read]
     uint64 Size;
    [WmiDataId(3),
     Description("SegType") : amended,
     format("x"),
     read]
     uint32 Type;
};

[Dynamic,
 Description("Segment free") : amended,
 EventType(7),
 EventTypeName("FreeSegment") : amended,
 locale("MS\\0x409")
]
class FreeSegment:GarbageCollection
{
    [WmiDataId(1),
     Description("SegAddress") : amended,
     format("x"),
     read]
     uint64 Address;
};

[Dynamic,
 Description("GCRestartEEBegin") : amended,
 EventType(8),
 EventTypeName("RestartEE Begin") : amended,
 locale("MS\\0x409")
]
class RestartEEBegin:GarbageCollection
{
};

[Dynamic,
 Description("GCRestartEEEnd") : amended,
 EventType(4),
 EventTypeName("GCRestartEE End") : amended
]
class GCRestartEEEnd:GarbageCollection
{

};

[Dynamic,
 Description("GCSuspendEEEnd") : amended,
 EventType(9),
 EventTypeName("GCSuspendEE End") : amended
]
class GCSuspendEEEnd:GarbageCollection
{

};

[Dynamic,
 Description("Suspend EE") : amended,
 EventType(10),
 EventTypeName("SuspendEE Begin") : amended,
 locale("MS\\0x409")
]
class SuspendEEBegin:GarbageCollection
{
    [WmiDataId(1),
     Description("Suspension Reason") : amended,
     read]
     uint32 Reason;
    [WmiDataId(2),
     Description("GC Count") : amended,
     read]
     uint32 GcCount;
};

[Dynamic,
 Description("Allocation Tick") : amended,
 EventType(11),
 EventTypeName("AllocationTick") : amended,
 locale("MS\\0x409")
]
class AllocationTick:GarbageCollection
{
    [WmiDataId(1),
     Description("Allocation Amount") : amended,
     read]
     uint32 Allocation;
    [WmiDataId(2),
     Description("Allocation Kind") : amended,
     read]
     uint32 AllocationKind;
};

[Dynamic,
 Description("GCFinalizersBegin") : amended,
 EventType(19),
 EventTypeName("GCFinalizers Begin") : amended
]
class GCFinalizersBegin:GarbageCollection
{

};

[Dynamic,
 Description("GCFinalizersEnd") : amended,
 EventType(15),
 EventTypeName("GCFinalizers End") : amended
]
class GCFinalizersEnd:GarbageCollection
{
    [WmiDataId(1),
     Description("Count") : amended,
     read]
     uint32 Count;
};

[Dynamic,
 Description("CLR Worker Thread Creation") : amended,
 Guid("{cfc4ba53-fb42-4757-8b70-5f5d51fee2f4}"),
 DisplayName("CLR Worker Thread Creation"),
 locale("MS\\0x409")
]
class WorkerThreadCreation:CLRTrace
{

};

[Dynamic,
 Description("Create worker thread") : amended,
 EventType(1),
 EventTypeName("CreateWorkerThread") : amended,
 locale("MS\\0x409")
]
class CreateWorkerThread:WorkerThreadCreation
{
    [WmiDataId(1),
     Description("WorkerThreadCount") : amended,
     read]
     uint32 WorkerThreadCount;
    [WmiDataId(2),
     Description("RetiredWorkerThreads") : amended,
     read]
     uint32 RetiredWorkers;
};

[Dynamic,
 Description("Terminate worker thread") : amended,
 EventType(2),
 EventTypeName("TerminateWorkerThread") : amended,
 locale("MS\\0x409")
]
class TerminateWorkerThread:WorkerThreadCreation
{
    [WmiDataId(1),
     Description("WorkerThreadCount") : amended,
     read]
     uint32 WorkerThreadCount;
    [WmiDataId(2),
     Description("RetiredWorkerThreads") : amended,
     read]
     uint32 RetiredWorkers;
};



[Dynamic,
 Description("CLR IO Thread Creation") : amended,
 Guid("{c71408de-42cc-4f81-9c93-b8912abf2a0f}"),
 DisplayName("CLR IO Thread Creation"),
 locale("MS\\0x409")
]
class IOThreadCreation:CLRTrace
{

};

[Dynamic,
 Description("Create IO thread") : amended,
 EventType(1),
 EventTypeName("CreateIOThread") : amended,
 locale("MS\\0x409")
]
class CreateIOThread:IOThreadCreation
{
    [WmiDataId(1),
     Description("IOThreadCount") : amended,
     read]
     uint32 IOThreadCount;
    [WmiDataId(2),
     Description("RetiredIOThreads") : amended,
     read]
     uint32 RetiredIOs;
};

[Dynamic,
 Description("Terminate IO thread") : amended,
 EventType(2),
 EventTypeName("TerminateIOThread") : amended,
 locale("MS\\0x409")
]
class TerminateIOThread:IOThreadCreation
{
    [WmiDataId(1),
     Description("IOThreadCount") : amended,
     read]
     uint32 IOThreadCount;
    [WmiDataId(2),
     Description("RetiredIOThreads") : amended,
     read]
     uint32 RetiredIOs;
};



[Dynamic,
 Description("CLR Worker Thread Retirement") : amended,
 Guid("{efdf1eac-1d5d-4e84-893a-19b80f692176}"),
 DisplayName("CLR Worker Thread Retirement"),
 locale("MS\\0x409")
]
class WorkerThreadRetirement:CLRTrace
{

};

[Dynamic,
 Description("Retire worker thread") : amended,
 EventType(1),
 EventTypeName("RetireWorkerThread") : amended,
 locale("MS\\0x409")
]
class RetireWorkerThread:WorkerThreadRetirement
{
    [WmiDataId(1),
     Description("WorkerThreadCount") : amended,
     read]
     uint32 WorkerThreadCount;
    [WmiDataId(2),
     Description("RetiredWorkerThreads") : amended,
     read]
     uint32 RetiredWorkers;
};

[Dynamic,
 Description("Unretire worker thread") : amended,
 EventType(2),
 EventTypeName("UnretireWorkerThread") : amended,
 locale("MS\\0x409")
]
class UnretireWorkerThread:WorkerThreadRetirement
{
    [WmiDataId(1),
     Description("WorkerThreadCount") : amended,
     read]
     uint32 WorkerThreadCount;
    [WmiDataId(2),
     Description("RetiredWorkerThreads") : amended,
     read]
     uint32 RetiredWorkers;
};


[Dynamic,
 Description("CLR IO Thread Retirement") : amended,
 Guid("{840c8456-6457-4eb7-9cd0-d28f01c64f5e}"),
 DisplayName("CLR IO Thread Retirement"),
 locale("MS\\0x409")
]
class IOThreadRetirement:CLRTrace
{

};

[Dynamic,
 Description("Retire IO thread") : amended,
 EventType(1),
 EventTypeName("RetireIOThread") : amended,
 locale("MS\\0x409")
]
class RetireIOThread:IOThreadRetirement
{
    [WmiDataId(1),
     Description("IOThreadCount") : amended,
     read]
     uint32 IOThreadCount;
    [WmiDataId(2),
     Description("RetiredIOThreads") : amended,
     read]
     uint32 RetiredIOs;
};

[Dynamic,
 Description("Unretire IO thread") : amended,
 EventType(2),
 EventTypeName("UnretireIOThread") : amended,
 locale("MS\\0x409")
]
class UnretireIOThread:IOThreadRetirement
{
    [WmiDataId(1),
     Description("IOThreadCount") : amended,
     read]
     uint32 IOThreadCount;
    [WmiDataId(2),
     Description("RetiredIOThreads") : amended,
     read]
     uint32 RetiredIOs;
};


[Dynamic,
 Description("CLR Threadpool suspension") : amended,
 Guid("{c424b3e3-2ae0-416e-a039-410c5d8e5f14}"),
 DisplayName("CLR Threadpool suspension"),
 locale("MS\\0x409")
]
class ThreadpoolSuspend:CLRTrace
{

};

[Dynamic,
 Description("Suspend thread processing") : amended,
 EventType(1),
 EventTypeName("SuspendThread") : amended,
 locale("MS\\0x409")
]
class SuspendThread:ThreadpoolSuspend
{
    [WmiDataId(1),
     Description("ThreadID") : amended,
     read]
     uint32 TID;
    [WmiDataId(2),
     Description("CPU Utilization") : amended,
     read]
     uint32 CPUUtil;
};

[Dynamic,
 Description("Resume thread processing") : amended,
 EventType(2),
 EventTypeName("ResumeThread") : amended,
 locale("MS\\0x409")
]
class ResumeThread:ThreadpoolSuspend
{
    [WmiDataId(1),
     Description("ThreadID") : amended,
     read]
     uint32 TID;
    [WmiDataId(2),
     Description("CPU Utilization") : amended,
     read]
     uint32 CPUUtil;
};


[Dynamic,
 Description("CLR Exception") : amended,
 Guid("{300ce105-86d1-41f8-b9d2-83fcbff32d99}"),
 DisplayName("CLR Exception"),
 locale("MS\\0x409")
]
class Exceptions:CLRTrace
{

};


[Dynamic,
 Description("Exception") : amended,
 EventType(1),
 EventTypeName("Exception") : amended,
 locale("MS\\0x409")
]
class ExceptionThrown:Exceptions
{
};



[Dynamic,
 Description("CLR Monitor") : amended,
 Guid("{561410f5-a138-4ab3-945e-516483cddfbc}"),
 DisplayName("CLR Monitor"),
 locale("MS\\0x409")
]
class Monitor:CLRTrace
{

};

[Dynamic,
 Description("Contention") : amended,
 EventType(1),
 EventTypeName("Contention") : amended,
 locale("MS\\0x409")
]
class Contention:Monitor
{
};

[Dynamic,
 Description("Fusion NGEN Binder") : amended,
 Guid("{861f5339-19d6-4873-b350-7b03228bda7c}"),
 DisplayName("Fusion NGEN Binder"),
 locale("MS\\0x409")
]
class FusionNGENBinder:CLRTrace
{

};

[Dynamic,
 Description("NGEN Reject Info") : amended,
 EventType{1},
 EVentTypeName{"NgenBindRejectInfo"} : amended,
 locale("MS\\0x409")
]
class NgenBindRejectInfo:FusionNGENBinder
{
    [WmiDataId(1),
     Description("RejectReason") : amended,
     Values{
	"NGEN_BIND_NO_INDEX",
	"NGEN_BIND_SYSTEM_ASSEMBLY_NOT_AVAILABLE",
	"NGEN_BIND_NO_MATCH",
	"NGEN_BIND_REJECT_CONFIG_MASK",
	"NGEN_BIND_FAIL",
	"NGEN_BIND_INDEX_CORRUPTION",
	"NGEN_BIND_REJECT_TIMESTAMP",
	"NGEN_BIND_REJECT_NATIVEIMAGE_NOT_FOUND",
	"NGEN_BIND_REJECT_IL_SIG",
	"NGEN_BIND_REJECT_LOADER_EVAL_FAIL",
	"NGEN_BIND_MISSING_FOUND",
	"NGEN_BIND_REJECT_HOSTASM",
	"NGEN_BIND_REJECT_IL_NOT_FOUND",
	"NGEN_BIND_REJECT_APPBASE_NOT_FILE",
	"NGEN_BIND_BIND_DEPEND_REJECT_REF_DEF_MISMATCH",
	"NGEN_BIND_BIND_DEPEND_REJECT_NGEN_SIG",
	"NGEN_BIND_APPLY_EXTERNAL_RELOCS_FAILED",
	"NGEN_BIND_SYSTEM_ASSEMBLY_NATIVEIMAGE_NOT_AVAILABLE",
	"NGEN_BIND_ASSEMBLY_HAS_DIFFERENT_GRANT",
	"NGEN_BIND_ASSEMBLY_NOT_DOMAIN_NEUTRAL",
	"NGEN_BIND_NATIVEIMAGE_VERSION_MISMATCH"	} : amended,
     ValueMap {
 	"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21"}
     ]
     uint32 RejectReason;
};

[Dynamic,
 Description("Module NGEN Reject Info") : amended,
 EventType{2},
 EVentTypeName{"ModuleNgenBindRejectInfo"} : amended,
 locale("MS\\0x409")
]
class ModuleNgenBindRejectInfo:FusionNGENBinder
{
    [WmiDataId(1),
     Description("RejectReason") : amended,
     Values{
	"NGEN_BIND_NO_INDEX",
	"NGEN_BIND_SYSTEM_ASSEMBLY_NOT_AVAILABLE",
	"NGEN_BIND_NO_MATCH",
	"NGEN_BIND_REJECT_CONFIG_MASK",
	"NGEN_BIND_FAIL",
	"NGEN_BIND_INDEX_CORRUPTION",
	"NGEN_BIND_REJECT_TIMESTAMP",
	"NGEN_BIND_REJECT_NATIVEIMAGE_NOT_FOUND",
	"NGEN_BIND_REJECT_IL_SIG",
	"NGEN_BIND_REJECT_LOADER_EVAL_FAIL",
	"NGEN_BIND_MISSING_FOUND",
	"NGEN_BIND_REJECT_HOSTASM",
	"NGEN_BIND_REJECT_IL_NOT_FOUND",
	"NGEN_BIND_REJECT_APPBASE_NOT_FILE",
	"NGEN_BIND_BIND_DEPEND_REJECT_REF_DEF_MISMATCH",
	"NGEN_BIND_BIND_DEPEND_REJECT_NGEN_SIG",
	"NGEN_BIND_APPLY_EXTERNAL_RELOCS_FAILED",
	"NGEN_BIND_SYSTEM_ASSEMBLY_NATIVEIMAGE_NOT_AVAILABLE",
	"NGEN_BIND_ASSEMBLY_HAS_DIFFERENT_GRANT",
	"NGEN_BIND_ASSEMBLY_NOT_DOMAIN_NEUTRAL",
	"NGEN_BIND_NATIVEIMAGE_VERSION_MISMATCH"	} : amended,
     ValueMap {
 	"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21"}
     ]
     uint32 RejectReason;
    [WmiDataId(2),
     Description("ModuleNameOrFilePath") : amended,
     Format("w"),
     StringTermination("NullTerminated"),
     read]
     string ModuleNameOrFilePath;
};

[Dynamic,
 Description("Ref/Def NGEN Reject Info") : amended,
 EventType{3},
 EVentTypeName{"RefDefNgenBindRejectInfo"} : amended,
 locale("MS\\0x409")
]
class RefDefNgenBindRejectInfo:FusionNGENBinder
{
    [WmiDataId(1),
     Description("RejectReason") : amended,
     Values{
	"NGEN_BIND_NO_INDEX",
	"NGEN_BIND_SYSTEM_ASSEMBLY_NOT_AVAILABLE",
	"NGEN_BIND_NO_MATCH",
	"NGEN_BIND_REJECT_CONFIG_MASK",
	"NGEN_BIND_FAIL",
	"NGEN_BIND_INDEX_CORRUPTION",
	"NGEN_BIND_REJECT_TIMESTAMP",
	"NGEN_BIND_REJECT_NATIVEIMAGE_NOT_FOUND",
	"NGEN_BIND_REJECT_IL_SIG",
	"NGEN_BIND_REJECT_LOADER_EVAL_FAIL",
	"NGEN_BIND_MISSING_FOUND",
	"NGEN_BIND_REJECT_HOSTASM",
	"NGEN_BIND_REJECT_IL_NOT_FOUND",
	"NGEN_BIND_REJECT_APPBASE_NOT_FILE",
	"NGEN_BIND_BIND_DEPEND_REJECT_REF_DEF_MISMATCH",
	"NGEN_BIND_BIND_DEPEND_REJECT_NGEN_SIG",
	"NGEN_BIND_APPLY_EXTERNAL_RELOCS_FAILED",
	"NGEN_BIND_SYSTEM_ASSEMBLY_NATIVEIMAGE_NOT_AVAILABLE",
	"NGEN_BIND_ASSEMBLY_HAS_DIFFERENT_GRANT",
	"NGEN_BIND_ASSEMBLY_NOT_DOMAIN_NEUTRAL",
	"NGEN_BIND_NATIVEIMAGE_VERSION_MISMATCH"	} : amended,
     ValueMap {
 	"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21"}
     ]
     uint32 RejectReason;
    [WmiDataId(2),
     Description("RefModuleName") : amended,
     Format("w"),
     StringTermination("NullTerminated"),
     read]
     string RefModuleName;
    [WmiDataId(3),
     Description("DefModuleName") : amended,
     Format("w"),
     StringTermination("NullTerminated"),
     read]
     string DefModuleName;
};
