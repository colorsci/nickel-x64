#pragma classflags("forceupdate")
#pragma namespace("\\\\.\\root\\WMI")
//
// WPP Generated File
// PDB:  c:\lh.obj.x86chk\drivers\storage\iscsi\client\objchk\i386\msiscsi.pdb
// PDB:  Last Updated :2006-2-24:20:26:45:766 (UTC) [binplace]
//

//ModuleName = iScsi     (Init called in Function iScsiInitializeTracing)
[Dynamic,
 Description("msiscsi_iScsi"),
 guid("{1babefb4-59cb-49e5-9698-fd38ac830a91}"),
 locale("MS\\0x409")]
class iScsi : EventTrace
{
    [Description ("Enable Flags"),
        ValueDescriptions{
             "iScsiFlagGeneral Flag",
             "iScsiFlagAdapter Flag",
             "iScsiFlagUnit Flag",
             "iScsiFlagPnP Flag",
             "iScsiFlagPower Flag",
             "iScsiFlagIoctl Flag",
             "iScsiFlagQueue Flag",
             "iScsiFlagWmi Flag",
             "iScsiFlagTimer Flag",
             "iScsiFlagInit Flag",
             "iScsiFlagLock Flag",
             "iScsiFlagIsr Flag",
             "iScsiFlagEnum Flag",
             "iScsiFlagBoot Flag",
             "iScsiFlagErl Flag",
             "iScsiFlagNetwork Flag",
             "iScsiFlagRadius Flag",
             "iScsiFlagSockets Flag",
             "iScsiFlagScsi Flag",
             "iScsiFlagScsiDataIO Flag",
             "iScsiFlagProtocolLogInOut Flag",
             "iScsiFlagProtocolTMF Flag",
             "iScsiFlagProtocolTransfer Flag",
             "iScsiFlagCHAP Flag",
             "iScsiFlagDigest Flag",
             "iScsiFlagIpSec Flag",
             "iScsiDebug26 Flag",
             "iScsiDebug27 Flag",
             "iScsiDebug28 Flag",
             "iScsiDebug29 Flag",
             "iScsiDebug30 Flag",
             "iScsiDebug31 Flag"},
        DefineValues{
             "iScsiFlagGeneral",
             "iScsiFlagAdapter",
             "iScsiFlagUnit",
             "iScsiFlagPnP",
             "iScsiFlagPower",
             "iScsiFlagIoctl",
             "iScsiFlagQueue",
             "iScsiFlagWmi",
             "iScsiFlagTimer",
             "iScsiFlagInit",
             "iScsiFlagLock",
             "iScsiFlagIsr",
             "iScsiFlagEnum",
             "iScsiFlagBoot",
             "iScsiFlagErl",
             "iScsiFlagNetwork",
             "iScsiFlagRadius",
             "iScsiFlagSockets",
             "iScsiFlagScsi",
             "iScsiFlagScsiDataIO",
             "iScsiFlagProtocolLogInOut",
             "iScsiFlagProtocolTMF",
             "iScsiFlagProtocolTransfer",
             "iScsiFlagCHAP",
             "iScsiFlagDigest",
             "iScsiFlagIpSec",
             "iScsiDebug26",
             "iScsiDebug27",
             "iScsiDebug28",
             "iScsiDebug29",
             "iScsiDebug30",
             "iScsiDebug31"},
        Values{
             "iScsiFlagGeneral",
             "iScsiFlagAdapter",
             "iScsiFlagUnit",
             "iScsiFlagPnP",
             "iScsiFlagPower",
             "iScsiFlagIoctl",
             "iScsiFlagQueue",
             "iScsiFlagWmi",
             "iScsiFlagTimer",
             "iScsiFlagInit",
             "iScsiFlagLock",
             "iScsiFlagIsr",
             "iScsiFlagEnum",
             "iScsiFlagBoot",
             "iScsiFlagErl",
             "iScsiFlagNetwork",
             "iScsiFlagRadius",
             "iScsiFlagSockets",
             "iScsiFlagScsi",
             "iScsiFlagScsiDataIO",
             "iScsiFlagProtocolLogInOut",
             "iScsiFlagProtocolTMF",
             "iScsiFlagProtocolTransfer",
             "iScsiFlagCHAP",
             "iScsiFlagDigest",
             "iScsiFlagIpSec",
             "iScsiDebug26",
             "iScsiDebug27",
             "iScsiDebug28",
             "iScsiDebug29",
             "iScsiDebug30",
             "iScsiDebug31"},
        ValueMap{
             "0x00000001",
             "0x00000002",
             "0x00000004",
             "0x00000008",
             "0x00000010",
             "0x00000020",
             "0x00000040",
             "0x00000080",
             "0x00000100",
             "0x00000200",
             "0x00000400",
             "0x00000800",
             "0x00001000",
             "0x00002000",
             "0x00004000",
             "0x00008000",
             "0x00010000",
             "0x00020000",
             "0x00040000",
             "0x00080000",
             "0x00100000",
             "0x00200000",
             "0x00400000",
             "0x00800000",
             "0x01000000",
             "0x02000000",
             "0x04000000",
             "0x08000000",
             "0x10000000",
             "0x20000000",
             "0x40000000",
             "0x80000000"}
    ]
    uint32 Flags;
};
