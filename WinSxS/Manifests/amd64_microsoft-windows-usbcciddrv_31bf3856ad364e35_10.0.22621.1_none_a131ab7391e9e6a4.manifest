<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<assembly xmlns="urn:schemas-microsoft-com:asm.v3" manifestVersion="1.0" copyright="Copyright (c) Microsoft Corporation. All Rights Reserved.">
  <assemblyIdentity name="Microsoft-Windows-UsbccidDrv" version="10.0.22621.1" processorArchitecture="amd64" language="neutral" buildType="release" publicKeyToken="31bf3856ad364e35" versionScope="nonSxS" />
  <instrumentation>
    <events xmlns="http://schemas.microsoft.com/win/2004/08/events" xmlns:win="http://manifests.microsoft.com/win/2004/08/windows/events">
      <provider guid="{f708c483-4880-11e6-9121-5cf37068b67b}" message="$(string.EventProviderName)" messageFileName="%SystemRoot%\System32\Drivers\UMDF\UsbccidDriver.dll" name="Microsoft-Windows-USB-CCID" resourceFileName="%SystemRoot%\System32\Drivers\UMDF\UsbccidDriver.dll" symbol="Usbccid">
        <channels>
          <importChannel chid="C1" name="System" />
        </channels>
      </provider>
      <cmi />
    </events>
  </instrumentation>
  <localization>
    <resources culture="en-US">
      <stringTable>
        <string id="EventProviderName" value="Microsoft-Windows-USB-CCID" />
        <string id="Task.Driver" value="Driver" />
        <string id="Opcode.General" value="General" />
        <string id="Opcode.Init" value="Init" />
        <string id="Opcode.Pnp" value="Pnp" />
        <string id="Opcode.Power" value="Power" />
        <string id="Opcode.IoRequest" value="IoRequest" />
        <string id="Opcode.Ioctl" value="Ioctl" />
        <string id="Opcode.IoQueue" value="IoQueue" />
        <string id="Opcode.ClassExt" value="ClassExt" />
        <string id="Event.HResultError" value="An operation has failed (%3, %4, %5, %6).%n%1%nHResult: %2" />
        <string id="Event.Win32Error" value="An operation has failed (%3, %4, %5, %6).%n%1%nWin32Error: %2" />
        <string id="Event.NTStatusError" value="An operation has failed (%3, %4, %5, %6).%n%1%nNTStatus: %2" />
        <string id="Event.OutOfMemError" value="Failed to allocate object.%nObject: %1%nSize: %2" />
        <string id="Event.MismatchSizeError" value="Unexpected size.%nObject: %1%nExpected Size: %2%nActual Size: %3" />
        <string id="Event.InvalidDataError" value="Invalid data.%nName: %1%nValue: %2" />
        <string id="Event.DeviceStatusError" value="Device responded with an error status.%nStatus: %1" />
        <string id="Event.BadDeviceError" value="Bad device.%nDevice: %1%nReason: %2" />
        <string id="Event.FuncNotSupportedError" value="The function is not supported.%nFunction: %1%nContext: %2" />
        <string id="Event.RequestError" value="Request[%1](CLS=%2,INS=%3,P1=%4,P2=%5,Lc=%6,Le=%7,.NETServiceMethod=%8)" />
        <string id="Event.RequestStatusError" value="A Request has returned failure.%nMsgType: %1%nICCStatus: %2%nCmdStatus: %3%nError: %4%nSW1: %5%nSW2: %6" />
        <string id="Event.UnknownInterruptError" value="The device generated %1 unknown interrupt(s) in %2 ms.%nLast Unknown Interrupt Message: %3." />
        <string id="Event.DebugInfo" value="The following debug informational event has occurred (%2, %3, %4, %5).%n%1" />
        <string id="Event.DebugWarn" value="The following debug warning event has occurred (%2, %3, %4, %5).%n%1" />
        <string id="Event.DebugErr" value="The following debug error event has occurred (%2, %3, %4, %5).%n%1" />
        <string id="Event.ClassDesc" value="The Smartcard reader reported the following class descriptor." />
        <string id="Event.ClassDesc1" value="The Smartcard reader reported the following class descriptor (part 1)." />
        <string id="Event.ClassDesc2" value="The Smartcard reader reported the following class descriptor (part 2)." />
        <string id="Event.InvalidClassDesc" value="The Smartcard reader reported an invalid class descriptor value." />
        <string id="Map.5_0V" value="5.0V" />
        <string id="Map.3_0V" value="3.0V" />
        <string id="Map.1_8V" value="1.8V" />
        <string id="Map.T0" value="T0" />
        <string id="Map.T1" value="T1" />
        <string id="Map.2-wire" value="2-wire" />
        <string id="Map.3-wire" value="3-wire" />
        <string id="Map.I2C" value="I2C" />
        <string id="Map.CardAccept" value="Card accept" />
        <string id="Map.CardEject" value="Card eject" />
        <string id="Map.CardCapture" value="Card capture" />
        <string id="Map.CardLockUnlock" value="Card lock/unlock" />
        <string id="Map.AutoParamATR" value="Auto parameter based on ATR" />
        <string id="Map.AutoIccActivation" value="Auto ICC activation" />
        <string id="Map.AutoIccVoltage" value="Auto ICC voltage" />
        <string id="Map.AutoIccClock" value="Auto ICC clock" />
        <string id="Map.AutoBaudrate" value="Auto baud rate" />
        <string id="Map.AutoParamNegotiation" value="Auto parameters negotiation" />
        <string id="Map.AutoPPS" value="Auto PPS" />
        <string id="Map.SetIccInStopMode" value="Can set ICC in clock stop mode" />
        <string id="Map.NonZeroNADAccepted" value="Non-zero NAD value accepted" />
        <string id="Map.AutoIFSD" value="Auto IFSD exchange" />
        <string id="Map.TPDU" value="TPDU level exchange" />
        <string id="Map.APDU" value="Short APDU level exchange" />
        <string id="Map.ExtendedAPDU" value="Short and Extended APDU level exchange" />
        <string id="Map.SelectiveSuspendSupport" value="Support selective suspend" />
        <string id="Map.PINVerification" value="PIN Verification supported" />
        <string id="Map.PINModification" value="PIN Modification supported" />
      </stringTable>
    </resources>
  </localization>
</assembly>