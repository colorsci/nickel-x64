<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<assembly xmlns="urn:schemas-microsoft-com:asm.v3" manifestVersion="1.0" copyright="Copyright (c) Microsoft Corporation. All Rights Reserved.">
  <assemblyIdentity name="Microsoft-AppModel-Exec-Events" version="10.0.22621.1" processorArchitecture="amd64" language="neutral" buildType="release" publicKeyToken="31bf3856ad364e35" versionScope="nonSxS" />
  <dependency discoverable="no" resourceType="Resources">
    <dependentAssembly>
      <assemblyIdentity name="Microsoft-AppModel-Exec-Events.Resources" version="10.0.22621.1" processorArchitecture="amd64" language="*" buildType="release" publicKeyToken="31bf3856ad364e35" />
    </dependentAssembly>
  </dependency>
  <file name="Microsoft-Windows-AppModelExecEvents.dll" destinationPath="$(runtime.system32)\" sourceName="Microsoft-Windows-AppModelExecEvents.dll" importPath="$(build.nttree)\" sourcePath=".\">
    <securityDescriptor name="WRP_FILE_DEFAULT_SDDL" />
    <asmv2:hash xmlns:asmv2="urn:schemas-microsoft-com:asm.v2" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
      <dsig:Transforms>
        <dsig:Transform Algorithm="urn:schemas-microsoft-com:HashTransforms.Identity" />
      </dsig:Transforms>
      <dsig:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha256" />
      <dsig:DigestValue>Hg4YnOE/cc2ZMtkB0V7X3Aa6jsiE0aGZRctLLsO08eI=</dsig:DigestValue>
    </asmv2:hash>
  </file>
  <instrumentation xmlns:ms="http://manifests.microsoft.com/win/2004/08/windows/events" xmlns:win="http://manifests.microsoft.com/win/2004/08/windows/events" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <events xmlns="http://schemas.microsoft.com/win/2004/08/events">
      <provider guid="{EB65A492-86C0-406A-BACE-9912D595BD69}" message="$(string.eventProviderName)" messageFileName="%SystemRoot%\system32\Microsoft-Windows-AppModelExecEvents.dll" name="Microsoft-Windows-AppModel-Exec" resourceFileName="%SystemRoot%\system32\Microsoft-Windows-AppModelExecEvents.dll" symbol="MICROSOFT_WINDOWS_APPMODEL_EXEC_PUBLISHER">
        <channels>
          <importChannel chid="CAMPrivacyChannel" name="Microsoft-Windows-Privacy-Auditing/Operational" />
        </channels>
      </provider>
      <cmi />
    </events>
  </instrumentation>
  <localization>
    <resources culture="en-US">
      <stringTable>
        <string id="eventProviderName" value="Microsoft-Windows-AppModelExecEvents" />
        <string id="Keyword.Error" value="Error" />
        <string id="Keyword.Performance" value="Performance" />
        <string id="Keyword.Generic" value="Generic" />
        <string id="Keyword.Common" value="Common" />
        <string id="Keyword.PacMan" value="PacMan" />
        <string id="Keyword.ExecMan" value="ExecMan" />
        <string id="Keyword.TaskHost" value="TaskHost" />
        <string id="Keyword.ResMan" value="ResMan" />
        <string id="Keyword.DeviceReg" value="DeviceReg" />
        <string id="Keyword.Bss" value="Bss" />
        <string id="Keyword.Sqm" value="Sqm" />
        <string id="Keyword.ShareBroker" value="ShareBroker" />
        <string id="Keyword.AgHost" value="AgHost" />
        <string id="Keyword.Telemetry" value="Telemetry" />
        <string id="Keyword.Activation" value="Activation Manager" />
        <string id="Keyword.LifetimeManager" value="Lifetime Manager" />
        <string id="Keyword.ForegroundManager" value="ForegroundManager" />
        <string id="Keyword.PlatformInterop" value="PlatformInterop" />
        <string id="Keyword.ExecProductionCircular" value="Production Circular" />
        <string id="Keyword.ExecProductionCritical" value="Production Critical" />
        <string id="Keyword.ExecSelfHostCircular" value="SelfHost Circular" />
        <string id="Keyword.ExecSelfHostCritical" value="SelfHost Critical" />
        <string id="Keyword.ExecDevPlatCircular" value="DevPlat Circular" />
        <string id="Keyword.BTPolicy" value="Background Transfer Policy" />
        <string id="Keyword.BAPolicy" value="Background Audio Policy" />
        <string id="Keyword.PLM" value="LifetimeManager" />
        <string id="Keyword.BackgroundManager" value="Background Manager" />
        <string id="Keyword.VOIP" value="VOIP" />
        <string id="Keyword.ExtendedExecutionClient" value="ExtendedExecutionClient" />
        <string id="Keyword.OnDemandBroker" value="OnDemandBroker" />
        <string id="Format.ExecGeneric" value="%1" />
        <string id="Format.Verbose" value="[Verbose]: %1" />
        <string id="Format.Info" value="[Info]: %1" />
        <string id="Format.Warning" value="[Warning]: %1" />
        <string id="Format.Error" value="[Error]: %1" />
        <string id="Format.ExecFailFast" value="*** ExecFailFast ***   %1" />
        <string id="Format.CHRLog" value="CHRLog" />
        <string id="Format.TaskStart" value="Task: %1 has started" />
        <string id="Format.TaskSuspend" value="Task: %1 has paused" />
        <string id="Format.TaskResume" value="Task: %1 has resumed" />
        <string id="Format.TaskStop" value="Task: %1 has completed" />
        <string id="Format.EM_BeginGetTaskInfo" value="EM: +GetTaskInfo()" />
        <string id="Format.EM_EndGetTaskInfo" value="EM: -GetTaskInfo(). HRESULT = %1" />
        <string id="Format.EM_GetAppInfo" value="EM: GetAppInfo:%1,%2:%3" />
        <string id="Format.EM_ParseBackgroundAbilities" value="EM: ParseBackgroundAbilities - HRESULT=%1" />
        <string id="Format.EM_BeginExecManServerHostCreateProcess" value="EM: +ExecManServerHost::CreateProcess" />
        <string id="Format.EM_EndExecManServerHostCreateProcess" value="EM: -ExecManServerHost::CreateProcess. HRESULT=%1" />
        <string id="Format.Sqm.AppUsage" value="Sqm::AppPlatSqmAppDataUsage: %1/%2 - TaskID = %3, Type = %4, NewState = %5, ReasonForStateChange = %6, Duration (ms) = %7, PeakMemory (kb) = %8" />
        <string id="Format.Emc.StartTaskCallbackBegin" value="Emc::ExecuteCommand: StartTaskCallbackBegin: TaskID = %1" />
        <string id="Format.Emc.StartTaskCallbackEnd" value="Emc::ExecuteCommand: StartTaskCallbackEnd: TaskID = %1, HR = %2" />
        <string id="Format.Emc.PauseTaskCallbackBegin" value="Emc::ExecuteCommand: PauseTaskCallbackBegin: TaskID = %1" />
        <string id="Format.Emc.PauseTaskCallbackEnd" value="Emc::ExecuteCommand: PauseTaskCallbackEnd: TaskID = %1, HR = %2" />
        <string id="Format.Emc.ResumeTaskCallbackBegin" value="Emc::ExecuteCommand: ResumeTaskCallbackBegin: TaskID = %1" />
        <string id="Format.Emc.ResumeTaskCallbackEnd" value="Emc::ExecuteCommand: ResumeTaskCallbackEnd: TaskID = %1, HR = %2" />
        <string id="Format.Emc.ControlTaskCallbackBegin" value="Emc::ExecuteCommand: ControlTaskCallbackBegin: TaskID = %1" />
        <string id="Format.Emc.ControlTaskCallbackEnd" value="Emc::ExecuteCommand: ControlTaskCallbackEnd: TaskID = %1, HR = %2" />
        <string id="Format.Emc.CancelTaskCallbackBegin" value="Emc::ExecuteCommand: CancelTaskCallbackBegin: TaskID = %1" />
        <string id="Format.Emc.CancelTaskCallbackEnd" value="Emc::ExecuteCommand: CancelTaskCallbackEnd: TaskID = %1, HR = %2" />
        <string id="Format.Emc.BackgroundExecutionTaskCallbackBegin" value="Emc::ExecuteCommand: BackgroundExecutionTaskCallbackBegin: TaskID = %1" />
        <string id="Format.Emc.BackgroundExecutionTaskCallbackEnd" value="Emc::ExecuteCommand: BackgroundExecutionTaskCallbackEnd: TaskID = %1, HR = %2" />
        <string id="Format.Emc.RegisterBackgroundExecutionRequest" value="Emc::RegisterBackgroundExecutionRequest: TaskID = %1, ExecutionType = %2, HR = %3" />
        <string id="Format.Emc.DeregisterBackgroundExecutionRequest" value="Emc::DeregisterBackgroundExecutionRequest: TaskID = %1, ExecutionType = %2, Reason = %3, HR = %4" />
        <string id="Format.Emc.EnsureXbfForCurrentLocaleBegin" value="Emc::EnsureXbfForCurrentLocale: EnsureXbfForCurrentLocaleBegin: ProductID = %1" />
        <string id="Format.Emc.EnsureXbfForCurrentLocaleEnd" value="Emc::EnsureXbfForCurrentLocale: EnsureXbfForCurrentLocaleEnd: ProductID = %1" />
        <string id="Format.EM_SkipTerminateProcess" value="EM: Skipping terminate process call for %1" />
        <string id="Format.EM_TerminateProcess" value="EM: Terminating process: PID = %1, ExitCode = %2" />
        <string id="Format.FTM_NotifyTaskComplete" value="FTM: NotifyTaskInstanceCompleted TaskID=%1 HRESULT=%2" />
        <string id="Format.FTM_NotifyTaskPaused" value="FTM: NotifyTaskInstancePaused TaskID=%1 HRESULT=%2" />
        <string id="Format.FTM_NotifyTaskRunning" value="FTM: NotifyTaskInstanceRunning TaskID=%1 HRESULT=%2" />
        <string id="Format.FTM_SendTaskStatusChange" value="FTM: SendTaskStatusChange TaskID=%1 Status=%2 HRESULT=%3" />
        <string id="Format.FTM_NotifyTaskHostCompleted" value="FTM: NotifyTaskHostCompleted HRESULT=%1" />
        <string id="Format.FTM_DiscardFrozenHost" value="FTM: Discarding NotifyTaskHostFrozen notification because the host isn't really frozen" />
        <string id="Format.FTM_NotifyTaskHostFrozen" value="FTM: NotifyTaskHostFrozen PID=%1 HRESULT=%2" />
        <string id="Format.FTM_NotifyTaskHostDehydrated" value="FTM: NotifyTaskHostDehydrated HRESULT=%1" />
        <string id="Format.FTM_RegisterCallback" value="FTM: Registering callback %1 HRESULT=%2" />
        <string id="Format.FTM_NewDehydrationSuppressingTask" value="FTM: New Task %1 is dehydration-suppressing" />
        <string id="Format.FTM_ApplyDehydrationSuppressingPolicy" value="FTM: Applying Dehydration-Suppressing Policy to Host PID %1" />
        <string id="Format.FTM_RevokeDehydrationSuppressingPolicy" value="FTM: Revoking Dehydration-Suppressing Policy to Host PID %1" />
        <string id="Format.FTM_BeginLaunchTask" value="FTM: +LaunchTask TaskURI=%1 LaunchFlags=%2" />
        <string id="Format.FTM_EndLaunchTask" value="FTM: -LaunchTask TaskURI=%1 TaskID=%2 PID=%3 HRESULT=%4" />
        <string id="Format.FTM_ResumeTask" value="FTM: ResumeTask TaskID=%1 HRESULT=%2" />
        <string id="Format.FTM_RemovingFGResources" value="FTM: Removing Foreground Resources from TaskID=%1" />
        <string id="Format.FTM_SetForegroundTaskInstanceId" value="FTM: SetForegroundTaskInstanceId TaskID=%1 HRESULT=%2" />
        <string id="Format.FTM_PauseTask" value="FTM: PauseTask TaskID=%1 HRESULT=%2" />
        <string id="Format.FTM_CancelTask" value="FTM: CancelTask TaskID=%1 Frozen=%2 HRESULT=%3" />
        <string id="Format.FTM_IgnoreAbort" value="FTM: AbortTask being ignored because the task is completed TaskID=%1" />
        <string id="Format.FTM_AbortTask" value="FTM: AbortTask TaskID=%1 Reason=%2 HRESULT=%3" />
        <string id="Format.FTM_SetTaskDehydrationEligibility" value="FTM: SetTaskDehydrationEligibility TaskID=%1 State=%2 HRESULT=%3" />
        <string id="Format.FTM_RequestProcessBackgroundExecution" value="FTM: RequestProcessBackgroundExecution type=%1 Pid=%2 HRESULT=%3" />
        <string id="Format.FTM_CancelProcessBackgroundExecution" value="FTM: CancelProcessBackgroundExecutionRequest type=%1 Pid=%2 HRESULT=%3" />
        <string id="Format.FTM_TaskRunningInBackground" value="FTM: TaskRunningInBackground TaskID=%1 PID=%2  HRESULT=%3" />
        <string id="Format.FTM_TaskRunningInForeground" value="FTM: TaskRunningInForeground TaskID=%1 PID=%2  HRESULT=%3" />
        <string id="Format.FTM_ChangeActivationPolicyResumeForBG" value="FTM: Changing activation policy to resume due to BG Execution for ProductID %1" />
        <string id="Format.FTM_OnShutdownComplete" value="FTM: OnShutdownCompleted" />
        <string id="Format.FTM_IgnoreWatchdog" value="FTM: Ignoring expired watchdog for task %1 because it is being debugged." />
        <string id="Format.FTM_RunInBGExpired" value="FTM: Watchdog fired for task %1 while running in background. Pausing Task." />
        <string id="Format.FTM_BGDeniedNotRunning" value="FTM: Request BG Execution Denied because it wasn't running. TaskID=%1" />
        <string id="Format.FTM_BGDeniedProductForbidden" value="FTM: Request BG Execution Denied because product was forbidden. TaskID=%1" />
        <string id="Format.FTM_BGDeniedNoBGManifest" value="FTM: Request BG Execution Denied because task didn't have BG abilities in its manifest. TaskID=%1" />
        <string id="Format.FTM_BGDeniedNoResources" value="FTM: Request BG Execution Denied due to lack of resources. TaskID=%1" />
        <string id="Format.FTM_BGDeniedBatteryPolicy" value="FTM: Request BG Execution Denied because battery policy prevented it. TaskID=%1" />
        <string id="Format.FTM_BGDeniedDplPolicy" value="FTM: Request BG Execution Denied because DPL policy prevented it. TaskID=%1" />
        <string id="Format.FTM_EdpKeysLocked" value="FTM: Windows Information Protection keys locked state (%1)" />
        <string id="Format.FTM_BeginRequestProcessBackgroundExecution" value="FTM: +RequestProcessBackgroundExecution type=%1 Pid=%2" />
        <string id="Format.FTM_BeginRequestBackgroundExecution" value="FTM: +RequestBackgroundExecution type=%1" />
        <string id="Format.FTM_EndRequestBackgroundExecution" value="FTM: -RequestBackgroundExecution type=%1 HRESULT=%2" />
        <string id="Format.FTM_BeginRequestBGAccess" value="FTM: +RequestBGAccess TaskInstanceId=%1 type=%2" />
        <string id="Format.FTM_RequestBGAccess" value="FTM: RequestBGAccess IsAllowed=%1 TaskID=%2 HRESULT=%3" />
        <string id="Format.FTM_RemoveBGAccess" value="FTM: RemoveBGRequest RequestedRemoval=%1 ActualRemoval=%2 TaskID=%3 HRESULT=%4" />
        <string id="Format.FTM_ForbidBG" value="FTM: ForbidBackgroundExecution for ProductID %1. HRESULT=%2" />
        <string id="Format.FTM_AllowBG" value="FTM: AllowBackgroundExecution for ProductID %1. HRESULT=%2" />
        <string id="Format.FTM_NoBGDueToMemory" value="FTM: Process is using too much memory for BG Execution. PID=%1, MemUsage=%2, RequiredMemUsage=%3" />
        <string id="Format.FTM_StopBGOOM" value="FTM: Removing BG capability from Task ID %1 due to OOM" />
        <string id="Format.FTM_NewBatterySaverState" value="FTM: Battery Saver State has change. New state = %1" />
        <string id="Format.FTM_NewBGRequestDueToBatterySaverState" value="FTM: Attempted new BG Execution request due to battery state change. TaskID=%1" />
        <string id="Format.FTM_IsValidTaskInstancePid" value="FTM: IsValidTaskInstancePid TaskID=%1 Pid=%2 fValid=%3 HRESULT=%4" />
        <string id="Format.FTM_DetermineChildTaskResourceSet" value="FTM: DetermineBestResourceSet for child ProductID=%1 LaunchFlags=%2 ResourceSetType=%3" />
        <string id="Format.FTM_ResourceSetRevoked" value="FTM: OnRelease ResourceSet TaskID=%1 ResouceSet=%2 HRESULT=%3" />
        <string id="Format.FTM_AcquireNetworkRefFailure" value="FTM:UITask Call to Acquire network reference failed CM_RESULT=%1" />
        <string id="Format.FTM_ReleaseNetworkRefFailure" value="FTM:UITask Call to Release network reference failed CM_RESULT=%1" />
        <string id="Format.FTM_SetTaskImportanceVector" value="FTM: SetTaskImportanceVector TaskID=%1 Vector=%2 HRESULT=%3" />
        <string id="Format.Aim.ReadSettings" value="AimServer::ReadSettings: HR = %1" />
        <string id="Format.Aim.ServerTerminated" value="AimServer: Detected server for scope %1 terminated (PID = %2)" />
        <string id="Format.Aim.OnAgentRequestInvoked" value="AimServer::OnAgentRequestInvoked: AgentRequestID %1 was invoked. PID = %2, HR = %3" />
        <string id="Format.Aim.LifecyleEvent" value="AimServer::HandleEvent: ProductID %1 received PM LifecyleEvent %2. HR Notification = %3, HR = %4" />
        <string id="Format.Aim.BtmTimerExpired" value="BTM::RecvCallback: Timer expired for AgentRequestID %1" />
        <string id="Format.Aim.BtmLaunchTask" value="BTM::LaunchTask: TaskURI = %1 TaskID = %2, PID = %3, HR = %4" />
        <string id="Format.Aim.BaNotifyTaskInstanceCompleted" value="BA::NotifyTaskInstanceCompleted: AgentRequestID = %1" />
        <string id="Format.Aim.BaNotifyTaskInstanceCompletedOrphanedHost" value="BA::NotifyTaskInstanceCompleted: Terminating Orphaned Host PID = %1" />
        <string id="Format.Aim.BaRegisterServiceRequest" value="BA::RegisterServiceRequest: AlreadyReserved = %1, SR = %2, HR = %3" />
        <string id="Format.Aim.BaUnRegisterServiceRequest" value="BA::UnRegisterServiceRequest: SR = %1, HR = %2" />
        <string id="Format.Aim.BaCancelAgent" value="BA::CancelAgentRequest: AgentRequestID = %1, CancelType = %2, PID = %3, HR = %4" />
        <string id="Format.Aim.BaOrphanAgentRequest" value="BA::OrphanAgentRequest: AgentRequestID = %1, HR = %2" />
        <string id="Format.Aim.BaUnRegisterServiceRequestTerminateHost" value="BA::UnRegisterServiceRequest: Terminating host PID %1" />
        <string id="Format.Aim.BaUnRegisterServiceRequestOrphanHost" value="BA::UnRegisterServiceRequest: Orphaning host PID %1" />
        <string id="Format.Aim.BaUnRegisterServiceRequestTerminateOrphan" value="BA::UnRegisterServiceRequest: Terminating second old orphaned host PID %1" />
        <string id="Format.Aim.BaAbortTask" value="BA::AbortTask: AgentRequestID = %1, HR = %2" />
        <string id="Format.Aim.GbaAcquireResourceSet" value="GBA::TryAcquireResourceSet: pending = %1, type = %2, HR = %3" />
        <string id="Format.Aim.GbaNotifyTaskInstanceCompleted" value="GBA::NotifyTaskInstanceCompleted: AgentRequestID = %1" />
        <string id="Format.Aim.GbaRegisterServiceRequest" value="GBA::RegisterServiceRequest: SR = %1, HR = %2" />
        <string id="Format.Aim.GbaUnRegisterServiceRequest" value="GBA::UnRegisterServiceRequest: SR = %1, HR = %2" />
        <string id="Format.Aim.GbaRegisterAgentRequest" value="GBA::RegisterAgentRequest: AgentRequestID = %1, type = %2, hr = %3" />
        <string id="Format.Aim.GbaCancelLowPriorityAgent" value="GBA: Cancelling low priority %3 agent because high priority %2 needs to run: Resource was dedicated = %1" />
        <string id="Format.Aim.GbaCancelAgent" value="GBA::CancelAgentRequest: AgentRequestID = %1, CancelType = %2, PID = %3, HR = %4" />
        <string id="Format.Aim.GbaAbortTask" value="GBA::AbortTask: AgentRequestID = %1, HR = %2" />
        <string id="Format.Aim.BaNotifyTaskHostCompleted" value="BA::NotifyTaskHostCompleted: ProductID = %1, PID = %2" />
        <string id="Format.Aim.BaRegisterAgentRequest" value="BA::RegisterAgentRequest: ProductID = %1, AgentRequestID = %2, HR = %3" />
        <string id="Format.Aim.BaPdcActivationFailed" value="BA::PdcActivationFailed: ProductID = %1, Reason = %2, NTSTATUS = %3" />
        <string id="Format.AppResolver_RetrieveCandidates_Message" value="[Error in AppResolverUI]: AppResolverUI::RetrieveCandidates URI = %1, HRESULT = %2" />
        <string id="Format.AppResolver_InitializeFromResolverCandidate_Message" value="[Error in AppResolverUI]: AppItem::InitializeFromResolverCandidate URI = %1, HRESULT = %2" />
        <string id="Format.FAM_NotifyTaskInstanceCompleted" value="FAM: NotifyTaskInstanceCompleted, TaskID:%1, hr:%2" />
        <string id="Format.FAM_NotifyTaskInstanceRunning" value="FAM: NotifyTaskInstanceRunning, TaskID:%1 Timer - %2" />
        <string id="Format.FAM_RegisterForegroundAgentManagerProxy" value="FAM: RegisterForegroundAgentManagerProxy:PID=%1, ConsumerTaskId=%2, Option=%3, hr=%4" />
        <string id="Format.FAM_GetForegroundAgentResourceSet" value="FAM: UiForeground:Memory:%1MB, CPU:%2%%" />
        <string id="Format.FAM_CreateAgentLaunchRequest" value="FAM: CreateAgentLaunchRequest, TaskID:%1, Queue:%2, hr:%3" />
        <string id="Format.FAM_CancelAgentRequest" value="FAM: CancelAgentRequest, TaskID:%1, CancelType=%2, hr:%3" />
        <string id="Format.FAM_AbortAgentRequest" value="FAM: AbortAgentRequestsInternal, hr:%1" />
        <string id="Format.FAM_CompleteAgent" value="FAM: CompleteAgent, TaskID:%1, hr:%2" />
        <string id="Format.FAM_PrioritizeAgentRequest" value="FAM: PrioritizeAgentRequest, TaskID:%1, hr:%2" />
        <string id="Format.FAM_OnForegroundAppChanged" value="FAM: OnForegroundAppChanged()-Abort agents" />
        <string id="Format.FAM_OnRelease" value="FAM: OnRelease()" />
        <string id="Format.FAM_NotifyConsumer" value="FAM: NotifyConsumer, Notification:%1, TaskID:%2, hrResult:%3" />
        <string id="Format.FAM_AcquireSharedResourceSet" value="FAM: AcquireSharedResourceSet, ProductID:%1, ConsumerPid:%2, Pending:%3, hr:%4" />
        <string id="Format.FAM_ReleaseResourceSet" value="FAM: ReleaseResourceSet, #%1, hr:%2" />
        <string id="Format.FAM_TimerExpired" value="FAM: TimerExpired:TerminateHost[PID=%1]" />
        <string id="Format.FAM_AcquireResourceSet" value="FAM: AcquireResourceSet, #%1, Mem:%2MB, CPU:%3%%, hr:%4" />
        <string id="Format.FAM_AbortTask" value="FAM: AbortTask: TaskInstanceID = %1, HR = %2" />
        <string id="Event.PLM.RemovedSuspensionGroup" value="DepMgr: Removed suspension group from the graph, PsmKey=%1" />
        <string id="Event.PLM.NoHaltOtherAppsNotHalted" value="Not set app %1 into halted state because it should wait for other apps in the package halted first" />
        <string id="Event.PLM.NoHaltOtherAppsQuiescing" value="Not set app %1 into halted state because other app in the package have not finished quiescing" />
        <string id="Event.PLM.NoTerminateInvalidState" value="Not terminate app %1, because target app %2 state = %3" />
        <string id="Event.PLM.UpdateDependencyGraph" value="Updated current dependency graph (Removal : %1) with Source %2 and Target %3 for type %4 in return %5" />
        <string id="Event.PLM.OverwriteTimeoutValue" value="Default time for %1 overridden to %2 ms" />
        <string id="Event.PLM.CreatingHangReport" value="Creating hang report" />
        <string id="Event.PLM.ForegroundWindowHung" value="Window %1 is hung in foreground" />
        <string id="Event.PLM.ForegroundWindowNoLongerHung" value="Window %1 is no longer hung in foreground" />
        <string id="Event.PLM.WaitingForWerReport" value="Waiting for WER reporting to finish on app %1" />
        <string id="Event.PLM.HangReportFinished" value="Hang reporting finished on app %1.  App termination status: %2" />
        <string id="Event.PLM.HangReportFinishedWithResult" value="Hung reporting finished on window %1 with result %2" />
        <string id="Event.PLM.SubmitActivationHangReportStart" value="_SubmitActivationHangWerReport(start): Aumid=%1, PIDs=%2 count=%3" />
        <string id="Event.PLM.SubmitActivationHangReportStop" value="_SubmitActivationHangWerReport(stop): Aumid=%1, result=%2" />
        <string id="Event.PLM.UnregisterForStateChanges" value="_UnregisterForStateChanges: fPackageLevel=%1, HRESULT is %2. Cookie is %3" />
        <string id="Event.PLM.SuccessfulLaunch" value="Application %1 has successfully launched. HRESULT %2" />
        <string id="Event.PLM.CancelledLaunchGraceTimer" value="Canceled launch grace timer, PsmKey=%1" />
        <string id="Event.PLM.InitializeLaunchGraceContext" value="_InitializeLaunchGraceContext: Aumid=%1, fExtendedLaunch=%2, fEventExists=%3" />
        <string id="Event.PLM.SuccessfulLaunchGraceExpired" value="App %1 successfully launched and its launch grace period expired: removing suspend exemption" />
        <string id="Event.PLM.ForcefullyTerminatingApp" value="Forcefully terminating app, Aumid=%1 flags=%2, reason=%3" />
        <string id="Event.PLM.CheckAppTerminationBeforeSwitch" value="CheckTerminationBeforeSwitch: Should terminate: %1, Aumid=%2, HRESULT=%3, reason=%4, fIsMisbehaving=%5" />
        <string id="Event.PLM.TerminationRequest" value="Termination requested for %1 - flags %2" />
        <string id="Event.PLM.TerminationFailurePendingTasks" value="Failing TerminateApp due to pending task completions: %1" />
        <string id="Event.PLM.TerminatingApp" value="Terminating %1 immediately" />
        <string id="Event.PLM.TerminatingAppUninstallingBackgroundWorkItems" value="Uninstalling background work items for %1" />
        <string id="Event.PLM.TerminationScheduled" value="Termination of %1 scheduled for %2 ms in future" />
        <string id="Event.PLM.TerminationMessageSentToImmersiveBrowser" value="Sent window message to the default immersive browser with HRESULT %1" />
        <string id="Event.PLM.TerminationAttemptPriorToNewLaunch" value="Attempting to terminate app %1 prior to new app launch due to pending termination" />
        <string id="Event.PLM.EvaluateAndTerminatePid" value="EvaluateAndTerminatePid: PID: %1. HRESULT: %2. Package State: %3" />
        <string id="Event.PLM.SuspendExemptionDuringAppLaunch" value="Exempting application %1 from suspend while it is being launched" />
        <string id="Event.PLM.RequestingHigherMinimumPriority" value="Exemption manager %1 is requesting a higher minimum priority %2 for %3" />
        <string id="Event.PLM.DebugModePriority" value="Debug mode is enabled for %1, so it will run at %2 priority" />
        <string id="Event.PLM.LogoffPriority" value="Handling logoff, %1 will run at %2 priority" />
        <string id="Event.PLM.ThrottlingDisabledPriority" value="Throttling has been disabled, so %1 will run at %2 priority" />
        <string id="Event.PLM.SuspensionDeniedKeyDebounce" value="Suspend denied due to new key debounce, PsmKey=%1" />
        <string id="Event.PLM.SuspensionDeniedDebugMode" value="Suspend denied due to debug mode, PsmKey=%1" />
        <string id="Event.PLM.SuspensionDeniedExemption" value="Not suspending application %1 due to exemption %2" />
        <string id="Event.PLM.EvaluateAndSuspendApplication" value="_EvaluateAndSuspendApplication: PsmKey=%1, fIsSuspendAllowed=%2, HRESULT=%3" />
        <string id="Event.PLM.ReevaluatePriorityDebugMode" value="_ReevaluatePolicy: Ignoring debug mode app, PsmKey=%1" />
        <string id="Event.PLM.ManagingPreexistingAppsStart" value="ManagePreExistingApps(start)" />
        <string id="Event.PLM.ManagePreexistingAppsForce" value="ManagePreExistingApps: PsmKey=%1, Aumid=%2, hr=%3" />
        <string id="Event.PLM.ManagingPreexistingAppsStop" value="ManagePreExistingApps(stop)" />
        <string id="Event.PLM.RequestSuspendTimeout" value="RequestSuspendTimeout called for application %1 and timeout %2" />
        <string id="Event.PLM.DebugModeEnabled" value="Debug mode enabled, PkgFamilyName=%1" />
        <string id="Event.PLM.DebugModeDisabled" value="Debug mode disabled, PkgFamilyName=%1" />
        <string id="Event.PLM.SettingPackageTimeout" value="Set Package %1, Timeout to %2" />
        <string id="Event.PLM.ResumeDebugModePackageStart" value="ResumeDebugModePackage(start): package=%1" />
        <string id="Event.PLM.ResumeDebugModePackageStop" value="ResumeDebugModePackage(stop): package=%1, HRESULT=%2" />
        <string id="Event.PLM.SuspendDebugModePackageStart" value="SuspendDebugModePackage(start): package=%1" />
        <string id="Event.PLM.SuspendDebugModePackageStop" value="SuspendDebugModePackage(stop): package=%1, HRESULT=%2" />
        <string id="Event.PLM.MultiAppSuspendAndTerminateSyncStart" value="MultiAppSuspendAndTerminateSync(start): cPsmKeys=%1, suspendTrigger=%2, terminateReason=%3" />
        <string id="Event.PLM.MultiAppSuspendAndTerminateSyncStop" value="MultiAppSuspendAndTerminateSync(stop): cPsmKeys=%1, suspendTrigger=%2, terminateReason=%3, HRESULT=%4" />
        <string id="Event.PLM.MultiPackageSuspendAndTerminateSyncStart" value="MultiPackageSuspendAndTerminateSync(start): cPsmKeys=%1, suspendTrigger=%2, terminateReason=%3" />
        <string id="Event.PLM.MultiPackageSuspendAndTerminateSyncStop" value="MultiPackageSuspendAndTerminateSync(stop): cPsmKeys=%1, suspendTrigger=%2, terminateReason=%3, HRESULT=%4" />
        <string id="Event.PLM.MultiPackageSuspendAndPendTerminateSyncStart" value="MultiPackageSuspendAndPendTerminateSync(start): cPsmKeys=%1, suspendTrigger=%2, terminateReason=%3" />
        <string id="Event.PLM.MultiPackageSuspendAndPendTerminateSyncStop" value="MultiPackageSuspendAndPendTerminateSync(stop): cPsmKeys=%1, suspendTrigger=%2, terminateReason=%3, HRESULT=%4" />
        <string id="Event.PLM.TerminateSyncStart" value="TerminateSync(start): PsmKey=%1, type=%2, reason=%3" />
        <string id="Event.PLM.TerminateSyncStop" value="TerminateSync(stop): PsmKey=%1, hrLogReason=%2, hrTermination=%3" />
        <string id="Event.PLM.TerminatePackageSyncStart" value="TerminatePackageSync(start): Package=%1, type=%2, reason=%3" />
        <string id="Event.PLM.TerminatePackageSyncStop" value="TerminatePackageSync(stop): Package=%1, fPlmKnowsPackage=%2, HRESULT=%3" />
        <string id="Event.PLM.TerminateAllSuspendedApplicationsStart" value="_TerminateAllSuspendedApplications(start)" />
        <string id="Event.PLM.TerminateAllSuspendedApplicationsStop" value="_TerminateAllSuspendedApplications(stop): HRESULT=%1" />
        <string id="Event.PLM.ApplicationBlockingConnectedStandby" value="Application %1 is blocking Connected Standby" />
        <string id="Event.PLM.ExitingConnectedStandby" value="Exiting Connected Standby" />
        <string id="Event.PLM.ReevaluateConnectedStandBy" value="All packages have been suspended or terminated. Notify PDC. Call to PdcNotificationClientAcknowledge() returned %1" />
        <string id="Event.PLM.KernelStateChangeCallbackPidsPresent" value="Kernel State Change Callback: There were %1 PIDs present in the callback data" />
        <string id="Event.PLM.KernelStateChangeStateSource" value="Kernel State Change Callback: The state source was %1" />
        <string id="Event.PLM.PdcNotificationClientAcknowledge" value="PDC_CONTROL_ABORT: PdcNotificationClientAcknowledge(STATUS_SUCCESS) returned %1" />
        <string id="Event.PLM.EvaluateAndTerminateFailedDueToImmersiveApplication" value="Not terminating application %1 in _EvaluateAndTerminateApplication because it contains a running IImmersiveApplication" />
        <string id="Event.PLM.EvaluateAndTerminateFailedDueToLongRunningApp" value="Not terminating application %1 in _EvaluateAndTerminateApplication because it is a long running app" />
        <string id="Event.PLM.EvaluateAndTerminateFailedDueToPendingTaskCompletion" value="Not terminating application %1 in _EvaluateAndTerminateApplication due to pending task completion" />
        <string id="Event.PLM.EvaluateAndTerminateFailedDueToLaunchGrace" value="Not terminating application %1 in _EvaluateAndTerminateApplication due to Launch Grace" />
        <string id="Event.PLM.EvaluateAndTerminateFailedDueToDebugMode" value="Not terminating application %1 in _EvaluateAndTerminateApplication due to debug mode" />
        <string id="Event.PLM.EvaluateAndTerminateFailedDueToAlreadyTerminated" value="Not terminating application %1 in _EvaluateAndTerminateApplication due to application had already been terminated" />
        <string id="Event.PLM.EvaluateAndTerminateFailedDueToChildSuspensionGroup" value="_EvaluateAndTerminateApplication: Skipping child suspension group, PsmKey=%1" />
        <string id="Event.PLM.EvaluateAndTerminateResult" value="An empty application was detected. Setting pending termination for application %1, HRESULT %2" />
        <string id="Event.PLM.UngroupChildFromParentSuspension" value="Parent allowed suspension for child app, childPsmKey=%1" />
        <string id="Event.PLM.GroupChildWithParent" value="GroupChildWithParent: ChildPsmKey=%1, HRESULT=%2" />
        <string id="Event.PLM.CleanupDefaultBrowserCommandLine" value="Call a command line '%1' to notify default browser with result %2" />
        <string id="Event.PLM.CleanupDefaultBrowserReadNewExecutablePathResult" value="Read executable path from registry with result %1" />
        <string id="Event.PLM.ApplicationAddedRegisterForPsmNotication" value="Application %1 was added to PLM Data Store and registering for PSM notification" />
        <string id="Event.PLM.ApplicationAddedResumePpleAppWithPsmKey" value="Resume the PPLE app %1 when receiving the PSM new key notification" />
        <string id="Event.PLM.EvaluateAndTerminateSourceAppTerminatingOrphanedPrereqApp" value="An orphaned prereq application was detected. Setting pending termination for application %1, HRESULT %2" />
        <string id="Event.PLM.EvaluateAndTerminateSourceAppDependencyApp" value="Not terminating dependent application %1 in _EvaluateAndTerminateDependentApplication due other dependency applications" />
        <string id="Event.PLM.EvaluateAndTerminateSourceAppExemption" value="_EvaluateAndTerminateSourceApplication: Aumid=%1, exemption=%2" />
        <string id="Event.PLM.ForceTerminateTargetApplicationsExemption" value="An force termination exemption Application was detected. Setting pending termination for application %1" />
        <string id="Event.PLM.StateMgrQueuedState" value="StateMgr: State queued, PsmKey=%1, state=%2, HRESULT=%3" />
        <string id="Event.PLM.StateMgrOnApplicationStartedActive" value="StateMgr: OnApplicationStarted set to active, PsmKey=%1" />
        <string id="Event.PLM.StateMgrOnApplicationStartedFinished" value="StateMgr: OnApplicationStarted finished, PsmKey=%1, HRESULT=%2" />
        <string id="Event.PLM.StateMgrAppStateChange" value="StateMgr: App's current state has changed, PsmKey=%1, state=%2" />
        <string id="Event.PLM.StateMgrOnApplicationTerminatedStart" value="StateMgr: OnApplicationTerminated(start), PsmKey=%1" />
        <string id="Event.PLM.StateMgrOnApplicationTerminatedSignaled" value="StateMgr: Application terminated signaled, PsmKey=%1" />
        <string id="Event.PLM.StateMgrOnApplicationTerminatedStop" value="StateMgr: OnApplicationTerminated(stop), PsmKey=%1" />
        <string id="Event.PLM.StateMgrGetTerminateSyncData" value="StateMgr: GetTerminateSyncData, PsmKey=%1, hr=%2" />
        <string id="Event.PLM.StateMgrProcessStateQueueStart" value="StateMgr: _ProcessStateQueue(start): PsmKey=%1, state=%2" />
        <string id="Event.PLM.StateMgrProcessStateQueueStop" value="StateMgr: _ProcessStateQueue(stop): PsmKey=%1, state=%2, HRESULT=%3" />
        <string id="Event.PLM.StateMgrEvaluateOnPause" value="StateMgr: Queue's pause state has changed to %2, PsmKey=%1" />
        <string id="Event.PLM.StateMgrSetCommitedState" value="StateMgr: App's committed state has changed, PsmKey=%1, state=%2" />
        <string id="Event.PLM.DebugControlEnableDebugMode" value="Enabling debug mode on package %1" />
        <string id="Event.PLM.DebugControlDisableDebugMode" value="Disabling debug mode on package %1" />
        <string id="Event.PLM.DebugControlSuspendPackage" value="Suspending package %1 via debug API. HRESULT: %2" />
        <string id="Event.PLM.DebugControlResumePackage" value="Resuming package %1 via debug API. HRESULT: %2" />
        <string id="Event.PLM.DebugControlShutdownPackage" value="Terminating package %1 via debug API. HRESULT: %2" />
        <string id="Event.PLM.HungAppReadTimeout" value="Default time for %1 overridden to %2 ms" />
        <string id="Event.PLM.ReportActivationHangSync" value="ReportActivationHangSync: Halt application Aumid=%1, result=%2" />
        <string id="Event.PLM.SubmitActivationHangWerReportStart" value="_SubmitActivationHangWerReport(start): Aumid=%1, PIDs=%2 count=%3" />
        <string id="Event.PLM.SubmitActivationHangWerReportStop" value="_SubmitActivationHangWerReport(stop): Aumid=%1 canceled(%2) result=%3" />
        <string id="Event.PLM.NoSwapDueToSwapState" value="PLM doesn't swap out application %1 due to its swap state %2" />
        <string id="Event.PLM.TerminatePolicyAfterFailedSwap" value="PLM termination policy started on background thread because application %1 failed to outswap" />
        <string id="Event.PLM.TerminatePolicyFinished" value="PLM termination policy finished. Outswapping returned status %1" />
        <string id="Event.PLM.OnMemWatcherAggressiveOnDisconnect" value="PLM memory policy will be aggressive because this is a disconnected session" />
        <string id="Event.PLM.MemoryPolicyTerminatePolicyStart" value="PLM termination policy start" />
        <string id="Event.PLM.MemoryPolicyTerminatePolicyStop" value="PLM termination policy stop" />
        <string id="Event.PLM.MemoryPolicyWatcherTerminateMemoryUse" value="PLM termination policy triggered by in use memory of %1 MiB" />
        <string id="Event.PLM.MemoryPolicyWatcherTerminateCommitCharge" value="PLM termination policy triggered by commit charge of %1 MiB" />
        <string id="Event.PLM.MemoryPolicyWatcherTerminateCommitChargeAppCount" value="MemoryPolicyWatcherTerminateCommitCharge" />
        <string id="Event.PLM.MemoryPolicyWatcherEmptyUseMemory" value="PLM empty policy triggered by in use memory of %1 MB" />
        <string id="Event.PLM.MemoryPolicyTerminationExempted" value="PLM memory policy does not allow termination of application %1 for reason %2" />
        <string id="Event.PLM.MemoryPolicyTerminationAllowed" value="PLM memory policy allows termination of application %1" />
        <string id="Event.PLM.MemoryPolicyApplicationHidden" value="Application %1 was hidden %2 seconds ago" />
        <string id="Event.PLM.MemoryPolicyClipboardOwner" value="Application %1 is the clipboard owner" />
        <string id="Event.PLM.MemoryPolicyEmptyPolicyStart" value="PLM empty policy start" />
        <string id="Event.PLM.MemoryPolicyEmptyPolicyIgnoringApplication" value="PLM empty policy ignoring application %1 with error code %2" />
        <string id="Event.PLM.MemoryPolicyEmptyPolicyStop" value="PLM empty policy finished after emptying %1 MiB" />
        <string id="Event.PLM.MemoryPolicyTerminateApplicationEnumerate" value="PLM termination policy enumerated %1 applications" />
        <string id="Event.PLM.MemoryPolicyNewTermianteCandidate" value="PLM memory policy chose application %1 as its termination candidate, over old candidate application %2" />
        <string id="Event.PLM.MemoryPolicyTerminateCandidateMemoryScore" value="PLM memory policy will terminate application %1 with memory size %2 MiB and score %3" />
        <string id="Event.PLM.MemoryPolicyMemWatcherReceived" value="PLM memory policy received MemWatcher event" />
        <string id="Event.PLM.MemoryPolicyMemWatcherTimeOut" value="PLM memory policy received MemWatcher event" />
        <string id="Event.PLM.PackageExemptionMgrSuspensionDenied" value="Package exemption manager denied suspend for %1.  Ref counts are LAUNCH=%2, PSMREG=%3, PSMPENDING=%4" />
        <string id="Event.PLM.PackageExemptionMgrRefCountChange" value="Package Exemption Manager: ReferenceAdded:%1, %2 ref to application %3. The ref counts are now LAUNCH=%4, PSMREG=%5, and PSMREGPENDING=%6" />
        <string id="Event.PLM.PackageAddedToDataStore" value="Package %1 added to the package data store" />
        <string id="Event.PLM.UnpauseSuspensionGroupPriorityReset" value="Resetting priority to unpause the suspension group, PsmKey=%1" />
        <string id="Event.PLM.PriorityChanged" value="Changed the priority of %1 to %2" />
        <string id="Event.PLM.AllowServiceOfPackagesStart" value="AllowServiceOfPackages(start): cPackages=%1, fNotifyBi=%2" />
        <string id="Event.PLM.AllowServiceOfPackagesStop" value="AllowServiceOfPackages(stop): HRESULT=%1" />
        <string id="Event.PLM.FinishedServiceOfPackagesStart" value="FinishedServiceOfPackages(start): cPackages=%1" />
        <string id="Event.PLM.FinishedServiceOfPackagesStop" value="FinishedServiceOfPackages(stop): HRESULT=%1" />
        <string id="Event.PLM.AllowUninstallOfPackageStart" value="AllowUninstallOfPackage(start): package=%1" />
        <string id="Event.PLM.AllowUninstallOfPackageStop" value="AllowUninstallOfPackage(stop): package=%1, HRESULT=%2" />
        <string id="Event.PLM.TerminateMisbehavingAppActivationFailure" value="Forcefully terminating misbehaving app %1 due to activation failure %2" />
        <string id="Event.PLM.ApplicationChanged" value="App %1: Change = %2" />
        <string id="Event.PLM.OnWppCaptureState" value="PsmKey %1 has state %2" />
        <string id="Event.PLM.ChangeApplicationBiState" value="Changing app state through BI, PsmKey=%1, state=%2 terminate action=%3" />
        <string id="Event.PLM.ChangePackageBiState" value="Changing the package state of %1 through BI to %2" />
        <string id="Event.PLM.OnAfterQuiescingBegin" value="OnAfterQuiescing: Quiesce began for PsmKey=%1, suspendTrigger=%2" />
        <string id="Event.PLM.QuiesceTimeOut" value="_CompleteQuiesceHelper: Queued termination for timed-out PsmKey %1" />
        <string id="Event.PLM.QuiesceCompleted" value="Quiesce completed for PsmKey=%1, reason=%2, suspendTrigger=%3" />
        <string id="Event.PLM.SuspendTriggerUpdated" value="Suspend trigger updated for PsmKey=%1, suspendTrigger=%2" />
        <string id="Event.PLM.ExtendQuiesceTimeout" value="ExtendQuiesceTimeout: PsmKey=%1, request=%2 ms, HRESULT=%3" />
        <string id="Event.PLM.IgnoreTimeoutDueToDebugging" value="_CompleteQuiesceHelper: Ignore timed-out PsmKey %1 as is being debugged" />
        <string id="Event.PLM.ApplicationResumeStart" value="ResumeHelper: Application resume(start), PsmKey=%1, reason=%2" />
        <string id="Event.PLM.ApplicationResumeStop" value="ResumeHelper: Application resume(stop), PsmKey=%1, reason=%2, HRESULT=%3" />
        <string id="Event.PLM.QueuedResumeUpdate" value="Resume reason updated for PsmKey=%1, reason=%2" />
        <string id="Event.PLM.PsmNotificationRpcTransition" value="RPC 0-&gt;1 transition detected for %1" />
        <string id="Event.PLM.RpcExemptionGranted" value="RPC exemption was granted for application %1. KernelRequest Value: %2. Runaway RPC: %3.  RPC Debounce %4" />
        <string id="Event.PLM.RpcDebounceReceived" value="RPC debounce received for package %1" />
        <string id="Event.PLM.ApplicationLaunch" value="Application %1 has successfully launched. HRESULT %2" />
        <string id="Event.PLM.TerminationBlockedByTC" value="Application %1 termination is blocked. PreserverProcessRequest = %2, TaskCompletionCategory = %3" />
        <string id="Event.PLM.PdcSystemActivation" value="PdcSystem activation (Activate = %1). Result = %2" />
        <string id="Event.PLM.EvaluateNetworkRequirements" value="NetworkAudio entries: %1, IsNetworkReferenced: %2" />
        <string id="Event.PLM.AppIsSharing" value="App %1 is Sharing" />
        <string id="Event.PLM.ShareGuidAdded" value="Share %1 has started in app %2" />
        <string id="Event.PLM.ShareGuidRemoved" value="Share %1 in app %2 has stopped" />
        <string id="Event.PLM.TerminateReasonUpdated" value="Queued termination reason updated for PsmKey=%1, reason=%2" />
        <string id="Event.PLM.ClearTerminateTypesForForgottenPackageStart" value="ClearTerminationTypesForForgottenPackage(start): PkgFamilyName=%1" />
        <string id="Event.PLM.ClearedTerminationTypeForForgottenPackage" value="Cleared termination type for forgotten app, Aumid=%1, HRESULT=%2" />
        <string id="Event.PLM.ClearTerminateTypesForForgottenPackageStop" value="ClearTerminationTypesForForgottenPackage(stop): PkgFamilyName=%1, HRESULT=%2" />
        <string id="Event.PLM.WritingTerminateRegKey" value="Writing to termination type reg key for Aumid=%1, type=%2, HRESULT=%3" />
        <string id="Event.PLM.ReadingTerminateRegKey" value="Reading termination type reg key for Aumid=%1, type=%2, HRESULT=%3" />
        <string id="Event.PLM.TimerExterndForResourceStarvation" value="_ExtendForResourceStarvation: PsmKey=%1, TimerType=%2, newRelativeExpirationTimeMs=%3, ElapsedMs=%4, CpuRunningMs=%5, CpuReadyMs=%6, IoNormalMs=%7" />
        <string id="Event.PLM.ForegroundResumeDelay" value="Foreground resume delay %1 milliseconds" />
        <string id="Event.PLM.VisibilitySuspendAllowed" value="Suspend allowed for %1 - Session not active" />
        <string id="Event.PLM.VisibilitySuspendDeniedWindow" value="Suspend denied due to a visible window or visibility debounce, PsmKey=%1" />
        <string id="Event.PLM.VisibilitySuspendDeniedUserRequest" value="Suspend denied for %1 - UserRequest non-zero" />
        <string id="Event.PLM.VisibilitySuspendDeniedFailure" value="Suspend denied for %1- failure %2" />
        <string id="Event.PLM.VisibilityWindowChanged" value="OnWindowChanged: Aumid=%1, Hwnd=%2, change=%3, fDeferredVisibility=%4, HRESULT=%5" />
        <string id="Event.PLM.SessionIdleDebounce" value="Starting Session Idle Debounce" />
        <string id="Event.PLM.SessionActive" value="Session is active" />
        <string id="Event.PLM.SessionIdle" value="Session is idle" />
        <string id="Event.PLM.GetPackageFullNameFromAppIdFailure" value="PlmGetPackageFullNameFromAppId, Aumid=%1, HRESULT=%2" />
        <string id="Event.PLM.SessionIdleStateChange" value="Session idle state change -- calling _ReevaluatePolicy" />
        <string id="Event.PLM.RegisterForActivationStateChangesError" value="RegisterForActivationStateChanges: Act:%1 App:%2 HRESULT is %3. Cookie is %4" />
        <string id="Event.PLM.UnregisterForActivationStateChanges" value="UnregisterForActivationStateChanges: Cookie is %1" />
        <string id="Event.PLM.CanAutoTerminate" value="Can Auto Terminate app %1 %2" />
        <string id="Event.PLM.TerminateApplicationBeforeActivationStart" value="TerminateApplicationBeforeActivation(start): Aumid=%1" />
        <string id="Event.PLM.TerminateApplicationBeforeActivationWaitForTerminate" value="TerminateApplicationBeforeActivation: wait for terminate, Aumid=%1, HRESULT=%2" />
        <string id="Event.PLM.TerminateApplicationBeforeActivationStop" value="TerminateApplicationBeforeActivation(stop): Aumid=%1, reason=%2, HRESULT=%3" />
        <string id="Event.PLM.SuspendPackagesAtLogOffStart" value="s_SuspendPackagesAtLogOff(start)" />
        <string id="Event.PLM.SuspendPackagesAtLogOffStop" value="s_SuspendPackagesAtLogOff(stop): HRESULT=%1" />
        <string id="Event.PLM.StateMgrOnApplicationStartedHalted" value="StateMgr: OnApplicationStarted still halted, PsmKey=%1" />
        <string id="Event.PLM.AddedTaskCompletion" value="Added Task Completion under %1 for application %2" />
        <string id="Event.PLM.RemovedTaskCompletion" value="Removed Task Completion under %1 for application %2" />
        <string id="Event.PLM.StateMgrIllegalStateChange" value="Illegal state change happened to App: %1" />
        <string id="Event.PLM.EnableDebugModeFailed" value="EnableDebugMode failed: %1" />
        <string id="Event.PLM.RoDisableDebuggingForPackageFailed" value="DisableDebugMode: RoDisableDebuggingForPackage failed with result %1" />
        <string id="Event.PLM.OnDebugModeDisabledFailed" value="DisableDebugMode: OnDebugModeDisabled failed with result %1" />
        <string id="Event.PLM.EnablingActivationTimeoutFailed" value="DisableDebugMode: Enabling activation timeout failed with result %1" />
        <string id="Event.PLM.DisableDebugModeFailed" value="DisableDebugMode failed: %1" />
        <string id="Event.PLM.SubmitWerReportProcessOpen" value="Couldn't open process: %1" />
        <string id="Event.PLM.WindowHangFail" value="PLM failed to process a hang for window %1 with error code %2" />
        <string id="Event.PLM.OutswapApplicationFailedToInvoke" value="PLM outswap application %1 failed to invoke with error code %2" />
        <string id="Event.PLM.CannotProcessAsNonLargeApp" value="PLM couldn't find any process for application %1, and handle it as non-large app" />
        <string id="Event.PLM.CannotDecideOnLargenessOfApp" value="PLM failed to decide application %1 is large or not with error code %2" />
        <string id="Event.PLM.SortEmptyCandidatesFailedToProcessApplication" value="PLM empty policy failed to process application %1 with error code %2.  Ignoring the application" />
        <string id="Event.PLM.FailedToEmptyApplication" value="PLM empty policy failed to empty application %1 with error code %2" />
        <string id="Event.PLM.FailedToTerminateApplicationEmptyPolicy" value="PLM failed to terminate application %1 as empty policy with error code %2" />
        <string id="Event.PLM.EmptyPolicyFailedToEnumerate" value="PLM empty policy failed to enumerate applications with error code %1" />
        <string id="Event.PLM.SkippingUnregisteredApplication" value="PLM termination policy skipping application %1, which is not registered with PLM" />
        <string id="Event.PLM.OnMemWatcherFailedToQueueWork" value="PLM memory policy failed to queue work with error code %1" />
        <string id="Event.PLM.GetPackageDataOnMissingPackage" value="GetPackageData called on a Package %1, which is not in the PLM Package Data Store" />
        <string id="Event.PLM.FailedToSetPriority" value="ERROR: Failed to set priority to %1, PsmKey=%2, NTSTATUS=%3" />
        <string id="Event.PLM.AllowServiceOfPackagesFailedToTerminate" value="AllowServiceOfPackages: Failed to terminate package=%1, type=%2, HRESULT=%3" />
        <string id="Event.PLM.CheckingServicePackagesFailedToEnumerateApp" value="_CheckServicingPackages: Failed to enumerate app, PsmKey=%1, HRESULT=%2" />
        <string id="Event.PLM.CheckingServicePackagesFailedToEnumeratePackage" value="_CheckServicingPackages: Failed to enumerate package, PkgFullName=%1, HRESULT=%2" />
        <string id="Event.PLM.GetImmersiveApplicationCountFailed" value="GetImmersiveApplicationCount failed with error code %1" />
        <string id="Event.PLM.ChangeApplicationStateBackgroundItemsForceTerminated" value="Background workitems were force terminated, PsmKey=%1" />
        <string id="Event.PLM.ChangeApplicationBiStateFailed" value="ChangeApplicationBiState failed: %1" />
        <string id="Event.PLM.ChangePackageStateBackgroundItemsForceTerminated" value="Background workitems for package %1 were force terminated" />
        <string id="Event.PLM.ChangePackageBiStateFailed" value="ChangePackageBiState failed: %1" />
        <string id="Event.PLM.ApplicationProcessesFailedToTrackProcess" value="ApplicationProcesses failed to track process ID %1 with error code %2" />
        <string id="Event.PLM.OnBeforeQuiescingFailedToAllocateMemory" value="OnBeforeQuiescing: Failed to allocate memory for PsmKey=%1, suspendTrigger=%2, HRESULT=%3" />
        <string id="Event.PLM.OnAfterQuiescingFailed" value="OnAfterQuiescing: Quiesce failed for PsmKey=%1, suspendTrigger=%2, HRESULT=%3" />
        <string id="Event.PLM.FailedToTerminateDueToTimeOut" value="ERROR: _CompleteQuiesceHelper: Failed to terminate timed-out PsmKey %1 with result %2" />
        <string id="Event.PLM.AppForgottenWhileQuiescing" value="ERROR: QuiesceHelper: App forgotten while still Quiescing, PsmKey=%1, suspendTrigger=%2" />
        <string id="Event.PLM.RpcWakeCounterQueryFailed" value="Failed to query the wake counters associated with application %1. NTSTATUS: %2" />
        <string id="Event.PLM.AllAppSyncHelperFailedToAllocateMemory" value="_AllAppSyncOperationHelper: Failed to allocate memory for PsmKey=%1, HRESULT=%2" />
        <string id="Event.PLM.MultiAppSyncHelperFailedOperationOnPsmKey" value="_MultiAppSyncOperationHelper: Failed to perform operation on PsmKey=%1, HRESULT=%2" />
        <string id="Event.PLM.MultiAppSyncHelperFailedWait" value="_MultiAppSyncOperationHelper: Failed in wait, HRESULT=%1" />
        <string id="Event.PLM.MultiPackageSyncHelperFailedEnumerate" value="_MultiPackageSyncOperationHelper: Failed to enumerate PsmKey=%1, HRESULT=%2" />
        <string id="Event.PLM.MultiPackageSyncHelperFailedToFindPackage" value="_MultiPackageSyncOperationHelper: Failed to find package in data store, PkgFullName=1%, HRESULT=%2" />
        <string id="Event.PLM.MultiPackageSyncHelperFailedToSuspendAndTerminateApps" value="Failed to suspend and terminate apps, cPsmKeys=%1" />
        <string id="Event.PLM.InitializeLaunchGraceFailed" value="Could not initialize an extended launch grace period for app %1 with HRESULT %2 -- falling back to normal launch grace" />
        <string id="Event.PLM.LaunchGraceCompletedWindowFailedToLaunch" value="App %1 failed to show a window after launch. Will attempt to terminate it now" />
        <string id="Event.PLM.TerminateApplicationBeforeActivationFailedToGetWindow" value="Failed to get a window for an app; assuming that the app's window is not hung, Aumid=%1, HRESULT=%2" />
        <string id="Event.PLM.FailedToQueryHiddenTimeVisibilityDebounce" value="Failed to query hidden time for visibility debounce for app %1 with error code %2" />
        <string id="Event.PLM.StartNewKeyDebounceError" value="_StartNewKeyDebounce: Error Result=%2, PsmKey=%1" />
        <string id="Event.PLM.StartTrackingNewAppFailed" value="StartTrackingNewApp failed with %1. The application launch is not protected and the app might potentially get suspended inappropriately" />
        <string id="Event.PLM.IsSuspendAllowedFailedToEnumerate" value="ERROR: Failed to enumerate exemption targets starting from PsmKey=%1" />
        <string id="Event.PLM.FailedToEnumerateExistingApplications" value="Failed to enumerate existing applications from PSM with error code %1" />
        <string id="Event.PLM.RegisterForPsmNotifcationsFailed" value="PsmRegisterApplicationNotification failed for application %1 with status %2.  PLM's cache says that the application's registration is: %3" />
        <string id="Event.PLM.FailedToEnumerateForceTerminationTargets" value="ERROR: Failed to enumerate force termination targets starting from PsmKey=%1, HRESULT=%2" />
        <string id="Event.PLM.OnApplicationAddedFailed" value="Application %1 failed to be added in PLM Data Store" />
        <string id="Event.PLM.QueueStateChangeNotificationStringInitializationFail" value="Failed to initialize string to send app notification %1 state %2" />
        <string id="Event.PLM.QueueStateChangeNotificationFailedToInitializeStringToRemoveApp" value="Failed to initialize string to remove app %1" />
        <string id="Event.PLM.FailedToAddTCEntryMissingAudioCapability" value="Failed to add %1 for application %2. The application doesn't have BTC_AUDIO background task capability" />
        <string id="Event.PLM.FailedToInitializeCmApi" value="Failed to initialize CmApi" />
        <string id="Event.PLM.TaskComplementionManagerAddFailure" value="Task completion manager failed to add %1 to its sharing cache with error code %2" />
        <string id="Event.PLM.FailedToClearTerminationType" value="ClearTerminationTypesForForgottenPackage: Failed to clear termination type for app, Aumid=%1, HRESULT=%2" />
        <string id="Event.PLM.FailedToScheduleVisibilityDebounce" value="ERROR: Failed to schedule the visibility debounce, PsmKey=%1, HRESULT=%2" />
        <string id="Event.PLM.OnWindowChangedFailedToQueueThread" value="OnWindowChanged ERROR: Failed to queue thread for Aumid=%1, Hwnd=%2, change=%3, HRESULT=%4" />
        <string id="Event.PLM.FailedToScheduledDefferedTimer" value="ERROR: Failed to schedule deferred visibility timer, PsmKey=%1, HRESULT=%2" />
        <string id="Event.PLM.WaitOnBiNotifyNewSession" value="WaitOnBiNotifyNewSession HRBiNotifyNewSession=%1 HRBiNotifyNewUser=%2" />
        <string id="Event.PLM.RegisterKernelNotifications" value="RegisterKernelNotifications HRESULT=%1" />
        <string id="Event.PLM.TCCompleteInitialization" value="TCExemptionManager CompleteInitialization HRESULT=%1" />
        <string id="Event.PLM.PlmActivationMgrCompleteInitialization" value="PlmActivationManager CompleteInitialization HRESULT=%1" />
        <string id="Event.PLM.PlmDiagnosticsCompleteInitialization" value="Plm CSDiagnostics CompleteInitialization HRESULT=%1" />
        <string id="Event.PLM.PlmLogOffLogOnRegistration" value="Plm LogOff/LogOn Registration HRESULT=%1" />
        <string id="Event.BM.QueueEvaluate" value="BM: Queued evaluate WorkItem: %3 EventType: %5 Action: %6 PsmKey: %1 HostJobType: %2 EntryPoint: %4" />
        <string id="Event.BM.EvaluateReturned" value="BM: Evaluate returned WorkItem: %3 EventType: %5 Action: %6 PsmKey: %1 HostJobType: %2 EntryPoint: %4" />
        <string id="Event.BM.TaskActivated" value="BM: TaskActivated WorkItem: %1 Instance: %2" />
        <string id="Event.BM.TaskCompleted" value="BM: TaskCompleted WorkItem: %1 Instance: %2" />
        <string id="Event.BM.TaskCanceled" value="BM: TaskCanceled WorkItem: %1 Instance: %2" />
        <string id="Event.BM.PolicyEvaluateReturned" value="BM: Policy evaluate returned WorkItem: %3 EventType: %4 Action: %5 WallClockLimit: %6 PsmKey: %1 HostJobType: %2" />
        <string id="Event.BM.TaskActivating" value="BM: TaskActivating WorkItem: %1 Instance: %2" />
        <string id="Event.BM.EvaluateWallClockReturned" value="BM: Evaluate returned WorkItem: %3 EventType: %5 WallClockLimit: %6 PsmKey: %1 HostJobType: %2 EntryPoint: %4" />
        <string id="Event.BM.TaskWallClockActive" value="BM: TaskWallClockActive WorkItem: %1 Instance: %2" />
        <string id="Event.BM.TaskWallClockExpired" value="BM: TaskWallClockExpired WorkItem: %1 Instance: %2" />
        <string id="Event.BM.FunctionEnter" value="BM: Enter %1" />
        <string id="Event.BM.FunctionExitHR" value="BM: Exit %1, HR=%2" />
        <string id="Event.BM.TerminateHost" value="BM: TerminateHost WorkItem: %1" />
        <string id="Event.BM.ResourceSetInvalidated" value="BM: ResourceSet invalidated for WorkItem: %1 Instance: %2.  This usually means the host has crashed before a ResourceSet could be applied." />
        <string id="Event.BM.OnAcquiredCallbackIdInvalid" value="BM: OnAcquired ignoring invalid CallbackId (%1)." />
        <string id="Event.BM.TryAcquireResourceSet_V0" value="BM: TryAcquireResourceSet returning HR='%4' PsmKey='%1'; WorkItemId='%2;' CallbackId='%3'." />
        <string id="Event.BM.TryAcquireResourceSet" value="BM: TryAcquireResourceSet returning HR='%4' PsmKey='%1' WorkItemId='%2;' CallbackId='%3' HostId='%5' ResourceSetId='%6'." />
        <string id="Event.BM.TryAcquireHostResourceSet_V0" value="BM: TryAcquireHostResourceSet returning HR='%2' PsmKey='%1'." />
        <string id="Event.BM.TryAcquireHostResourceSet" value="BM: TryAcquireHostResourceSet returning HR='%2' PsmKey='%1' HostId='%3' ResourceSetId='%4'." />
        <string id="Event.BM.OnApplicationStateChanged" value="BM: OnApplicationStateChanged returning State='%2' PsmKey='%1' HR='%3'." />
        <string id="Event.BM.OnAcquired" value="BM: OnAcquired received for CallbackId: %1" />
        <string id="Event.BM.OnAcquiredIgnoredRequest" value="BM: OnAcquired request ignored for CallbackId: %1" />
        <string id="Event.BM.ActivateDeferredWorkItem" value="BM: ActivateDeferredWorkItem WorkItem: %1" />
        <string id="Event.BM.ActivateDeferredWorkItemDiscarded" value="BM: ActivateDeferredWorkItem discarded WorkItem: %1 because of Status: %2" />
        <string id="Event.BM.FunctionEnterWI" value="BM: Enter %1 WorkItem: %2" />
        <string id="Event.BM.FunctionEnterWITI" value="BM: Enter %1 WorkItem: %2 TaskInstanceId: %3" />
        <string id="Event.BM.FunctionExit" value="BM: Exit %1" />
        <string id="Event.BM.SettingsLoadFailure" value="BM: Failed to load settings for event %1." />
        <string id="Event.BM.SettingsLoadFailureHresult" value="BM: Failed to load settings for event %1 with error %2." />
        <string id="Event.BM.PolicyLoadFailure" value="BM: Failed to load policy for CLSID: %1, for EventType %2 with error %3." />
        <string id="Event.BM.PoliciesLoadFailure" value="BM: Failed to load the policies with error %1." />
        <string id="Event.BM.PolicyEvaluateFailed" value="BM: Policy returned HRESULT: %3 for WorkItem: %2 PsmKey: %1." />
        <string id="Event.BM.CancelForEnergyUsage" value="BM: Canceling task for high energy usage PsmKey: %1 WorkItem: %2." />
        <string id="Event.BM.EnergyUsageWhitelisted" value="BM: Ignoring cancelation request (whitelisted) for high energy usage PsmKey: %1 WorkItem: %2." />
        <string id="Event.BM.NotifyNewSession" value="BM: Session(%1) started, session initialization returned %2." />
        <string id="Event.BM.NotifyEndSession" value="BM: Session(%1) ended." />
        <string id="Event.BM.NotifyExistingSession" value="BM: A Session object for Session(%1) already exists." />
        <string id="Event.BM.ActivationIgnoredNoSession" value="BM: Activation ignored due to no Session(%1): PsmKey: %2 WorkItem: %3." />
        <string id="Event.BM.ResourceAcquisitionError" value="BM: Failed to acquire a ResourceSet for WorkItem: %1 with error %2." />
        <string id="Event.BM.DebugActivation" value="BM: WorkItem: %1 is being debugged. Setting wallclock limit to 0." />
        <string id="Event.BM.EvaluateActivationActionReturn" value="BM: EvaluateActivationAction for WorkItem: %1 HRESULT: %2." />
        <string id="Event.BM.ExemptedTask" value="BM: Skipped Buffering Exempted task with SQMId: %1 PsmKey: %2." />
        <string id="Event.BM.DroppedExemptedTask" value="BM: Dropped Exempted task that came before SessionReady with SQMId: %1 PsmKey: %2." />
        <string id="Event.BM.ActivationIgnoredNoUser" value="BM: Activation ignored due to no User(%1): PsmKey: %2 WorkItem: %3." />
        <string id="Event.BM.OnUserLogon" value="BM: User Logon Session: %1 User: %2 HRESULT: %3." />
        <string id="Event.BM.OnUserLogoff" value="BM: User Logoff Session: %1 User: %2 HRESULT: %3." />
        <string id="Event.BM.OnCancelPendingWorkItem" value="BM: Pending activation discarded for work item (%1)." />
        <string id="Event.BM.IgnoredEvaluationState" value="BM: Flushing ignored EvaluationState: %1 for WorkItem: %2." />
        <string id="Event.BM.FlushDeferredActivations" value="BM: Flushing buffered activations." />
        <string id="Event.BM.GlobalPolicyEvaluateReturned" value="BM: Global Policy evaluate returned WorkItem: %3 EventType: %4 Action: %5 WallClockLimit: %6 PsmKey: %1 HostJobType: %2" />
        <string id="Event.BM.ShellSuspendStateChanged" value="BM: ShellSuspendState changed, oldState: %1 newState: %2" />
        <string id="Event.BM.DPLKeyStateChanged" value="BM: DPLKeyState changed, oldState: %1 newState: %2" />
        <string id="Event.BM.DPLCancelWorkItem" value="BM: Canceling WorkItem: %1 due to DPL policy." />
        <string id="Event.BM.DPLDropWorkItem" value="BM: Dropping activation for WorkItem: %1 due to DPL policy." />
        <string id="Event.BM.ShellReadyBuffered" value="BM: Buffered activation for WorkItem: %1 due to Shell Ready policy." />
        <string id="Event.BM.ShellReadyExempted" value="BM: Exempted activation for WorkItem: %1 due to Shell Ready policy." />
        <string id="Event.BM.ThermalThrottlingBuffered" value="BM: Buffered activation for WorkItem: %1 due to Thermal Throttling policy." />
        <string id="PLM.StartTrackingNewApp" value="PLM: Start tracking new app user %1 app %2, contract %3, hr = %4" />
        <string id="PLM.StartLaunchGrace" value="PLM: Start launch grace for user %1 app %2, hr = %3" />
        <string id="PLM.ApplicationLaunched" value="PLM: Application launched %1 in app %2, hr = %3" />
        <string id="PLM.SetWindowId" value="PLM: Set Window Id for user %1 app %2 wnd %3" />
        <string id="PLM.EvaluateLaunchGraceCompleted" value="PLM: EvaluateLaunchGraceCompleted for user %1 app %2" />
        <string id="PLM.ApplicationResume" value="PLM: Application resume %1 in app %2, hr = %3" />
        <string id="PLM.EvaluateSuspendAndTerminate" value="PLM: Suspend-Terminate(%3) task %1 in app %2" />
        <string id="PLM.EvaluateSuspendAndTerminateAllow" value="PLM: Suspend-Terminate suspend of task %1 in app %2 exemption %3" />
        <string id="PLM.EvaluateSuspendAndTerminateTerminate" value="PLM: Suspend-Terminate auto terminate(%3) task %1 in app %2" />
        <string id="PLM.EvaluateSuspendAndTerminateResult" value="PLM: Suspend-Terminate task %1 in app %2, hr %3" />
        <string id="PLM.EvaluateSuspendAndTerminateDehydrating" value="PLM: Suspend-Terminate task %1 while dehydrating" />
        <string id="PLM.EvaluateSuspendAndTerminateApplication" value="PLM: Suspend-Terminate(%2) app %1 exemption %3, hr %4" />
        <string id="PLM.EvaluateAndHalt" value="PLM: Halt app %1, hr %2" />
        <string id="PLM.ResumeActivation" value="PLM: Task resume %1 in app %2" />
        <string id="PLM.CancelActivation" value="PLM: Task cancel %1 in app %2" />
        <string id="PLM.RemoveActivation" value="PLM: Task remove %1 in app %2" />
        <string id="PLM.QueueAppNotification" value="PLM: Queue Application State Change Notification for user %1 app %2 state %3" />
        <string id="PLM.QueueActNotification" value="PLM: Queue Activation State Change Notification %1 state %2" />
        <string id="PLM.SendAppNotification" value="PLM: Send Application State Change Notification for user %1 app %2 state %3" />
        <string id="PLM.SendActNotification" value="PLM: Send Activation State Change Notification %1 state %2" />
        <string id="PLM.BeforeActivate" value="PLM: Before Activate task %1 for user %2 in app %3, contract %4, hostid %5, hr = %6" />
        <string id="PLM.AfterActivate" value="PLM: After Activate task %1 with result %2, hr = %3" />
        <string id="PLM.SetForeground" value="PLM: ApplicationLayer=%1 Set Foreground new task %2, prev task %3" />
        <string id="PLM.AddActivation" value="PLM: Add task %1 to user %2 and app %3, hr = %4" />
        <string id="PLM.AddUser" value="PLM: Add user %1 sid %2 to data store, hr = %3" />
        <string id="PLM.CreateApplication" value="PLM: Create app for user %1, %2, new [app(%3) pkg(%4)], hr = %5" />
        <string id="PLM.AddToPackageAndStore" value="PLM: Add task %1 to user %2 and app %3, new [app(%4) pkg(%5)], hr = %6" />
        <string id="PLM.RemoveActivationFromStore" value="PLM: Remove task %1, was found(%2)" />
        <string id="PLM.RemoveApplicationIfEmpty" value="PLM: Remove app if empty from user %1, %2, hr = %3" />
        <string id="PLM.RemovePackageIfEmpty" value="PLM: Remove pkg if empty from user %1, %2, hr = %3" />
        <string id="PLM.ApplicationForegroundChange" value="PLM: Application foreground change %1 is now %2" />
        <string id="PLM.TimerStarted" value="PLM: Timer Started duration %1ms, hr %2" />
        <string id="PLM.TimerExpired" value="PLM: Timer Expired duration %1ms, hr %2" />
        <string id="PLM.AbortActivation" value="PLM: Abort task %1 reason %2, dump(%3)" />
        <string id="PLM.AbortApplication" value="PLM: Abort app user %1 app %2 reason %3, dump(%4)" />
        <string id="PLM.RehydrateActivation" value="PLM: Task rehydrate %1 in app %2 contract %3" />
        <string id="PLM.StartRPCSuspensionTimeout" value="PLM: Start RPC suspension timer PSMKey=%1 WakeCounters=%2, hr = %3" />
        <string id="PLM.CancelRPCSuspensionTimeout" value="PLM: Cancel RPC suspension timer PSMKey=%1 app state=%2" />
        <string id="PLM.TerminateExpiredRPCSuspensionTimeout" value="PLM: Terminate application PSMKey=%1 due to expired RPC suspension timeout" />
        <string id="PLM.ExtendRPCSuspensionTimeout" value="PLM: Extending RPC suspension timer PSMKey=%1" />
        <string id="PLM.IsTerminateAllowedExemption" value="PLM: Application %1 cannot be terminated due to %2 exemption" />
        <string id="PLM.IsTerminateAllowed" value="PLM: Application %1 can be terminated" />
        <string id="PLM.EvaluateAndTerminateExemption" value="PLM: EvaluateAndTerminateApplication %1 cannot be terminated due to %2" />
        <string id="PLM.EvaluateAndTerminate" value="PLM: EvaluateAndTerminateApplication %1, terminate hr = %2" />
        <string id="PLM.TerminateDebounceState" value="PLM: Terminate debounce app %1 current state %2 ultimate state %3" />
        <string id="PLM.TerminateDebounce" value="PLM: Terminate debounce app %1, hr = %2" />
        <string id="PLM.TerminateReasonCleared" value="PLM: Terminate reason was cleared" />
        <string id="PLM.AcquireNetworkRefFailure" value="PLM: Acquire network reference failed CM_RESULT=%1" />
        <string id="PLM.ReleaseNetworkRefFailure" value="PLM: Release network reference failed CM_RESULT=%1" />
        <string id="PLM.GenerateWatsonReportIgnored" value="PLM: Watson dump NOT generated for user %1 app %2, process count %3" />
        <string id="PLM.GenerateWatsonReport" value="PLM: Watson dump start for user %1 app %2 reason %3 description %4, process %5 (%6)" />
        <string id="PLM.GenerateWatsonReportAppInfo" value="PLM: Watson dump information for user %1 app %2 product Id %3 title %4 version %5" />
        <string id="PLM.GenerateWatsonReportResult" value="PLM: Watson dump end for user %1 app %2, hr %3" />
        <string id="PLM.GenerateWatsonReportAddDump" value="PLM: Add Watson dump to user %1 app %2 process %3, hr %4" />
        <string id="PLM.GenerateWatsonReportStoreInfoFailed" value="PLM: Failed to add Watson process info for process %1 user %2 app %3" />
        <string id="PLM.WatsonStatusChange" value="PLM: Watson dump status changed pids(%1)" />
        <string id="PLM.WatsonStatusChangeAdd" value="PLM: Watson dump status changed, add process %1 user %2 app %3" />
        <string id="PLM.WatsonStatusChangeRemove" value="PLM: Watson dump status changed, remove process %1 user %2 app %3" />
        <string id="PLM.WatsonStatusChangeUnknown" value="PLM: Watson dump status changed, unknown process %1 app %2" />
        <string id="PLM.WatsonAddRemoveErrorReportTC" value="PLM: Watson add/remove(%2) error report task completion to process %1 (signaled %4), hr %3" />
        <string id="PLM.WatsonAlreadyInProgress" value="PLM: Watson in progress for PSMKey %1, waiting..." />
        <string id="PLM.WatsonInProgressFinished" value="PLM: Watson in progress finished for PSMKey %1" />
        <string id="PLM.TerminatePreexistingApp" value="PLM: Terminating reexisting app due to sihost restart with PSMKey %1, status %2" />
        <string id="PLM.TerminatePreexistingApps" value="PLM: Terminating preexisting applications on sihost startup" />
        <string id="PLM.SetPauseOnLock" value="PLM: Set Pause On Lock for user %1 app %2 value %3" />
        <string id="Maps.PLM.ApplicationState.Resumed" value="Resumed" />
        <string id="Maps.PLM.ApplicationState.Quiescing" value="Quiescing" />
        <string id="Maps.PLM.ApplicationState.Quiesced" value="Quiesced" />
        <string id="Maps.PLM.ApplicationState.Frozen" value="Frozen" />
        <string id="Maps.PLM.ApplicationState.Dehydrated" value="Dehydrated" />
        <string id="Maps.PLM.ApplicationState.Terminated" value="Terminated" />
        <string id="Maps.PLM.STATE_CHANGE.Resumed" value="Resumed" />
        <string id="Maps.PLM.STATE_CHANGE.Suspending" value="Suspending" />
        <string id="Maps.PLM.STATE_CHANGE.Suspended" value="Suspended" />
        <string id="Maps.PLM.STATE_CHANGE.Terminated" value="Terminated" />
        <string id="Maps.PLM.ActivationState.Resumed" value="Resumed" />
        <string id="Maps.PLM.ActivationState.Quiescing" value="Pausing" />
        <string id="Maps.PLM.ActivationState.Quiesced" value="Paused" />
        <string id="Maps.PLM.ActivationState.Dehydrated" value="Dehydrated" />
        <string id="Maps.PLM.ActivationState.Terminated" value="Completed" />
        <string id="Maps.PLM.ActivationExemption.None" value="none" />
        <string id="Maps.PLM.ActivationExemption.Launch" value="launch" />
        <string id="Maps.PLM.ActivationExemption.Debug" value="debug" />
        <string id="Maps.PLM.ActivationExemption.TaskCompletion" value="task completion" />
        <string id="Maps.PLM.ActivationExemption.AppDependency" value="dependency" />
        <string id="Maps.PLM.ActivationExemption.MultiView" value="multi-view" />
        <string id="Maps.PSM.HostJobType.NotBackground" value="NotBackground" />
        <string id="Maps.PSM.HostJobType.MixedHost" value="MixedHost" />
        <string id="Maps.PSM.HostJobType.PureHost" value="PureHost" />
        <string id="Maps.PSM.HostJobType.SystemHost" value="SystemHost" />
        <string id="Maps.PSM.HostJobType.InvalidType" value="InvalidType" />
        <string id="Maps.PSM.HostJobType.PolicyJob" value="PolicyJob" />
        <string id="Maps.BI.ActivationAction.Permitted" value="Permitted" />
        <string id="Maps.BI.ActivationAction.Buffered" value="Buffered" />
        <string id="Maps.BI.ActivationAction.Dropped" value="Dropped" />
        <string id="Maps.BI.ActivationAction.InvalidType" value="InvalidType" />
        <string id="Event.AM.FailedToReadActivationPlugins" value="AM: Failed to read activation plugin registry with error code %1." />
        <string id="Event.AM.FailedToCreateActivationPlugin" value="AM: Failed to CoCreate activation plugin with error code %1 and CLSID %2." />
        <string id="Event.AM.CreatedActivationPlugin" value="AM: Successfully created activation plugin with CLSID %1 from the registry." />
        <string id="Event.AM.FailedToRegisterPackageIfNeeded" value="AM: Failed to register package if needed with error %1." />
        <string id="Event.AM.FailedDuringRegisterPackageByFamilyNameAsync" value="AM: Failed trying to register package by family name async during activation with error %1." />
        <string id="Event.AM.FailedDuringWaitForDeploymentOperation" value="AM: Failed trying to wait for the completion of the register package by family async during activation with error %1." />
        <string id="Event.BAM.AddPackage" value="BAM: Added Package: %1 UserSid: %2." />
        <string id="Event.BAM.RemovePackage" value="BAM: Removed Package: %1 UserSid: %2." />
        <string id="Event.BAM.AddApplication" value="BAM: Added Application: %1 UserSid: %2." />
        <string id="Event.BAM.RemoveApplication" value="BAM: Removed Application: %1 UserSid: %2." />
        <string id="Event.BAM.AccessStateChanged" value="BAM: AccessState Changed for Package: %1 OldState: %2 NewState: %3 UserSid: %4." />
        <string id="Event.BAM.RequestAccessAsync" value="BAM: BackgroundExecutionManager::RequestAccessAsync called for Application: %1 Returned_AccessState: %2." />
        <string id="Event.BAM.GetStatus" value="BAM: BackgroundExecutionManager::GetStatus called for Application: %1 Returned_AccessState: %2." />
        <string id="Event.BAM.RemoveAccess" value="BAM: BackgroundExecutionManager::RemoveAccess called for Application: %1." />
        <string id="Event.BAM.SanitizePackage" value="BAM: Sanitizing data for package: %1 HRESULT: %2." />
        <string id="Event.BAM.SanitizePackageReregister" value="BAM: ReregisteredPackage called during _SanitizeStore for package: %1 HRESULT: %2." />
        <string id="Event.BAM.SanitizePackageUnregister" value="BAM: UnregisterPackage called during _SanitizeStore for package: %1 HRESULT: %2." />
        <string id="Event.BAM.RequestAccessKindAsync" value="BAM: BackgroundExecutionManager::RequestAccessKindAsync called for Application: %1 Requested_AccessKind: %2 Returned: %3." />
        <string id="Event.ODB.LaunchTask" value="ODB: LaunchTask - UserSid: %1 SessionId: %2 PackageFullName: %3 EntryPoint: %4 WorkItemId: %5 HRESULT: %6." />
        <string id="Event.ODB.CancelTask" value="ODB: CancelTask - UserSid: %1 SessionId: %2 WorkItemId: %3 RudeTerminate: %4 CancellationReason: %5 HRESULT: %6." />
        <string id="Event.ODB.BeforeTaskActivated" value="ODB: BeforeTaskActivated - WorkItemId: %1 PsmKey: %2 HostJobType: %3 HRESULT: %4." />
        <string id="Event.ODB.TaskActivated" value="ODB: TaskActivated - WorkItemId: %1 TaskInstanceId: %2 PsmKey: %3 HRESULT: %4." />
        <string id="Event.ODB.TaskCompleted" value="ODB: TaskCompleted - WorkItemId: %1 TaskInstanceId: %2 HRESULT: %3." />
        <string id="Event.ODB.TaskCanceled" value="ODB: TaskCanceled - WorkItemId: %1 TaskInstanceId: %2 HRESULT: %3." />
        <string id="Event.ODB.WaitForWnfStateQuiescentTimeout" value="ODB: Timeout in WaitForWnfStateQuiescentTimeout." />
        <string id="Event.ODB.CancelBackgroundTaskWithWnf" value="ODB: CancelBackgroundTaskWithWnf WorkItemId: %1." />
        <string id="Event.VOIP.NotifyVoipActiveCall" value="VOIP: NotifyVoipActiveCall called for PID:%1 PSMKey:{%2} HRESULT:%3." />
        <string id="Event.VOIP.LaunchVoipRtcTask" value="VOIP: LaunchVoipRtcTask called for PID:%1 PSMKey:{%2} with TaskEntryPoint:{%3} and WNFStateName:{%4} HRESULT:%5." />
        <string id="Event.VOIP.NotifyVoipActivityCompleted" value="VOIP: NotifyVoipActivityCompleted called for PID:%1 PSMKey:{%2} HRESULT:%3." />
        <string id="Event.VOIP.HoldActiveCall" value="VOIP: HoldActiveCall called for PID:%1 PSMKey:{%2} HRESULT:%3." />
        <string id="Event.VOIP.UnholdActiveCall" value="VOIP: UnholdActiveCall called for PID:%1 PSMKey:{%2} HRESULT:%3." />
        <string id="Event.VOIP.NotifyIncomingCallDialogDisplayed" value="VOIP: NotifyIncomingCallDialogDisplayed called for PID:%1 PSMKey:{%2} HRESULT:%3." />
        <string id="Event.VOIP.NotifyIncomingCallDialogDismissed" value="VOIP: NotifyIncomingCallDialogDismissed called for PID:%1 PSMKey:{%2} HRESULT:%3." />
        <string id="Event.VOIP.CallActive" value="VOIP: CallActive called for WorkItemId:{%1} PSMKey:{%2} HRESULT:%3 {InActiveCall:%4, HasRTCTask:%5 OnHold:%6 TaskCompletionApplied:%7 InForeground:%8}." />
        <string id="Event.VOIP.AppLaunchVoipRtcTask" value="VOIP: AppLaunchVoipRtcTask called for WorkItemId:{%1} PSMKey:{%2} HRESULT:%3 {InActiveCall:%4, HasRTCTask:%5 OnHold:%6 TaskCompletionApplied:%7 InForeground:%8}." />
        <string id="Event.VOIP.OnVoipActivityCompleted" value="VOIP: OnVoipActivityCompleted called for WorkItemId:{%1} PSMKey:{%2} HRESULT:%3 {InActiveCall:%4, HasRTCTask:%5 OnHold:%6 TaskCompletionApplied:%7 InForeground:%8}." />
        <string id="Event.VOIP.AppHoldActiveCall" value="VOIP: AppHoldActiveCall called for WorkItemId:{%1} PSMKey:{%2} HRESULT:%3 {InActiveCall:%4, HasRTCTask:%5 OnHold:%6 TaskCompletionApplied:%7 InForeground:%8}." />
        <string id="Event.VOIP.AppUnholdActiveCall" value="VOIP: AppUnholdActiveCall called for WorkItemId:{%1} PSMKey:{%2} HRESULT:%3 {InActiveCall:%4, HasRTCTask:%5 OnHold:%6 TaskCompletionApplied:%7 InForeground:%8}." />
        <string id="Event.VOIP.OnIncomingCallDialogDisplayed" value="VOIP: OnIncomingCallDialogDisplayed called for WorkItemId:{%1} PSMKey:{%2} HRESULT:%3 {InActiveCall:%4, HasRTCTask:%5 OnHold:%6 TaskCompletionApplied:%7 InForeground:%8}." />
        <string id="Event.VOIP.OnIncomingCallDialogDismissed" value="VOIP: OnIncomingCallDialogDismissed called for WorkItemId:{%1} PSMKey:{%2} HRESULT:%3 {InActiveCall:%4, HasRTCTask:%5 OnHold:%6 TaskCompletionApplied:%7 InForeground:%8}." />
        <string id="Event.VOIP.AppDetermineAndApplyBestResourceSet" value="VOIP: AppDetermineAndApplyBestResourceSet called for WorkItemId:{%1} PSMKey:{%2} HRESULT:%3." />
        <string id="Event.VOIP.PolicyEvaluateAction" value="VOIP: PolicyEvaluateAction called for WorkItemId:{%1} PSMKey:{%2} ActivationAction:%3 HRESULT:%4." />
        <string id="Event.VOIP.PolicyTaskActivated" value="VOIP: PolicyTaskActivated called for WorkItemId:{%1} PSMKey:{%2} HRESULT:%3." />
        <string id="Event.VOIP.PolicyTaskCompleted" value="VOIP: PolicyTaskCompleted called for WorkItemId:{%1} PSMKey:{%2} HRESULT:%3." />
        <string id="Event.VOIP.PolicyTaskCanceled" value="VOIP: PolicyTaskCanceled called for WorkItemId:{%1} PSMKey:{%2} HRESULT:%3." />
        <string id="Event.VOIP.PolicyTaskAborted" value="VOIP: PolicyTaskAborted called for WorkItemId:{%1} PSMKey:{%2} HRESULT:%3." />
        <string id="Event.VOIP.OnForegroundApplicationChanged" value="VOIP: OnForegroundApplicationChanged called for WorkItemId:{%1} PSMKey:{%2} HRESULT:%3 {InActiveCall:%4, HasRTCTask:%5 OnHold:%6 TaskCompletionApplied:%7 InForeground:%8}." />
        <string id="Event.VOIP.AppOnTaskActivated" value="VOIP: AppOnTaskActivated called for WorkItemId:{%1} PSMKey:{%2} HRESULT:%3 {InActiveCall:%4, HasRTCTask:%5 OnHold:%6 TaskCompletionApplied:%7 InForeground:%8}." />
        <string id="Event.VOIP.AppOnTaskCompleted" value="VOIP: AppOnTaskCompleted called for WorkItemId:{%1} PSMKey:{%2} HRESULT:%3 {InActiveCall:%4, HasRTCTask:%5 OnHold:%6 TaskCompletionApplied:%7 InForeground:%8}." />
        <string id="Event.VOIP.AppCancelVoipRtcTask" value="VOIP: AppCancelVoipRtcTask called for WorkItemId:{%1} PSMKey:{%2} HRESULT:%3 {InActiveCall:%4, HasRTCTask:%5 OnHold:%6 TaskCompletionApplied:%7 InForeground:%8}." />
        <string id="Event.VOIP.CancelVoipRtcTask" value="VOIP: CancelVoipRtcTask called for PID:%1 PSMKey:{%2} HRESULT:%3." />
        <string id="Format.VoIP_FGProcessChange" value="VoIP: Foreground state for product %1 has changed. Is in foreground = %2" />
        <string id="Format.VoIP_CancelCommunicationAgent" value="VoIP: Canceling communication agent for product %1" />
        <string id="Format.VoIP_TimerExpiredKeepAlive" value="VoIP: Timer expired for keep-alive agent of product %1" />
        <string id="Format.VoIP_TimerExpiredIncomingCall" value="VoIP: Timer expired for incoming call agent of product %1" />
        <string id="Format.VoIP_LaunchAgent" value="VoIP: Launched agent instance with id %2 and URI %1" />
        <string id="Format.VoIP_CancelAgent" value="VoIP: Canceled agent instance with id %1" />
        <string id="Format.VoIP_SetActiveCallResourceSet" value="VoIP: Set active call resource set" />
        <string id="Format.VoIP_SetCommunicationAgentResourceSet" value="VoIP: Set communication agent resource set" />
        <string id="Format.VoIP_SetWorkerResourceSet" value="VoIP: Set VoIP Worker resource set" />
        <string id="Format.VoIP_SetTerminalResourceSet" value="VoIP: Applied terminal resource set" />
        <string id="Format.VoIP_LastTaskReleaseResourceSet" value="VoIP: Last task instance completed. Releasing the task host ..." />
        <string id="Format.VoIP_LaunchActiveCallAgent" value="VoIP: Launching active call agent instance for product %1" />
        <string id="Format.VoIP_CancelActiveCallAgent" value="VoIP: Canceling active call agent for product %1" />
        <string id="Format.VoIP_ActiveCallOnHold" value="VoIP: Putting an active call on hold for product %1" />
        <string id="Format.VoIP_ActiveCallUnhold" value="VoIP: Taking an active call off hold for product %1" />
        <string id="Format.VoIP_IncomingCallDialogDisplayed" value="VoIP: Incoming call dialog has been displayed for product %1" />
        <string id="Format.VoIP_IncomingCallDialogDismissed" value="VoIP: Incoming call dialog has been dismissed for product %1" />
        <string id="Format.VoIP_LaunchCommunicationAgent" value="VoIP: Launch communication agent request received from process %1 for product %2" />
        <string id="Format.VoIP_ReadSettings" value="VoIP: Read settings. Keep alive timout = %1 ms, Max agent request queue = %2, Incoming call grace period = %3 ms, Incoming call dismissed grace period = %4 ms" />
        <string id="Format.VoIP_AgentLaunchRequest" value="VoIP: Received request to launch agent type %2 for product %1" />
        <string id="Format.VoIP_OnTaskInstanceCompleted" value="VoIP: Task instance %2 of product %1 completed" />
        <string id="Format.VoIP_ProcessAgentRequest" value="VoIP: Processing request to launch agent type %2 for product %1" />
        <string id="Format.VoIP_AddVoIPObject" value="VoIP: Added VoIPApp object to map for product %1" />
        <string id="Format.VoIP_RemoveVoIPObject" value="VoIP: Removed VoIPApp object from map for product %1" />
        <string id="Format.VoIP_GetVoIPObject" value="VoIP: Getting VoIPApp object from map for product %1" />
        <string id="Format.VoIP_WnfStatePublishError" value="VoIP: Publishing WNF_DEVP_VOIP_ACTIVE_CALL_STATE_CHANGE failed with status %1" />
        <string id="Format.VoIP_WiFiStatusSubscriptionError" value="VoIP: Subscribing to the WNF_WIFI_CONNECTION_STATUS event failed with status %1" />
        <string id="Format.VoIP_WiFiStatusSubscriptionState" value="VoIP: Subscribed to WNF_WIFI_CONNECTION_STATUS? %1" />
        <string id="Format.VoIP_WiFiConnectionActive" value="VoIP: WiFi connection status active/dormat? %1 (hConnection = %2)" />
        <string id="Format.VoIP_WiFiStatusQueryError" value="VoIP: RtlQueryWnfStateData failed trying to query the value of WNF_WIFI_CONNECTION_STATUS. NTSTATUS = %1" />
        <string id="Format.VoIP_UpdateWiFiStateHelperThreadError" value="VoIP: Could not spin up worker for UpdateWiFiStateHelper. HR =%1" />
        <string id="Format.VoIP_CallState" value="VoIP: In active call? %1" />
        <string id="Format.VoIP_SetWiFiActiveError" value="VoIP: CmUtilSetWiFiActive was not successful. This could be because WiFi disconnected by the time we were notified of the connection." />
        <string id="Format.VoIP_WiFiConnectionState" value="VoIP: WiFi connection status is %1." />
        <string id="Format.VoIP_ErrorOccurred" value="VoIP: An error occurred. Hr = %1" />
        <string id="Format.VoIP_AbortTask" value="VoIP: AbortTask: TaskInstanceID = %1, HR = %2" />
        <string id="Format.VoIP_PhoneServiceRestart" value="VoIP: PhoneServiceRestart: HR = %1" />
        <string id="Format.VoIP_PhoneServiceRestartApp" value="VoIP: PhoneServiceRestart: Product = %1, HR = %2" />
        <string id="Format.VoIP_LaunchCallQueryInfoAgent" value="VoIP: Launching call query info agent instance for product %1" />
        <string id="Format.VoIP_CancelCallQueryInfoAgent" value="VoIP: Canceling call query info agent instance for product %1" />
        <string id="Format.VoIP_TerminateForLowMemory" value="VoIP: Terminating agents due to low memory for product %1" />
        <string id="Format.VoIP_AcquirePendingResourceSet" value="VoIP: Acquired Pending ResourceSet for product = %1, Resourceset = %2" />
        <string id="Format.VoIP_PendingResourceSetAcquired" value="VoIP: Acquired Pending ResourceSet for product = %1, Resourceset = %2, fApplied = %3, HR = %4" />
        <string id="Format.VoIP_NetworkActive" value="VoIP: Set PDC Network Active for product = %1, NTSTATUS = %2" />
        <string id="Format.VoIP_NetworkInactive" value="VoIP: Set PDC Network Inactive for product = %1, NTSTATUS = %2" />
        <string id="Format.VoIP_PDCRenewFailed" value="VoIP: Renew PDC Network activation failed for product = %1, NTSTATUS = %2" />
        <string id="Format.VoIP_PolicyEvaluateAction" value="VoIPPolicy: Evaluate Activation Action for PsmKey = %2, WorkItemId = %1, Action = %3, HRESULT = %4" />
        <string id="Format.VoIP_PolicyTaskActivated" value="VoIPPolicy: Task Activated for PsmKey = %2, WorkItemId = %1, HRESULT = %3" />
        <string id="Format.VoIP_PolicyTaskCompleted" value="VoIPPolicy: Task Completed for PsmKey = %2, WorkItemId = %1, HRESULT = %3" />
        <string id="Format.VoIP_PolicyTaskCanceled" value="VoIPPolicy: Task Canceled for PsmKey = %2, WorkItemId = %1, HRESULT = %3" />
        <string id="Format.VoIP_PolicyTaskAborted" value="VoIPPolicy: Task Aborted for PsmKey = %2, WorkItemId = %1, HRESULT = %3" />
        <string id="Format.VoIP_PolicyDetermineAndApplyBestResourceSet" value="VoIPPolicy: Determine and Apply Resources PsmKey = %2, WorkItemId = %1, HRESULT = %3" />
        <string id="Format.Bss.NotificationEvent" value="Bss: %6 - ProductId = %1, NotificationId = %2, Name = '%3', Type = %4, state = %5" />
        <string id="Format.Bss.NotificationEventAgentId" value="Bss: %6 - ProductId = %1, NotificationId = %2, Name = '%3', Type = %4, state = %5, AgentId = %7" />
        <string id="Format.Bss.NotificationEventAgentIdHr" value="Bss: %6 - ProductId = %1, NotificationId = %2, Name = '%3', Type = %4, state = %5, AgentId = %7, HR = %8" />
        <string id="Format.Bss.EventHandlerThreadProc" value="Bss::EventHandlerThreadProc: dwObjectState = %1, exitCheckAllThread = %2, lastError = %3" />
        <string id="Format.Bss.LocationPrefetchStart" value="Bss::FetchLocation: Start" />
        <string id="Format.Bss.LocationPrefetchEnd" value="Bss::FetchLocation: End" />
        <string id="Format.Bss.OnIdleSessionWakeupEvent" value="Bss::EventHandlerThreadProc: First launch event for OnIdle tasks (%1 -&gt; %2)" />
        <string id="Format.Bss.ServiceStart" value="Bss: Service Start - HR = %1" />
        <string id="Format.Bss.ServiceStop" value="Bss: Service Stop - HR = %1" />
        <string id="Format.Bss.OnIdleSessionStart" value="Bss::EventHandlerThreadProc: Launched OnIdle tasks" />
        <string id="Format.Bss.OnIdleSessionStop" value="Bss::EventHandlerThreadProc: OnIdle end event - WAIT_OBJECT = %1" />
        <string id="Format.Bss.EventHandlerThreadProcOnIdleStart" value="Bss::EventHandlerThreadProc: dwObjectState = %1, exitCheckAllThread = %2, lastError = %3" />
        <string id="Format.Bss.SentAimCancelRequest" value="Bss::AimProxyCancelTaskAgent: Sent requested to AIM to cancel task (AgentId = %1)" />
        <string id="Format.Bss.DisableSchedulesForDebugSession" value="Bss::DisableSchedulesForDebugSessionStart" />
        <string id="Format.Bss.EnableSchedulesForDebugSession" value="Bss::EnableSchedulesForDebugSessionEnd" />
        <string id="Format.Bss.EnableTaskNotification" value="Bss::EnableTaskNotification: NotificationType = %1, fEnable = %2" />
        <string id="Format.Bss.HandleNetworkOnEventForKeepAliveAgentNoNetwork" value="Bss::HandleNetworkOnEventForKeepAliveAgent: No network. False alarm network on event" />
        <string id="Format.Bss.HandlePeriodicEventForKeepAliveAgentNoNetwork" value="Bss::HandlePeriodicEventForKeepAliveAgent: No network" />
        <string id="Format.Bss.CancelAllPendingAsyncRequestsStart" value="Bss::CancelAllPendingAsyncRequests: Begin cancel all pending requests" />
        <string id="Format.Bss.CancelAllPendingAsyncRequestsEnd" value="Bss::CancelAllPendingAsyncRequests: Finished cancel all pending requests" />
        <string id="Format.Bss.AsyncFetchLoopExit" value="Bss::BNSSLocationFetcher::AsyncFetchLoop: Worker thread exiting normally as instance is being destroyed" />
        <string id="Format.Bss.AsyncFetchLoopError" value="Bss::BNSSLocationFetcher::AsyncFetchLoop: Error, unexpected wait return: %1. Worker thread will now exit!" />
        <string id="Format.Bss.RequestFetchLocationDelaying" value="Bss::BNSSLocationFetcher::RequestFetchLocation: Delaying fetch request for %1 msecs" />
        <string id="Format.Bss.RequestFetchLocationUseCached" value="Bss::BNSSLocationFetcher::RequestFetchLocation: Use cached location (is recent enough)" />
        <string id="Format.Bss.RequestFetchLocationFresh" value="Bss::BNSSLocationFetcher::RequestFetchLocation: Fetched a fresh location (cached is too old)" />
        <string id="Format.Bss.LaunchScheduledTaskExSkipLaunch" value="Bss::LaunchScheduledTaskEx: Skip for %1 because the recurring interval (%2/%3) is not reached" />
        <string id="Format.Bss.CHRLog" value="Bss: [%1:%2] %3" />
        <string id="PacMan.ReBind" value="Attempting to rebind again because first round failed: %1" />
        <string id="PacMan.BindFileEnd" value="Bind complete for HANDLE %1 and %2 now active" />
        <string id="PacMan.BindFileWait" value="Saturated and waiting with %1 now active" />
        <string id="PacMan.BindFileSkipWithNoFiles" value="Starting bind skipped: no files. %1 now active" />
        <string id="PacMan.BindFileSkip" value="Starting bind skipped: %1 isSmall = %2. %3 now active" />
        <string id="PacMan.BindFileStart" value="Starting bind returned on %1 with HANDLE %2 and %3 now active" />
        <string id="PacMan.BindStart" value="Starting with %1 files" />
        <string id="PacMan.VisualElementsProcessWindowsPhoneReservedAppInfo" value="Found WindowsPhoneReservedAppInfoHelper: IsPinableOnKidZone = %1, ExemptFromEnterpriseAllowDenyPolicy = %2, DeploymentAppEnumerationHubFilter = %3" />
        <string id="PacMan.LockdownFeatureEnabledWithoutExports" value="Lockdown extended feature enabled, but implementation binary does not export LockDownMgrIsAppAllowed" />
        <string id="PacMan.SendTokenNotificationTileUpdatedByProcessId" value="Tile update by ProcessID %1" />
        <string id="PacMan.AppXSetVolumeStatus" value="SetVolumeStatus: VolumePath[%1], Online[%2], hr:0x%3" />
        <string id="PacMan.AppxDownload" value="AppxRangeDownload offset[%1] size[%2] hr[%3]" />
        <string id="PacMan.FailedToStoreActivityContext" value="Unable to Store the ActivityContext for %1 during %2 - %3" />
        <string id="PacMan.CreateUpdateRequest" value="CreateUpdateRequest: ProductID=%1, ApplicationFlags=%2, hr=%3" />
        <string id="PacMan.CreateUninstallRequest" value="CreateUninstallRequest: ProductID=%1, ApplicationFlags=%2, hr=%3" />
        <string id="PacMan.CreateInstallRequest" value="CreateInstallRequest: ProductID=%1, ApplicationFlags=%2, hr=%3" />
        <string id="PacMan.AppMaintenanceTaskRun" value="AppMaintenanceTask, ProductID=%1, InstanceID=%2, hrReindex=%3, hrRebind=%4" />
        <string id="PacMan.AppStateChangeTaskStart" value="AppStateChangeTask starts" />
        <string id="PacMan.BindDeferredMdilBinaries" value="BindDeferredMdilBinaries: hr=%1" />
        <string id="PacMan.UpdateAppPushNotification" value="AppStateChangeTask::UpdateAppPushNotification: ProductID=%1, fEnable=%2, hr=%3" />
        <string id="PacMan.AppStateChangeTaskOnAppStateChange" value="AppStateChangeTask::OnAppStateChange: ProductID=%1, State=%2, hr=%3" />
        <string id="PacMan.SDCleanupTaskDeleteUnknownFolder" value="SDCleanupTask delete unknown folder: %1" />
        <string id="PacMan.SDCleanupTaskDisableSDApp" value="SDCleanupTask disable SD app: %1" />
        <string id="PacMan.SDCleanupTaskRollbackJunkFolder" value="SDCleanupTask rollback Junk folder: %1 =&gt; %2" />
        <string id="PacMan.ShellReady" value="ShellReady callback" />
        <string id="PacMan.SDCardPresenceInfoChangeCallback" value="SDCardPresenceInfoChangeCallback" />
        <string id="PacMan.SubscribeToSDCardNotifications" value="SubscribeToSDCardNotifications hr=%1" />
        <string id="PacMan.SDCleanupTaskWorkerStart" value="SDCleanupTaskWorker starts" />
        <string id="PacMan.StartSDCleanupTask" value="StartSDCleanupTask" />
        <string id="PacMan.OnSDCardStateChange" value="OnSDCardStateChange: StorageID=%1, fPresent=%2" />
        <string id="PacMan.InitializePackageManager" value="InitializePackageManager, hr=%1" />
        <string id="PacMan.VisualElementsDEHExtSetManifestPath" value="Setting manifest path: %1" />
        <string id="PacMan.ClientCreateNotificationManager" value="[PMNCLIENT] CoCreating a new notification manager (%1)" />
        <string id="PacMan.ClientNotificationThreadExits" value="[PMNCLIENT] Client listener thread exiting (%1)" />
        <string id="PacMan.ClientNotificationTypeWithAMap" value="[PMNCLIENT] Received client notification %1: ProductID=%2, Size=%3" />
        <string id="PacMan.ClientNotificationThreadStarts" value="[PMNCLIENT] Client listener thread starting" />
        <string id="PacMan.AppInstallCSPSetInstallTypeWithAMap" value="PM: AppInstallCSP::SetInstallType: %1" />
        <string id="PacMan.AppInstallCSPSetPayloadID" value="PM: AppInstallCSP::SetPayloadID: %1" />
        <string id="PacMan.AppInstallCSPSetOfferID" value="PM: AppInstallCSP::SetOfferID: %1" />
        <string id="PacMan.AppInstallCSPSetInstanceID" value="PM: AppInstallCSP::SetInstanceID: %1" />
        <string id="PacMan.AppInstallCSPSetLicensePath" value="PM: AppInstallCSP::SetLicensePath: %1" />
        <string id="PacMan.AppInstallCSPSetDependencyPackages" value="PM: AppInstallCSP::SetDependencyPackages: %1" />
        <string id="PacMan.AppInstallCSPSetPackagePath" value="PM: AppInstallCSP::SetPackagePath: %1" />
        <string id="PacMan.AppInstallCSPSetAltPackagePathOnSystem" value="PM: AppInstallCSP::SetAltPackagePathOnSystem: %1, File exists: %2" />
        <string id="PacMan.AppInstallCSPSetAltPackagePathOnData" value="PM: AppInstallCSP::SetAltPackagePathOnData: %1, File exists: %2" />
        <string id="PacMan.AppInstallCSPInvalidPackagePathOnData" value="PM: AppInstallCSP::SetAltPackagePathOnData, Invalid Prefix in Path: %1, HR = %2" />
        <string id="PacMan.AppInstallCSPSetProductID" value="PM: AppInstallCSP::SetProductID: %1" />
        <string id="PacMan.AppInstallCSPSetUninstallDisabled" value="PM: AppInstallCSP::SetUninstallDisabled: %1" />
        <string id="PacMan.AppInstallCSPSetIsBundle" value="PM: AppInstallCSP::SetIsBundle: %1" />
        <string id="PacMan.AppInstallCSPSetFullyPreInstall" value="PM: AppInstallCSP::SetFullyPreInstall: %1" />
        <string id="PacMan.AppInstallCSPSetForceUpdate" value="PM: AppInstallCSP::SetForceUpdate: %1" />
        <string id="PacMan.AppInstallCSPSetDeferMdilBind" value="PM: AppInstallCSP::SetDeferMdilBind: %1" />
        <string id="PacMan.AppInstallCSPReadLicenseFile" value="PM: AppInstallCSP::Read license file [%1], HR = %2" />
        <string id="PacMan.WnsRegistrationRemoveTemporaryRegistration" value="WnsRegistrationActivity::RemoveTemporaryRegistration: %1 - %2" />
        <string id="PacMan.WnsRegistrationAddTemporaryRegistration" value="WnsRegistrationActivity::AddTemporaryRegistration: %1 - %2" />
        <string id="PacMan.WnsRegistrationDeRegister" value="WnsRegistrationActivity::DeRegister: %1 - %2" />
        <string id="PacMan.WnsRegistrationRegister" value="WnsRegistrationActivity::Register: %1 - %2" />
        <string id="PacMan.WnsRegistrationImpersonateUser" value="ImpersonateUserHelper Failed: %1" />
        <string id="PacMan.BackupRestoreActivityIsRollbackNeeded" value="BackupRestoreActivity::IsRollbackNeeded: %1 for %2" />
        <string id="PacMan.BackupRestoreActivityRollback" value="BackupRestoreActivity::Rollback %1" />
        <string id="PacMan.BackupRestoreBeginActivityExecute" value="BackupRestoreActivity::Execute: %1" />
        <string id="Format.PM.ActivityExecution" value="PM: ActivityExecution ProductID: %1 [%2]: [%3]: [%4]:.hr : %5" />
        <string id="Format.PM.ActivityExecutionError" value="PM: ActivityExecution Error ProductID: %1 [%2]: [%3]: [%4]:.hr : %5" />
        <string id="Format.PM.MDILMaintenanceError" value="PM: MDILMaintenance failed ProductID: %1 hr: %2; %3" />
        <string id="Format.PM.MDILMaintenanceState" value="PM: MDILMaintenance %1 ProductID: %2 File: %3" />
        <string id="Format.PM.MDILMaintenance" value="PM: MDILMaintenance ProductID: %1" />
        <string id="Format.PM.XBFTimeout" value="PM: XBF Generation Timeout: ProductID: %1" />
        <string id="Format.PM.XBFFailed" value="PM: XBF Failed ProductID: %1 hr: %2" />
        <string id="Format.PM.InstallerInfo" value="PM: ProductID: [%1]|OrchestratorType: [%2]|AppType: [%3]" />
        <string id="Format.PM.Lifecycle" value="PM: %1 : ProductID: %2, Progress: %3, hr: %4" />
        <string id="Format.PM.Tile" value="PM: %1 : ProductID: %2" />
        <string id="Format.PM.ConvertHR_Full" value="PM: %1:%2 : (hrInternal: %3 , hrExternal: %4) ProductID: %5" />
        <string id="Format.PM.ConvertHR" value="PM: %1:%2 : (hrInternal: %3 , hrExternal: %4)" />
        <string id="Format.PM.TraceError" value="PM: %1:%2 : hr: %3" />
        <string id="Format.PM.TraceError_ProductID" value="PM: %1:%2 : hr: %3 ProductID: %5" />
        <string id="Format.PM.TraceError_ESE" value="PM: %1:%2 : hr: %3 JET_ERR: %4" />
        <string id="Format.PM.Index_Rebuild_Required" value="Index deleted when attaching the Database, mark all tables for index refresh" />
        <string id="Format.PM.PacManRebuilding_Index_For_Table" value="Rebuilding indexes for Table: %s" />
        <string id="Format.PM.PacManRebuilding_Index" value="Table: %s Index: %s is being Rebuilt (Is JetSetCurrentIndex failure [%d])" />
        <string id="Format.PM.ChamberMaintenanceError" value="PM: ChamberMaintenance failed ProductID: %1 hr: %2" />
        <string id="StartBackupRestore.ReplacePlaceholderTiles" value="Modified placeholder tiles for ProductID %1, HR = %2" />
        <string id="StartBackupRestore.StageStartBackup" value="Applied StartBackup to staging location : HR = %1" />
        <string id="StartBackupRestore.ApplyStartBackup" value="Applied StartBackup from staging location : HR = %1" />
        <string id="StartBackupRestore.BackupStart" value="Backed up start : HR = %1" />
        <string id="StartBackupRestore.OriginateMessage" value="StartBackupRestore Error: %1 Location: %2 Line Number: %3" />
        <string id="StartBackupRestore.PropagateMessage" value="StartBackupRestore Error Propagated: %1 Location: %2 Line Number: %3" />
        <string id="StartBackupRestore.ReplacePlaceHolderTile" value="StartBackupRestore replaced PlaceHolderTileId %2 with new TileId %3 for ProductID %1, HR: %4" />
        <string id="StartBackupRestore.GetUnits" value="TileSettingHandler for Hub %1 returned %2 setting units for backup" />
        <string id="StartBackupRestore.ApplyUnit" value="TileSettingHandler restored SettingUnit %1 to staging area" />
        <string id="StartBackupRestore.OpenStream" value="TileSettingHandler returned DataStream for SettingUnit %1 for backup" />
        <string id="StartBackupRestore.BeginSession" value="TileSettingHandler started a new Backup or Restore Session, flags %1" />
        <string id="StartBackupRestore.EndSession" value="TileSettingHandler ended Session, IsRestoreSession? %1, Number of Failures %2,  Final HR: %3" />
        <string id="StartBackupRestore.RestoreTile" value="TileSettingHandler restored TileId %2 to PacMan for ProductId %1 with %3 image files" />
        <string id="StartBackupRestore.UpdateExistingTile" value="TileSettingHandler updating existing TileId %2 for ProductId %1 in PacMan" />
        <string id="StartBackupRestore.AddNewPlaceHolderTile" value="TileSettingHandler adding new placeholder TileId %2 in Template %3 for Product %1 on Hub %4" />
        <string id="StartBackupRestore.AddNewTile" value="TileSettingHandler adding new TileId %2 in Template %3 for ProductId %1 on Hub %4" />
        <string id="StartBackupRestore.RestoringImageFile" value="TileSettingHandler restoring image file %2 for ProductId %1" />
        <string id="StartBackupRestore.AddNewModernPlaceHolderTile" value="TileSettingHandler adding new Modern placeholder TileId %2 for Product %1 on Hub %3" />
        <string id="StartBackupRestore.AddNewModernTile" value="TileSettingHandler adding new Modern TileId %2 for AUMID %1 on Hub %3" />
        <string id="StartBackupRestore.RestorePropertyError" value="TileSettingHandler encountered error %5 restoring PropId %1, Value %2 for Product %3 TileId %4. Skipping." />
        <string id="StartBackupRestore.BackupAbsoluteImagePath" value="TileSettingHandler backed up Product %1 with an absolute path %2" />
        <string id="StartBackupRestore.RestoreTileFailed" value="TileSettingHandler failed to restore TileId %2 for Product %1, HR: %3" />
        <string id="StartBackupRestore.PlaceHolderTileUnpinned" value="PlaceHolder Tile %2 for Product %1 has been unpinned, HR: %3" />
        <string id="StartBackupRestore.UnavailableApp" value="App Product %1 in AppState %3 is unavailable for restore, creating placeholder for Tile %2" />
        <string id="StartBackupRestore.RegisterForNotifications" value="Register Product %1 Package %2 SecondaryTile %3 for WPN Notifications HR: %4" />
        <string id="AppListBackupRestore.AppInstall" value="AppList Restore enqueued app for install: ProductId %1, Params %2, HR: %3" />
        <string id="Format.OTM_ReadSettings" value="OTM: Read settings. First retry timeout = %1 ms, Second retry timeout = %2 ms, Third retry timeout = %3 ms, Maximum Retry Timeout = %4 ms" />
        <string id="Format.OTM_TaskComplete" value="OTM: Task instance %2 of product %1 completed" />
        <string id="Format.OTM_HostCompleteCrash" value="OTM: TaskHost of product %1 has crashed" />
        <string id="Format.OTM_HostCompletePacMan" value="OTM: TaskHost of product %1 has been completed by PacMan" />
        <string id="Format.OTM_LaunchBootAgents" value="OTM: Launching OEM boot agents" />
        <string id="Format.OTM_LaunchBootAgentFailure" value="OTM: Launching boot agents for product %1 failed with error %2" />
        <string id="Format.OTM_LaunchBootAgent" value="OTM: Launch boot agents for product %1" />
        <string id="Format.OTM_RunOnUpdateStarted" value="OTM: Running OnUpdateStarted for product %1" />
        <string id="Format.OTM_RunOnUpdateFinished" value="OTM: Restarting boot agents for product %1 after update" />
        <string id="Format.OTM_StartReady" value="OTM: Start menu is ready." />
        <string id="Format.OTM_FailLaunchBootAgents" value="OTM: Could not launch OEM boot agents. QueueUserWorkItem failed with error %1." />
        <string id="Format.OTM_FailProcessUpdateWorker" value="OTM: Could not process update notification for OEM application. QueueUserWorkItem failed with error %1." />
        <string id="Format.OTM_FailProcessUpdate" value="OTM: Could not process update notification for OEM application. ProcessUpdateNotification failed with error %1." />
        <string id="Format.OTM_FailNotifyTaskInstanceCompleted" value="OTM: OemTaskManager::NotifyTaskInstanceCompleted failed with error %1." />
        <string id="Format.OTM_FailNotifyTaskHostCompleted" value="OTM: OemTaskManager::NotifyTaskHostCompleted failed with error %1." />
        <string id="Format.OTM_FailDumpAgents" value="OTM: OemApp::DumpAgents failed with error %1." />
        <string id="Format.OTM_ErrorOccurred" value="OTM: An error occurred. Hr = %1" />
        <string id="Format.OTM_ServiceAgentsNotFound" value="OTM: No apps with ServiceAgents were found." />
        <string id="Format.OTM_ServiceAgentsNoTaskFound" value="OTM: No ServiceAgent task found for product %1." />
        <string id="Format.OTM_AbortTask" value="OTM: AbortTask: TaskInstanceID = %1, HR = %2" />
        <string id="Format.FM_RegisterCallback" value="FM: Registering callback %1 HRESULT=%2" />
        <string id="Format.FM_GenerateActivationInstanceId" value="FM: Generate ActivationInstanceID Id=%1" />
        <string id="Format.FM_BeginActivationPrerequisitePhase" value="FM: +ActivationPrerequisitePhase ActivationInstanceId=%1 UserContext=%2 AUMID=%3 ContractId=%4" />
        <string id="Format.FM_EndActivationPrerequisitePhase" value="FM: -ActivationPrerequisitePhase HRESULT=%1 fPending=%2" />
        <string id="Format.FM_BeginResume_RehydrationPhase" value="FM: +Resume_RehydrationPhase ActivationInstanceId=%1" />
        <string id="Format.FM_EndResume_RehydrationPhase" value="FM: -Resume_RehydrationPhase ActivationInstanceId=%1 HRESULT=%2" />
        <string id="Format.FM_BeginPostActivationPhase" value="FM: +PostActivationPhase ActivationInstanceId=%1" />
        <string id="Format.FM_EndPostActivationPhase" value="FM: -PostActivationPhase ActivationInstanceId=%1 HRESULT=%2" />
        <string id="Format.FM_BeginResumeActivation" value="FM: +ResumeActivation ActivationInstanceId=%1 fIsResumed=%2" />
        <string id="Format.FM_EndResumeActivation" value="FM: -ResumeActivation ActivationInstanceId=%1 HRESULT=%2" />
        <string id="Format.FM_BeginResume_ActivationPhase" value="FM: +Resume_ActivationPhase ActivationInstanceId=%1" />
        <string id="Format.FM_EndResume_ActivationPhase" value="FM: -Resume_ActivationPhase ActivationInstanceId=%1 HRESULT=%2" />
        <string id="Format.FM_BeginPauseActivation" value="FM: +PauseActivation ActivationInstanceId=%1" />
        <string id="Format.FM_EndPauseActivation" value="FM: -PauseActivation HRESULT=%1 PausePending=%2" />
        <string id="Format.FM_BeginCancelActivation" value="FM: +CancelActivation ActivationInstanceId=%1" />
        <string id="Format.FM_EndCancelActivation" value="FM: -CancelActivation ActivationInstanceId=%1 HRESULT=%2" />
        <string id="Format.FM_BeginAbortActivation" value="FM: +AbortActivation ActivationInstanceId=%1 Reason=%2 fGenerateWER=%3" />
        <string id="Format.FM_EndAbortActivation" value="FM: -AbortActivation ActivationInstanceId=%1 HRESULT=%2" />
        <string id="Format.FM_BeginGetActivationProcessId" value="FM: +GetActivationProcessId ActivationInstanceId=%1" />
        <string id="Format.FM_EndGetActivationProcessId" value="FM: -GetActivationProcessId ActivationInstanceId=%1 PID%2 HRESULT=%3" />
        <string id="Format.FM_BeginSetForegroundActivationInstance" value="FM: +SetForegroundActivationInstance ActivationInstanceId=%1 Isforeground=%2" />
        <string id="Format.FM_EndSetForegroundActivationInstance" value="FM: -SetForegroundActivationInstance ActivationInstanceId=%1 HRESULT=%2" />
        <string id="Format.FM_SetActivationDehydrationEligibility" value="FM: SetActivationDehydrationEligibility TaskID=%1 State=%2 HRESULT=%3" />
        <string id="Format.FM_OnActivationStateChanged" value="FM: OnActivationStateChanged ActivationInstanceId=%1 state=%2 HRESULT=%3" />
        <string id="Format.FM_OnApplicationStateChanged" value="FM: OnApplicationStateChanged UserContext=%1 PSMKey=%2 state=%3 HRESULT=%4" />
        <string id="Format.FM_IsValidActivationProcessId" value="FM: IsValidActivationProcessId ActivationInstanceID=%1 PID=%2 fValid=%3 HRESULT=%4" />
        <string id="Format.FM_GetForegroundProductId" value="FM: GetForegroundProductId fIgnoreLockScreen=%1 ProductID=%2 HRESULT=%3" />
        <string id="Format.FM_GetProductIdFromProcessId" value="FM: GetProductIdFromProcessID ProductID=%1 PID=%2 HRESULT=%3" />
        <string id="Format.FM_DiscardFrozenNotification" value="FM: Discarding Application Frozen notification because the application isn't really frozen" />
        <string id="Format.FM_DehydrateApplication" value="FM: Dehydrate Application AUMID=%1 HRESULT=%2" />
        <string id="Format.FM_BeginResumePrerequisitePhase" value="FM: +ResumePrerequisitePhase ActivationInstanceId=%1" />
        <string id="Format.FM_EndResumePrerequisitePhase" value="FM: -ResumePrerequisitePhase HRESULT=%1 fPending=%2" />
        <string id="Format.FM_GenerateWatsonReport" value="FM: GenerateWatsonReport PID=%1 Reason=%2 HRESULT=%3" />
        <string id="Format.FM_TaskCompletionBatterySaverState" value="FM: TaskCompletion New Battery Saver State %1" />
        <string id="Format.FM_BeginTaskCompletionRevokeExemption" value="FM: TaskCompletion Revoke Exemption PID=%1 AUMID=%2 TC=%3" />
        <string id="Format.FM_ApplyTaskCompletionExemption" value="FM: TaskCompletion Apply(%3) Exemption PID=%1 TC=%2 HRESULT=%4" />
        <string id="Format.FM_SetContinuation" value="FM: SetContinuation ActivationInstanceID=%1" />
        <string id="Format.FM_AbandonContinuation" value="FM: AbandonContinuation ActivationInstanceID=%1" />
        <string id="Format.FM_PerformContinuation" value="FM: PerformContinuation ActivationInstanceID=%1" />
        <string id="Format.FM_Shutdown" value="FM: Shutdown HRESULT=%1" />
        <string id="Format.FM_PauseActivation" value="FM: +PauseActivation ActivationInstanceId=%1 AUMID=%2 PackageFullName=%3" />
        <string id="Format.FM_LogoffUser" value="FTM: Logoff User=%1 HRESULT=%2" />
        <string id="Format.FM_BeginActivationBypass" value="FM: +ActivationBypass ActivationInstanceId=%1" />
        <string id="Format.FM_EndActivationBypass" value="FM: -ActivationBypass ActivationInstanceId=%1 HRESULT=%2" />
        <string id="Format.FM_BeginPostPausePendingResume" value="FM: +PostPausePendingResume ActivationInstanceId=%1" />
        <string id="Format.FM_EndPostPausePendingResume" value="FM: -PostPausePendingResume ActivationInstanceId=%1 HRESULT=%2" />
        <string id="Format.FM_ApplyResourceSetType" value="FM-ARP: ApplyResourceSetType ResourceSetType=%1 User=%2 PSMKey=%3 ResourceSet=%4 HRESULT=%5" />
        <string id="Format.FM_ClearCachedResource" value="FM-ARP: Clear Cached Resource User=%1 PSMKey=%2" />
        <string id="Format.FM_FireCachedResourceCallback" value="FM-ARP: Fire Cached ResourceCallback User=%1 PSMKey=%2" />
        <string id="Format.FM_ApplyTerminal" value="FM-ARP: ApplyTerminal UserContext=%1 PsmKey=%2 ResourceSet=%3 HRESULT=%4" />
        <string id="Format.FM_RemoveInterruptiveUIAccess" value="FM-ARP: RemoveInterruptiveUIAccess UserContext=%1 PsmKey=%2 ResourceSet=%3 HRESULT=%4" />
        <string id="Format.FM_ResetInterruptiveUIAccess" value="FM-ARP: ResetInterruptiveUIAccess UserContext=%1 PsmKey=%2 ResourceSet=%3 HRESULT=%4" />
        <string id="Format.FM_OnRelease" value="FM-ARP: OnRelease UserContext=%1 PsmKey=%2 ReleaseAction=%3 ReleasedCachedResource=%4 ReleaseAppliedResource=%5 HRESULT=%6" />
        <string id="Format.FM_OnOutOfMemory" value="FM-ARP: OnOutOfMemory UserContext=%1 PsmKey=%2 ResourceSet=%3 HRESULT=%4" />
        <string id="Format.FM_OnAcquired" value="FM-ARP: OnAcquired UserContext=%1 PsmKey=%2 ResourceSet=%3 HRESULT=%4" />
        <string id="Format.FM_CheckProcessBackgroundEligibility" value="FM-EEP: CheckProcessBackgroundEligibility ProcessId=%1 TaskCompletionCategory=%2 HRESULT=%3" />
        <string id="Format.FM_ApplyTaskCompletion" value="FM-EEP: ApplyTaskCompletion ProcessId=%1 TaskCompletionCategory=%2 HRESULT=%3" />
        <string id="Format.FM_RevokeTaskCompletion" value="FM-EEP: RevokeTaskCompletion ProcessId=%1 TaskCompletionCategory=%2 HRESULT=%3" />
        <string id="Format.FM_RequestExtendedExecution" value="FM-EEP: RequestExtendedExecution ProcessId=%1 Reason=%2 DeniedReason=%3 HRESULT=%4" />
        <string id="Format.FM_RegisterForExtensionRevokedEvent" value="FM-EEP: RegisterForExtensionRevokedEvent ProcessId=%1 HRESULT=%2" />
        <string id="Format.FM_CompleteExtendedExecution" value="FM-EEP: CompleteExtendedExecution ProcessId=%1 fIsResumed=%2 HRESULT=%3" />
        <string id="Format.FM_RevokeSuspensionExtension" value="FM-EEP: RevokeSuspensionExtension User=%1 PsmKey=%2 HRESULT=%3" />
        <string id="Format.FM_NotifyPendingResourceSetTransition" value="FM-ARP: NotifyPendingResourceSetTransition ResourceSetType=%1 ResourceSet=%2 HRESULT=%3" />
        <string id="Format.FM_IsApplicationStateBackgroundEligibile" value="FM-EEP: IsApplicationStateBackgroundEligibile User=%1 PsmKey=%2 fResult=%3" />
        <string id="Format.FM_ApplyTaskCompletionResourceSet" value="FM-EEP: ApplyTaskCompletionResourceSet AppUserModelId=%1 fTimerExpiredCallback=%2 HRESULT=%3" />
        <string id="Format.FM_ApplyTaskCompletionResource" value="FM-EEP: ApplyTaskCompletionResourceSet AppUserModelId=%1 TC=%2 isResourcePending =%3 HRESULT=%4" />
        <string id="Format.FM_RevokeTaskCompletionExemption" value="FM-EEP: RevokeTaskCompletionExemption AppUserModelId=%1 HRESULT=%2" />
        <string id="Format.FM_AllowBackgroundExecution" value="FM-EEP: AllowBackgroundExecution User=%1 AppUserModelId=%2 DeniedReason=%3 HRESULT=%4" />
        <string id="Format.FM_OnPackageEnergyStateChange" value="FM-EEP: OnPackageEnergyStateChange PackageFullName=%1 PackageState=%2 HRESULT=%3" />
        <string id="Format.FM_SetActivationImportanceVector" value="FM: SetActivationImportanceVector TaskID=%1 Vector=%2 HRESULT=%3" />
        <string id="Format.FM_NotifyWindowAdded" value="FM: NotifyWindowAdded TaskID=%1 WindowInstanceId=%2 HRESULT=%3" />
        <string id="Format.FM_NotifyWindowRemoved" value="FM: NotifyWindowRemoved TaskID=%1 WindowInstanceId=%2 HRESULT=%3" />
        <string id="Format.FM_RegisterExtendedExecutionClient" value="FM-EEP: RegisterExtendedExecutionClient ProcessId=%1 HRESULT=%2" />
        <string id="Format.FM_UnregisterExtendedExecutionClient" value="FM-EEP: UnregisterExtendedExecutionClient ProcessId=%1 HRESULT=%2" />
        <string id="Format.FM_UnregisterForExtensionRevokedEvent" value="FM-EEP: UnregisterForExtensionRevokedEvent ProcessId=%1 HRESULT=%2" />
        <string id="Format.FM_ActivationTimeoutPolicyChanged" value="FM: ActivationTimeoutPolicyChanged  TaskID=%1 WindowInstanceId=%2 HRESULT=%3" />
        <string id="Format.FM_OnConnectedStandbyStateChanged" value="FM-EEP: OnConnectedStandbyStateChanged  State=%1" />
        <string id="Format.FM_ApplyResourceBoost" value="FM-ARP: ApplyResourceBoost User=%1 PsmKey=%2 HRESULT=%3" />
        <string id="Format.FM_ChildOnApplicationStateChangedEx" value="FM-CAM: OnApplicationStateChangedEx UserContext=%1 PsmKey=%2 state=%3 HRESULT=%4" />
        <string id="Format.FM_ChildAcquireForegroundResource" value="FM-CAM: AcquireForegroundResource UserContext=%1 PsmKey=%2 isPending=%3" />
        <string id="Format.FM_ChildOnResourceAcquired" value="FM-CAM: OnResourceAcquired UserContext=%1 PsmKey=%2" />
        <string id="Format.FM_ChildOnResourceTimerExpired" value="FM-CAM: OnResourceTimerExpired UserContext=%1 PsmKey=%2" />
        <string id="Format.FM_SendActivationNotification" value="FM: SendActivationNotification ActivationId=%1 NotificationId=%2" />
        <string id="Format.FM_AcquireResourceSet" value="FM-ARP: AcquireResourceSet ResourceSetType=%1 Usercontext=%2 PsmKey=%3 HRESULT=%4" />
        <string id="Format.FM_ApplyResourceSet" value="FM-ARP: Apply Cached Resource Set Usercontext=%1 PsmKey=%2 HRESULT=%3" />
        <string id="Format.FM_OnResourceAcquired" value="FM: OnResourceAcquired Usercontext=%1 PsmKey=%2 HRESULT=%3" />
        <string id="Format.FM_OnResourceTimerExpired" value="FM: OnResourceTimerExpired Usercontext=%1 PsmKey=%2 HRESULT=%3" />
        <string id="Format.FM_PostPausePendingActivation" value="FM: PostPausePendingActivation ActivationId=%1 HRESULT=%2" />
        <string id="Format.FM_TCDeniedByEDPPolicy" value="FM-EEP: Task Completion Denied By EDP Policy ProcessId=%1 TC=%2" />
        <string id="Format.FM_IsForegroundApplication" value="FM-EEP: IsForegroundApplication Application=%1 Result=%2" />
        <string id="Format.EEC_GetExtendedExecutionBroker" value="EEC: GetExtendedExecutionBroker ProcessId=%1 HRESULT=%2" />
        <string id="Format.EEC_RegisterRevokedHandler" value="EEC: RegisterRevokedHandler ProcessId=%1 HRESULT=%2" />
        <string id="Format.EEC_RequestExtendedExecution" value="EEC: RequestExtendedExecution ProcessId=%1 Reason=%2 HRESULT=%3" />
        <string id="Format.EEC_ExtensionRevokedCallback" value="EEC: ExtensionRevokedCallback ProcessId=%1 Reason=%2 HRESULT=%3" />
        <string id="Format.EEC_CompleteExtendedExecution" value="EEC: CompleteExtendedExecution ProcessId=%1 HRESULT=%2" />
        <string id="BTPolicy.NetworkStatusChange" value="BTPolicy: Network Status CHange : isWifi=%1, isCellular=%2, isVoiceConflicting=%3" />
        <string id="BTPolicy.ForegroundAppChange" value="BTPolicy: Foreground App change AUMId = %1" />
        <string id="BTPolicy.CheckConditions" value="BTPolicy: Checkconditions, isWifi=%1, isCellular=%2, isVoiceConflicting=%3, isForegroundApp=%4, BatterySaverMode=%5, BatteryCharging=%6, isAboveQuota=%7" />
        <string id="BTPolicy.ClearPausedList" value="BTPolicy: Clear the paused transfer List as these entries are stale now" />
        <string id="BTPolicy.PauseBackgroundTransfers" value="BTPolicy: Pause all background transfers" />
        <string id="BTPolicy.ReschedulePausedTransfers" value="BTPolicy: Reschedule all paused transfers" />
        <string id="BTPolicy.EnterFunction" value="BTPolicy: Enter %1" />
        <string id="BTPolicy.ExitFunctionHr" value="BTPolicy: Exit %1, HR=%2" />
        <string id="BTPolicy.ApplicationUninstalled" value="BTPolicy: Application Uninstalled/Disabled AUMId = %1" />
        <string id="BTPolicy.ErrorOriginateEvent" value="BTPolicy: Error: %1 Location: %2 Line Number: %3" />
        <string id="BTPolicy.ErrorPropagateEvent" value="BTPolicy: Error: Propagated: %1 Location: %2 Line Number: %3" />
        <string id="BTPolicy.StartQuotaEpoch" value="BTPolicy: Starting a Quodata Epoch TotalTransferTime=%1" />
        <string id="BTPolicy.EndQuotaEpoch" value="BTPolicy: Ending a Quodata Epoch TotalTransferTime=%1" />
        <string id="BTPolicy.QuotaExhausted" value="BTPolicy: BT Time Quota exhausted" />
        <string id="BTPolicy.ResetQuota" value="BTPolicy: Reseting BT Time quota" />
        <string id="BTPolicy.ChargingStatusChange" value="BTPolicy: Battery Charging State changed isCharging=%1" />
        <string id="BTPolicy.LoadedRegistry" value="BTPolicy: Reset=%1, MaxTimeThreshold=%2, QuotaResetTime=%3 UsedQuota=%4" />
        <string id="BAPolicy.TimerExpired" value="BAPolicy: Inactivity Timer Expired" />
        <string id="BAPolicy.TimerStarted" value="BAPolicy: Inactivity Timer Started" />
        <string id="BAPolicy.TimerStopped" value="BAPolicy: Inactivity Timer Stopped" />
        <string id="BAPolicy.UpdateActiveForegroundStatus" value="BAPolicy: Update Foreground Active Status isActiveTaskForegroundRunning=%1 activeWorkItem=%2" />
        <string id="AAM.InitiateActivation" value="AAM: Initiate activation for user %1 app %2 contract %3 task %4, hr %5" />
        <string id="AAM.InitiateActivationCompleted" value="AAM: Initiate activation completed for task %2 (expected %1), hr %3" />
        <string id="AAM.InitializeActivation" value="AAM: Initialize activation for user %1 app %2 contract %3 lightup(%5), hr %4" />
        <string id="AAM.ValidateActivation" value="AAM: Validate activation, hr %1" />
        <string id="AAM.VerifyLicense" value="AAM: Verify license for pkg %1, hr %2" />
        <string id="AAM.ActivateApplication" value="AAM: Activate activation task %1 host %2, hr %3" />
        <string id="AAM.ShimTimerExpired" value="AAM: Activation shim timer expired %1, hr %2" />
        <string id="AAM.InitiateCoreUI" value="AAM: Initiate Core UI, hr %1" />
        <string id="AAM.ReleaseCoreUI" value="AAM: Release Core UI" />
        <string id="AAM.CreateWindowsAAM" value="AAM: Create Windows AAM, hr %1" />
        <string id="AAM.RemediationAttempt" value="AAM: Attempted remediation, hr %1" />
        <string id="AAM.FindingRemediationHandlerError" value="AAM: Failed while trying to find a remediation handler, hr %1" />
        <string id="AAM.FindPackageStatusFailed" value="AAM: Failed while trying to find the package status, hr %1" />
        <string id="AAM.FindPackageOriginFailed" value="AAM: Failed while trying to find the package origin, hr %1" />
        <string id="AAM.VerifyAndInitializeActivationFailed" value="AAM: Failed while trying to verify and initialize the activation, hr %1" />
        <string id="AAM.RoamingDataCheckFailed" value="AAM: Failed while trying to check roaming data, hr %1" />
        <string id="AAM.BrokerPluginsCreated" value="AAM: Broker created plugins %1, expected %2" />
        <string id="AAM.BrokerInitialize" value="AAM: Broker initialize, hr %1" />
        <string id="AAM.BrokerStartActivateApplication" value="AAM: Broker start activate application %1 (%3 args) arg[0] %2 type %4 caller PID %5 (initialization count %6)" />
        <string id="AAM.BrokerStartActivateApplicationArgument" value="AAM: Broker activate application %1 arg[%3] %2" />
        <string id="AAM.BrokerEndActivateApplication" value="AAM: Broker end activate application %1 launched PID %2 task %3, hr %4" />
        <string id="AAM.BrokerActivateTaskWithResults" value="AAM: Broker activate task with result for app %1 caller PID %2 caller task %3" />
        <string id="AAM.BrokerGetTaskResult" value="AAM: Broker get result for PID %1 task %2 result %3, hr %4" />
        <string id="AAM.BrokerGetTaskIdLambda" value="AAM: Broker get task id for process %1 window %2 = task %3, hr %4" />
        <string id="AAM.BrokerInitializeSessionMgrLambda" value="AAM: Broker init session manager, hr %1" />
        <string id="AAM.BrokerReleaseSessionMgrLambda" value="AAM: Broker release session manager" />
        <string id="AAM.BrokerAddTaskWithResult" value="AAM: Broker add task with result for parent %1, hr %2" />
        <string id="AAM.BrokerGetTaskWithResult" value="AAM: Broker get task with result for parent %1, hr %2" />
        <string id="AAM.BrokerGetTaskWithResultByChild" value="AAM: Broker get task with result for child %1, hr %2" />
        <string id="AAM.BrokerRemoveTaskWithResult" value="AAM: Broker remove task with result for parent %1, hr %2" />
        <string id="AAM.BrokerCreateCompletedEvent" value="AAM: Broker create completed event for caller PID %1, hr %2" />
        <string id="AAM.BrokerOnParentTaskCompleted" value="AAM: Broker parent task completed %1 with child state %2" />
        <string id="AAM.BrokerOnChildTaskCompleted" value="AAM: Broker child task completed %1 with state %2, hr %3" />
        <string id="AAM.BrokerTaskWithResultCompleted" value="AAM: Broker task event signaled for parent %1 child %2 previous state %3, hr %4" />
        <string id="AAM.BrokerCloseTask" value="AAM: Broker close task %1, hr %2" />
        <string id="Maps.Activation.TaskWithResultState.Waiting" value="Waiting" />
        <string id="Maps.Activation.TaskWithResultState.CompletedWithResult" value="CompletedWithResult" />
        <string id="Maps.Activation.TaskWithResultState.CompletedWithNoResult" value="CompletedWithNoResult" />
        <string id="DevPlatMigrator.MainFinish" value="DevPlat Migrator exitting: retVal = %1, hr = %2" />
        <string id="DevPlatMigrator.MainGetCancelNgenAndReindex" value="ParentBranchBuild/QFELevel matches so we are skipping ngen and reindex: %1 %2" />
        <string id="DevPlatMigrator.MainGetBuildInfoResults" value="Get new and old build info to compare: new = %1, old = %2" />
        <string id="DevPlatMigrator.MainGetBuildInfo" value="Get new and old build info to compare" />
        <string id="DevPlatMigrator.MainReadRegistryConfig" value="Read settings from registry: Config = %1, FailSetMaintenance = %2" />
        <string id="DevPlatMigrator.MainStart" value="DevPlat Migrator starting" />
        <string id="Maps.Descriptions.OR_EXECUTE" value="OR_EXECUTE" />
        <string id="Maps.Descriptions.OR_ROLLBACK" value="OR_ROLLBACK" />
        <string id="Maps.Descriptions.OR_CLEANUP" value="OR_CLEANUP" />
        <string id="Maps.Descriptions.OR_FORCEEXECUTE" value="OR_FORCEEXECUTE" />
        <string id="Maps.Descriptions.OR_INSTALL" value="OR_INSTALL" />
        <string id="Maps.Descriptions.OR_UPDATE" value="OR_UPDATE" />
        <string id="Maps.Descriptions.OR_UPDATE_LICENSE" value="OR_UPDATE_LICENSE" />
        <string id="Maps.Descriptions.OR_DBPROVISION_INSTALL" value="OR_DBPROVISION_INSTALL" />
        <string id="Maps.Descriptions.OR_DBPROVISION_UNINSTALL" value="OR_DBPROVISION_UNINSTALL" />
        <string id="Maps.Descriptions.OR_DBPROVISION_UPDATE" value="OR_DBPROVISION_UPDATE" />
        <string id="Maps.Descriptions.OR_FORCEUNINSTALL" value="OR_FORCEUNINSTALL" />
        <string id="Maps.Descriptions.OR_INSTALL_WORKER" value="OR_INSTALL_WORKER" />
        <string id="Maps.Descriptions.OR_STATEMACHINE_COUNT" value="OR_STATEMACHINE_COUNT" />
        <string id="Maps.Descriptions.AT_BEGIN_INSTALL" value="AT_BEGIN_INSTALL" />
        <string id="Maps.Descriptions.AT_BEGIN_UNINSTALL" value="AT_BEGIN_UNINSTALL" />
        <string id="Maps.Descriptions.AT_BEGIN_UPDATE" value="AT_BEGIN_UPDATE" />
        <string id="Maps.Descriptions.AT_BEGIN_DBPROVISION_INSTALL" value="AT_BEGIN_DBPROVISION_INSTALL" />
        <string id="Maps.Descriptions.AT_BEGIN_DBPROVISION_UNINSTALL" value="AT_BEGIN_DBPROVISION_UNINSTALL" />
        <string id="Maps.Descriptions.AT_BEGIN_DBPROVISION_UPDATE" value="AT_BEGIN_DBPROVISION_UPDATE" />
        <string id="Maps.Descriptions.AT_BEGIN_UPDATE_LICENSE" value="AT_BEGIN_UPDATE_LICENSE" />
        <string id="Maps.Descriptions.AT_BEGIN_REVOKE_LICENSE" value="AT_BEGIN_REVOKE_LICENSE" />
        <string id="Maps.Descriptions.AT_BEGIN_INSTALLER_WORKER" value="AT_BEGIN_INSTALLER_WORKER" />
        <string id="Maps.Descriptions.AT_BEGIN_SD_MOVE" value="AT_BEGIN_SD_MOVE" />
        <string id="Maps.Descriptions.AT_VERIFY_PACKAGE_SIGNATURE" value="AT_VERIFY_PACKAGE_SIGNATURE" />
        <string id="Maps.Descriptions.AT_CHAMBER_PROVISION" value="AT_CHAMBER_PROVISION" />
        <string id="Maps.Descriptions.AT_CHAMBER_REPROVISION" value="AT_CHAMBER_REPROVISION" />
        <string id="Maps.Descriptions.AT_CHAMBER_DEPROVISION" value="AT_CHAMBER_DEPROVISION" />
        <string id="Maps.Descriptions.AT_CHAMBER_SDMOVE_REPROVISION" value="AT_CHAMBER_SDMOVE_REPROVISION" />
        <string id="Maps.Descriptions.AT_INSTALLER_WORKER" value="AT_INSTALLER_WORKER" />
        <string id="Maps.Descriptions.AT_EXTRACT_PACKAGE" value="AT_EXTRACT_PACKAGE" />
        <string id="Maps.Descriptions.AT_MDIL_BIND" value="AT_MDIL_BIND" />
        <string id="Maps.Descriptions.AT_PARSE_MANIFEST" value="AT_PARSE_MANIFEST" />
        <string id="Maps.Descriptions.AT_PARSE_DBPROVISION_MANIFEST" value="AT_PARSE_DBPROVISION_MANIFEST" />
        <string id="Maps.Descriptions.AT_UPDATE_PARSE_MANIFEST" value="AT_UPDATE_PARSE_MANIFEST" />
        <string id="Maps.Descriptions.AT_UPDATE_PARSE_DBPROVISION_MANIFEST" value="AT_UPDATE_PARSE_DBPROVISION_MANIFEST" />
        <string id="Maps.Descriptions.AT_VERIFY_MANIFEST" value="AT_VERIFY_MANIFEST" />
        <string id="Maps.Descriptions.AT_CREATE_APP_FOLDER" value="AT_CREATE_APP_FOLDER" />
        <string id="Maps.Descriptions.AT_DELETE_APP_FOLDER" value="AT_DELETE_APP_FOLDER" />
        <string id="Maps.Descriptions.AT_UPDATE_APP_FOLDER" value="AT_UPDATE_APP_FOLDER" />
        <string id="Maps.Descriptions.AT_FORCE_DELETE_APP_FOLDER" value="AT_FORCE_DELETE_APP_FOLDER" />
        <string id="Maps.Descriptions.AT_MOVE_APP_FOLDER" value="AT_MOVE_APP_FOLDER" />
        <string id="Maps.Descriptions.AT_COPY_APP_FILES" value="AT_COPY_APP_FILES" />
        <string id="Maps.Descriptions.AT_MOVE_SD_FOLDER" value="AT_MOVE_SD_FOLDER" />
        <string id="Maps.Descriptions.AT_MOVE_SD_CLEANUP" value="AT_MOVE_SD_CLEANUP" />
        <string id="Maps.Descriptions.AT_RETRIEVE_APP_INFO" value="AT_RETRIEVE_APP_INFO" />
        <string id="Maps.Descriptions.AT_INSERT_DB_RECORDS" value="AT_INSERT_DB_RECORDS" />
        <string id="Maps.Descriptions.AT_DELETE_DB_RECORDS" value="AT_DELETE_DB_RECORDS" />
        <string id="Maps.Descriptions.AT_FORCE_DELETE_DB_RECORDS" value="AT_FORCE_DELETE_DB_RECORDS" />
        <string id="Maps.Descriptions.AT_UPDATE_DB_RECORDS" value="AT_UPDATE_DB_RECORDS" />
        <string id="Maps.Descriptions.AT_FINALIZE_DB_STATE" value="AT_FINALIZE_DB_STATE" />
        <string id="Maps.Descriptions.AT_FIX_INSERT_RECORD" value="AT_FIX_INSERT_RECORD" />
        <string id="Maps.Descriptions.AT_FIX_UPDATE_RECORD" value="AT_FIX_UPDATE_RECORD" />
        <string id="Maps.Descriptions.AT_FIX_UPDATE_LICENSE_RECORD" value="AT_FIX_UPDATE_LICENSE_RECORD" />
        <string id="Maps.Descriptions.AT_UPDATE_SD_MOVE_DB_RECORDS" value="AT_UPDATE_SD_MOVE_DB_RECORDS" />
        <string id="Maps.Descriptions.AT_ADD_LICENSE" value="AT_ADD_LICENSE" />
        <string id="Maps.Descriptions.AT_DELETE_LICENSE" value="AT_DELETE_LICENSE" />
        <string id="Maps.Descriptions.AT_FORCE_DELETE_LICENSE" value="AT_FORCE_DELETE_LICENSE" />
        <string id="Maps.Descriptions.AT_UPDATE_LICENSE" value="AT_UPDATE_LICENSE" />
        <string id="Maps.Descriptions.AT_INSTALL_UPDATED_LICENSE" value="AT_INSTALL_UPDATED_LICENSE" />
        <string id="Maps.Descriptions.AT_VERIFY_ENTERPRISE_ID" value="AT_VERIFY_ENTERPRISE_ID" />
        <string id="Maps.Descriptions.AT_CODEINTEGRITY" value="AT_CODEINTEGRITY" />
        <string id="Maps.Descriptions.AT_TERMINATE_UNINSTALL_APP" value="AT_TERMINATE_UNINSTALL_APP" />
        <string id="Maps.Descriptions.AT_TERMINATE_UPDATE_APP" value="AT_TERMINATE_UPDATE_APP" />
        <string id="Maps.Descriptions.AT_TERMINATE_SD_MOVE_APP" value="AT_TERMINATE_SD_MOVE_APP" />
        <string id="Maps.Descriptions.AT_DECRYPT_EXAP" value="AT_DECRYPT_EXAP" />
        <string id="Maps.Descriptions.AT_SQLCE_DB_REINDEX" value="AT_SQLCE_DB_REINDEX" />
        <string id="Maps.Descriptions.AT_FINISH_INSTALLER_WORKER" value="AT_FINISH_INSTALLER_WORKER" />
        <string id="Maps.Descriptions.AT_REGISTRY_PROVISIONING" value="AT_REGISTRY_PROVISIONING" />
        <string id="Maps.Descriptions.AT_REGISTRY_DEPROVISIONING" value="AT_REGISTRY_DEPROVISIONING" />
        <string id="Maps.Descriptions.AT_UPDATE_REGISTRY_PROVISIONING" value="AT_UPDATE_REGISTRY_PROVISIONING" />
        <string id="Maps.Descriptions.AT_XBF_GENERATOR" value="AT_XBF_GENERATOR" />
        <string id="Maps.Descriptions.AT_WNS_REGISTRATION" value="AT_WNS_REGISTRATION" />
        <string id="Maps.Descriptions.AT_WNS_DEREGISTRATION" value="AT_WNS_DEREGISTRATION" />
        <string id="Maps.Descriptions.AT_BEGIN_BACKUP_RESTORE" value="AT_BEGIN_BACKUP_RESTORE" />
        <string id="Maps.Descriptions.AT_FINISH_BACKUP_RESTORE" value="AT_FINISH_BACKUP_RESTORE" />
        <string id="Maps.Descriptions.AT_BEGIN_LIGHTUP_INSTALL" value="AT_BEGIN_LIGHTUP_INSTALL" />
        <string id="Maps.Descriptions.AT_CHECK_LIGHTUP_MANIFEST" value="AT_CHECK_LIGHTUP_MANIFEST" />
        <string id="Maps.Descriptions.AT_PROCESS_LIGHTUP" value="AT_PROCESS_LIGHTUP" />
        <string id="Maps.Descriptions.AT_STAGE_DATA" value="AT_STAGE_DATA" />
        <string id="Maps.Descriptions.AT_REGISTER_MODERN" value="AT_REGISTER_MODERN" />
        <string id="Maps.Descriptions.AT_BEGIN_LIGHTUP_UPDATE" value="AT_BEGIN_LIGHTUP_UPDATE" />
        <string id="Maps.Descriptions.AT_UNREGISTER_LIGHTUP" value="AT_UNREGISTER_LIGHTUP" />
        <string id="Maps.Descriptions.AT_MIGRATE_DATA" value="AT_MIGRATE_DATA" />
        <string id="Maps.Descriptions.AT_POLICY_CHECK" value="AT_POLICY_CHECK" />
        <string id="Maps.Descriptions.AT_PARSE_CACHE_TOKEN" value="AT_PARSE_CACHE_TOKEN" />
        <string id="Maps.Descriptions.AT_BEGIN_SD_LIGHTUP_MOVE" value="AT_BEGIN_SD_LIGHTUP_MOVE" />
        <string id="Maps.Descriptions.AT_SD_LIGHTUP_MOVE_STAGE" value="AT_SD_LIGHTUP_MOVE_STAGE" />
        <string id="Maps.Descriptions.AT_SD_LIGHTUP_MOVE_REPROVISION" value="AT_SD_LIGHTUP_MOVE_REPROVISION" />
        <string id="Maps.Descriptions.AT_SD_LIGHTUP_MOVE_PROCESS_RESOURCE_PATH" value="AT_SD_LIGHTUP_MOVE_PROCESS_RESOURCE_PATH" />
        <string id="Maps.Descriptions.AT_SD_LIGHTUP_MOVE_UPDATE_DB" value="AT_SD_LIGHTUP_MOVE_UPDATE_DB" />
        <string id="Maps.Descriptions.AT_SD_LIGHTUP_MOVE_MOVE_PACKAGE" value="AT_SD_LIGHTUP_MOVE_MOVE_PACKAGE" />
        <string id="Maps.Descriptions.AT_UNDEFINED" value="AT_UNDEFINED" />
        <string id="Maps.Descriptions.MDILSTART" value="MDIL Start" />
        <string id="Maps.Descriptions.MDILSTOP" value="MDIL Completed" />
        <string id="Maps.Descriptions.APPLICATION_INSTALL_NORMAL" value="PM_APPLICATION_INSTALL_NORMAL" />
        <string id="Maps.Descriptions.APPLICATION_INSTALL_IN_ROM" value="PM_APPLICATION_INSTALL_IN_ROM" />
        <string id="Maps.Descriptions.APPLICATION_INSTALL_PA" value="PM_APPLICATION_INSTALL_PA" />
        <string id="Maps.Descriptions.APPLICATION_INSTALL_DEBUG" value="PM_APPLICATION_INSTALL_DEBUG" />
        <string id="Maps.Descriptions.APPLICATION_INSTALL_ENTERPRISE" value="PM_APPLICATION_INSTALL_ENTERPRISE" />
        <string id="Maps.Descriptions.APPLICATION_INSTALL_INVALID" value="PM_APPLICATION_INSTALL_INVALID" />
        <string id="Maps.Descriptions.APP_INSTALL_STARTED" value="APP_INSTALL_STARTED" />
        <string id="Maps.Descriptions.APP_INSTALL_FINISHED" value="APP_INSTALL_FINISHED" />
        <string id="Maps.Descriptions.APP_UPDATE_STARTED" value="APP_UPDATE_STARTED" />
        <string id="Maps.Descriptions.APP_UPDATE_FINISHED" value="APP_UPDATE_FINISHED" />
        <string id="Maps.Descriptions.APP_UNINSTALL_STARTED" value="APP_UNINSTALL_STARTED" />
        <string id="Maps.Descriptions.APP_UNINSTALL_FINISHED" value="APP_UNINSTALL_FINISHED" />
        <string id="Maps.Descriptions.APP_UPDATELICENSE_STARTED" value="APP_UPDATELICENSE_STARTED" />
        <string id="Maps.Descriptions.APP_UPDATELICENSE_FINISHED" value="APP_UPDATELICENSE_FINISHED" />
        <string id="Maps.Descriptions.APP_DOWNLOAD_STARTED" value="APP_DOWNLOAD_STARTED" />
        <string id="Maps.Descriptions.APP_DOWNLOAD_INPROGRESS" value="APP_DOWNLOAD_INPROGRESS" />
        <string id="Maps.Descriptions.APP_DOWNLOAD_FINISHED" value="APP_DOWNLOAD_FINISHED" />
        <string id="Maps.Descriptions.APP_INSTALL_INPROGRESS" value="APP_INSTALL_INPROGRESS" />
        <string id="Maps.Descriptions.APP_UPDATE_INPROGRESS" value="APP_UPDATE_INPROGRESS" />
        <string id="Maps.Descriptions.APP_REVOKELICENSE_STARTED" value="APP_REVOKELICENSE_STARTED" />
        <string id="Maps.Descriptions.APP_REVOKELICENSE_FINISHED" value="APP_REVOKELICENSE_FINISHED" />
        <string id="Maps.Descriptions.APP_FRAMEWORK_INSTALL_STARTED" value="APP_FRAMEWORK_INSTALL_STARTED" />
        <string id="Maps.Descriptions.APP_FRAMEWORK_INSTALL_FINISHED" value="APP_FRAMEWORK_INSTALL_FINISHED" />
        <string id="Maps.Descriptions.APP_DISABLED_SD_CARD" value="APP_DISABLED_SD_CARD" />
        <string id="Maps.Descriptions.APP_DISABLED_ENTERPRISE" value="APP_DISABLED_ENTERPRISE" />
        <string id="Maps.Descriptions.APP_ENABLED" value="APP_ENABLED" />
        <string id="Maps.Descriptions.APP_MOVE_STARTED" value="APP_MOVE_STARTED" />
        <string id="Maps.Descriptions.APP_MOVE_INPROGRESS" value="APP_MOVE_INPROGRESS" />
        <string id="Maps.Descriptions.APP_MOVE_FINISHED" value="APP_MOVE_FINISHED" />
        <string id="Maps.Descriptions.APP_RESTORE_STARTED" value="APP_RESTORE_STARTED" />
        <string id="Maps.Descriptions.APP_RESTORE_FINISHED" value="APP_RESTORE_FINISHED" />
        <string id="Maps.Descriptions.APP_DISABLED_BACKING_UP" value="APP_DISABLED_BACKING_UP" />
        <string id="Maps.Descriptions.APP_DOWNLOAD_STATUS_UPDATE" value="APP_DOWNLOAD_STATUS_UPDATE" />
        <string id="Maps.Descriptions.APP_DISABLED_MDIL_BINDING" value="APP_DISABLED_MDIL_BINDING" />
        <string id="Maps.Descriptions.TILE_CREATED" value="TILE_CREATED" />
        <string id="Maps.Descriptions.TILE_DELETED" value="TILE_DELETED" />
        <string id="Maps.Descriptions.TILE_UPDATED" value="TILE_UPDATED" />
        <string id="Maps.Descriptions.TILE_APPVISIBLE" value="TILE_APPVISIBLE" />
        <string id="Maps.Descriptions.TILE_APPINVISIBLE" value="TILE_APPINVISIBLE" />
        <string id="Maps.Descriptions.TILE_PINNED" value="TILE_PINNED" />
        <string id="Maps.Descriptions.TILE_UNPINNED" value="TILE_UNPINNED" />
        <string id="Maps.Descriptions.TILE_MAX" value="TILE_MAX" />
        <string id="Maps.Descriptions.TILE_INVALID" value="TILE_INVALID" />
        <string id="Maps.Descriptions.Sample1" value="Sample map value 1" />
        <string id="Maps.Descriptions.Sample2" value="Sample map value 2" />
        <string id="Maps.BssRecurringType.None" value="None" />
        <string id="Maps.BssRecurringType.Daily" value="Daily" />
        <string id="Maps.BssRecurringType.Weekly" value="Weekly" />
        <string id="Maps.BssRecurringType.Monthly" value="Monthly" />
        <string id="Maps.BssRecurringType.EndOfMonth" value="End of Month" />
        <string id="Maps.BssRecurringType.Yearly" value="Yearly" />
        <string id="Maps.BssRecurringType.Maximum" value="Maximum" />
        <string id="Maps.BssNotificationType.TimeBasedAlarm" value="TimeBasedAlarm" />
        <string id="Maps.BssNotificationType.TimeBasedReminder" value="TimeBasedReminder" />
        <string id="Maps.BssNotificationType.PeriodicTask" value="PeriodicTask" />
        <string id="Maps.BssNotificationType.OnIdleTask" value="OnIdleTask" />
        <string id="Maps.BssNotificationType.KeepAliveTask" value="KeepAliveTask" />
        <string id="Maps.BssNotificationType.IncomingCallTask" value="IncomingCallTask" />
        <string id="Maps.BssNotificationType.NabSyncTask" value="NabSyncTask" />
        <string id="Maps.BssNotificationType.Maximum" value="Maximum" />
        <string id="Maps.BssNotificationState.Scheduled" value="Scheduled" />
        <string id="Maps.BssNotificationState.Completed" value="Completed" />
        <string id="Maps.BssNotificationState.Disabled" value="Disabled" />
        <string id="Maps.BssNotificationState.Maximum" value="Maximum" />
        <string id="Maps.BssEventHandlerType.CheckAll" value="CheckAll" />
        <string id="Maps.BssEventHandlerType.TimerManager" value="TimerManager" />
        <string id="Maps.BssEventHandlerType.PeriodicTaskLaunching" value="PeriodicTaskLaunching" />
        <string id="Maps.BssEventHandlerType.PeriodicTaskCancelling" value="PeriodicTaskCancelling" />
        <string id="Maps.BssEventHandlerType.OnIdleLaunching" value="OnIdleLaunching" />
        <string id="Maps.BssEventHandlerType.OnIdleCancelling" value="OnIdleCancelling" />
        <string id="Maps.BssEventHandlerType.KeepAlivePeriodicLaunching" value="KeepAlivePeriodicLaunching" />
        <string id="Maps.BssEventHandlerType.KeepAliveNetworkOn" value="KeepAliveNetworkOn" />
        <string id="Maps.BssEventHandlerType.KeepAliveBatterySaverLaunching" value="KeepAliveBatterySaverLaunching" />
        <string id="Maps.BssEventHandlerType.DebuggerEvent" value="DebuggerEvent" />
        <string id="Maps.BssEventHandlerType.Last" value="Last" />
        <string id="Maps.BssNotificationDescription.CreateNotification" value="Create Notification" />
        <string id="Maps.BssNotificationDescription.DeleteNotification" value="Delete Notification" />
        <string id="Maps.BssNotificationDescription.ExpireNotification" value="Expire Notification" />
        <string id="Maps.BssNotificationDescription.LaunchNotification" value="Launch Notification" />
        <string id="Maps.BssNotificationDescription.UpdateNotification" value="Update Notification" />
        <string id="Maps.BssNotificationDescription.CancelNotification" value="Cancel Notification" />
        <string id="Maps.BssNotificationDescription.DisableNotification" value="Disable Notification" />
        <string id="Maps.BssNotificationDescription.EnableNotification" value="Enable Notification" />
        <string id="Maps.BssNotificationDescription.AimVerifyNotification" value="Verified Notification with AIM" />
        <string id="Maps.BssNotificationDescription.CleanTimer" value="Don't try to launch a running task but just clean out the timer" />
        <string id="Maps.BssNotificationDescription.NoLaunchExpiredTask" value="Don't launch the expired task" />
        <string id="Maps.BssNotificationDescription.RemoveBecauseOfAbort" value="Take it off from schedule since Abort() is called" />
        <string id="Maps.BssNotificationDescription.MarkCompletedGbaExpired" value="Mark the task as complete since it is expired" />
        <string id="Maps.BssNotificationDescription.RemoveBecauseOfUnhandledExceptions" value="Take it off from schedule due to multiple unhandled exceptions" />
        <string id="Maps.BssNotificationDescription.CancelScheduledTask" value="Cancel scheduled task" />
        <string id="Maps.BssNotificationDescription.UpdateTaskStatus" value="Updated task status" />
        <string id="Maps.BssNotificationDescription.SentRequestToAim" value="Sent request to AIM to launch task" />
        <string id="Maps.BssNotificationDescription.NoLaunchCompletedOrRunningTask" value="Don't launch the completed task or a running task" />
        <string id="Maps.BssNotificationDescription.ScheduledTaskLaunchResult" value="Scheduled task launch result" />
        <string id="Maps.SqmTaskType.Invalid" value="Invalid" />
        <string id="Maps.SqmTaskType.ForegroundApp" value="ForegroundApp" />
        <string id="Maps.SqmTaskType.Cbe" value="Cbe" />
        <string id="Maps.SqmTaskType.ForegroundAgent" value="ForegroundAgent" />
        <string id="Maps.SqmTaskType.GbaPeriodic" value="GbaPeriodic" />
        <string id="Maps.SqmTaskType.GbaIdle" value="GbaIdle" />
        <string id="Maps.SqmTaskType.BackgroundAudio" value="BackgroundAudio" />
        <string id="Maps.SqmTaskType.BackgroundWorker" value="BackgroundWorker" />
        <string id="Maps.SqmTaskType.Voip" value="Voip" />
        <string id="Maps.SqmTaskType.Oem" value="Oem" />
        <string id="Maps.SqmTaskState.Invalid" value="Invalid" />
        <string id="Maps.SqmTaskState.Started" value="Started" />
        <string id="Maps.SqmTaskState.Paused" value="Paused" />
        <string id="Maps.SqmTaskState.Resumed" value="Resumed" />
        <string id="Maps.SqmTaskState.MovedToBackground" value="MovedToBackground" />
        <string id="Maps.SqmTaskState.RunUnderLock" value="RunUnderLock" />
        <string id="Maps.SqmTaskStateTransition.Invalid" value="Invalid" />
        <string id="Maps.SqmTaskStateTransition.OK" value="OK" />
        <string id="Maps.SqmTaskStateTransition.Abort" value="Abort" />
        <string id="Maps.SqmTaskStateTransition.Unexpected" value="Unexpected" />
        <string id="Maps.SqmTaskStateTransition.ExceededRuntime" value="ExceededRuntime" />
        <string id="Maps.SqmTaskStateTransition.ResourcesSeized" value="ResourcesSeized" />
        <string id="Maps.SqmTaskStateTransition.Paused" value="Paused" />
        <string id="Maps.SqmTaskStateTransition.Resumed" value="Resumed" />
        <string id="Maps.SqmTaskStateTransition.ScreenLock" value="ScreenLock" />
        <string id="Maps.SqmTaskStateTransition.ScreenUnlocked" value="ScreenUnlocked" />
        <string id="Maps.SqmTaskStateTransition.MovedToBackground" value="MovedToBackground" />
        <string id="Maps.SqmTaskStateTransition.CbeExitTimeout" value="CbeExitTimeout" />
        <string id="Maps.SqmTaskStateTransition.CbeExitBatterySaver" value="CbeExitBatterySaver" />
        <string id="Maps.SqmTaskStateTransition.CbeExitParallelAgentPolicy" value="CbeExitParallelAgentPolicy" />
        <string id="Maps.SqmTaskStateTransition.CbeExitResourcesUnavailable" value="CbeExitResourcesUnavailable" />
        <string id="Maps.SqmTaskStateTransition.CbeExitControlPanel" value="CbeExitControlPanel" />
        <string id="Maps.SqmTaskStateTransition.CbeExitBandwidthSavings" value="CbeExitBandwidthSavings" />
        <string id="Maps.TaskHostModule.HeadlessHost" value="HeadlessHost" />
        <string id="Maps.TaskHostModule.TaskHost" value="TaskHost" />
        <string id="Maps.TaskHostModule.XcpHost" value="XcpHost" />
        <string id="Maps.TaskHostModule.TaskHostSvcs" value="TaskHostSvcs" />
        <string id="Maps.TaskHostModule.TaskHostUnitTests" value="TaskHostUnitTests" />
        <string id="ShareBroker.InvokeFlow" value="ShareBroker: InvokeFlow(HWND=%1)" />
        <string id="ShareBroker.Error" value="ShareBroker Error: %1:%2 [HRESULT=%3]" />
        <string id="ShareBroker.BeginFetchDataPackage" value="ShareBroker: Fetch Data Package [BEGIN]" />
        <string id="ShareBroker.EndFetchDataPackage" value="ShareBroker: Fetch Data Package [END]" />
        <string id="ShareBroker.LaunchingSharePicker" value="ShareBroker: Launching Share Picker" />
        <string id="ShareBroker.CallerNotAppContainer" value="ShareBroker: Caller (PID=%1) is not in AppContainer" />
        <string id="ShareBroker.SFToDSSToken" value="ShareBroker: SF (%0) converting to DSS token (readonly=%1)" />
        <string id="ShareBroker.ReportTargetStarted" value="ShareBroker: ReportTargetStarted - Share Entry %1" />
        <string id="ShareBroker.ReportTargetRetrievedData" value="ShareBroker: ReportTargetRetrievedData - Share Entry %1" />
        <string id="ShareBroker.ReportTargetSubmittedBackgroundTask" value="ShareBroker: ReportTargetSubmittedBackgroundTask - Share Entry %1" />
        <string id="ShareBroker.ReportTargetCompleted" value="ShareBroker: ReportTargetCompleted - Share Entry %1" />
        <string id="ShareBroker.DismissUI" value="ShareBroker: DismissUI - Share Entry %1" />
        <string id="ShareBroker.ReportTargetError" value="ShareBroker: ReportTargetStarted - Share Entry %0" />
        <string id="ShareBroker.RunningShareEntryCreate" value="ShareBroker: Sharing Entry Create %1 AUMID = %2 (PID=%3)" />
        <string id="ShareBroker.RunningShareEntryDestroy" value="ShareBroker: Sharing Entry Destroy %1" />
        <string id="ShareBroker.HandleTargetCrash" value="ShareBroker: Handle Target Crash %1 (PID=%2)" />
        <string id="ShareBroker.CreatedBackgroundWorkItem" value="ShareBroker: Created Background Work Item (ID=%1)" />
        <string id="ShareBroker.CancelBackgroundWorkItem" value="ShareBroker: Canceled Background Work Item (ID=%1)" />
        <string id="ShareBroker.CancelBackgroundWorkItemFailed" value="ShareBroker: Canceled Background Work Item Failed (ID=%1, Status=%2)" />
        <string id="ShareBroker.BeginDataPackageClone" value="ShareBroker: DataPackage Clone [BEGIN]" />
        <string id="ShareBroker.EndDataPackageClone" value="ShareBroker: DataPackage Clone [END]" />
        <string id="ShareBroker.ReleaseDeferralFailed" value="ShareBroker: DataPackageHost Deferral Release Failed (hr=%1)" />
        <string id="ShareBroker.ShareUICancelled" value="ShareBroker: ShareUI Cancelled" />
        <string id="PlatformInterop.MethodExitMessage" value="[%1] HResult = [%2]%n" />
        <string id="PlatformInterop.Error" value="Push (Error): [%1]%n" />
        <string id="TaskHost.TaskHandlerPrintParams" value="%1 - [%2 = %3]\n" />
        <string id="TaskHost.ConfigParamParse" value="%1 - Parsing config file [%2] file size = %3.  Parse = %4" />
        <string id="TaskHost.OnTaskModelMessage" value="%1 - OnTaskModelMessage: Dispatching EM message" />
        <string id="TaskHost.TaskHandlerInitialize" value="%1 - InitializeTaskHost URI=%2, Page=%3, TaskId=%4" />
        <string id="TaskHost.TaskHandlerResumeTask" value="%1 - Resuming Task from dehydration" />
        <string id="TaskHost.TaskHandlerGetTaskHandler" value="%1 - TaskHandler::GetTaskHandler hr=%2" />
        <string id="TaskHost.InitEnter" value="%1 - TaskHost Init" />
        <string id="TaskHost.InitExit" value="%1 - TaskHost Init hr = %2" />
        <string id="TaskHost.HostDispatcherExitting" value="%1 - Host Dispatcher Exiting hr = %2" />
        <string id="TaskHost.TaskHandlerReadyReceived" value="%1 - TaskHandlerReady received" />
        <string id="TaskHost.StartTask" value="%1 - StartTask TaskId=%2" />
        <string id="TaskHost.PauseTask" value="%1 - PauseTask TaskId=%2" />
        <string id="TaskHost.ResumeTask" value="%1 - ResumeTask TaskId=%2" />
        <string id="TaskHost.OnTaskHandlerVisible" value="%1 - OnTaskHandlerVisible received" />
        <string id="TaskHost.OnTaskHandlerHidden" value="%1 - OnTaskHandlerHidden received" />
        <string id="TaskHost.BackgroundExecutionCallbackEnter" value="%1 - BackgroundExecutionCallback TaskId[%2] Command[%3]" />
        <string id="TaskHost.BackgroundExecutionCallbackExit" value="%1 - BackgroundExecutionCallback hr=%2" />
        <string id="TaskHost.OnHostRunningEnter" value="%1 - OnHostRunning" />
        <string id="TaskHost.OnHostRunningExit" value="%1 - OnHostRunning. hr = %2" />
        <string id="TaskHost.TryDehydrateHostEnter" value="%1 - Dehydrating. dehydrateGracefully = %2" />
        <string id="TaskHost.TryDehydrateHostGracefully" value="%1 - Gracefully dehydrating TaskHost" />
        <string id="TaskHost.TryDehydrateHostExit" value="%1 - TryDehydrateHost. hr = %2" />
        <string id="TaskHost.DehydrateHost" value="%1 - DehydrateHost event triggered" />
        <string id="TaskHost.WaitForUnfreeze" value="%1 - WaitForUnfreeze hr = %2" />
        <string id="TaskHost.ReduceMemoryHostCallback" value="%1 - ReduceMemoryHostCallback hr = %2" />
        <string id="TaskHost.GracefulTearDownFailed" value="%1 - Graceful tear-down failed" />
        <string id="TaskHost.BeforeHostRunningInBackgroundCallbackEnter" value="%1 - BeforeHostRunningInBackgroundCallback" />
        <string id="TaskHost.BeforeHostRunningInBackgroundCallbackExit" value="%1 - BeforeHostRunningInBackgroundCallback. hr = %2" />
        <string id="TaskHost.AfterHostRunningInBackgroundCallbackEnter" value="%1 - AfterHostRunningInBackgroundCallback" />
        <string id="TaskHost.AfterHostRunningInBackgroundCallbackExit" value="%1 - AfterHostRunningInBackgroundCallback. hr = %2" />
        <string id="TaskHost.OnUnhandledException" value="%1 - Unhandled exception occurred. hr = %2" />
        <string id="TaskHost.StateChangeEvent" value="%1 - State-Transition (%2)-&gt;(%3)" />
        <string id="TaskHost.EnableProfiling" value="%1 - EnableProfiling = [%2]" />
        <string id="TaskHost.ProfileDll" value="%1 - Profile Dll = [%2]" />
        <string id="TaskHost.ProfilerCLSID" value="%1 - ProfilerCLSID = [%2]" />
        <string id="TaskHost.SetProfilerSettings" value="%1 - TaskHostHelper::SetProfilerSettings hr = %2" />
        <string id="TaskHost.GetFolderSizeFilePath" value="%1 - File path = %2 : %3" />
        <string id="TaskHost.ParseDebugSettingsXmlElement" value="%1 - Parse Element: %2." />
        <string id="TaskHost.ParseDebugSettingsXmlElementValue" value="%1 - Parse Element Value = %2 with pwszLocalName = %3." />
        <string id="TaskHost.ParseDebugSettingsXmlResult" value="%1 - Parse HResult = %2" />
        <string id="TaskHost.GACAssemblyFailed" value="%1 - YUTHost: failed to GAC trusted assembly %2\r\n" />
        <string id="TaskHost.UITaskHandlerInit" value="%1 - UITaskHandler::Initialize. hr = %2" />
        <string id="TaskHost.UITaskHandlerDisconnect" value="%1 - UITaskHandler::Disconnect done" />
        <string id="TaskHost.UITaskHandlerGoBackground" value="%1 - UITaskHandler::GoBackground. hr = %2" />
        <string id="TaskHost.UITaskHandlerGoForeground" value="%1 - UITaskHandler::GoForeground. hr = %2" />
        <string id="TaskHost.UITaskHandlerManagedFrameworkReady" value="%1 - Managed Framework Ready. Handling Pending Event:[%2]" />
        <string id="TaskHost.UITaskHandlerHandlePendingEventsStart" value="%1 - HandlePendingEvents Start TaskId=%2" />
        <string id="TaskHost.UITaskHandlerHandlePendingEventsPause" value="%1 - HandlePendingEvents Pause TaskId=%2" />
        <string id="TaskHost.UITaskHandlerHandlePendingEventsResume" value="%1 - HandlePendingEvents Resume TaskId=%2" />
        <string id="TaskHost.UITaskHandlerWaitingForSiblings" value="%1 - Waiting for Siblings..." />
        <string id="TaskHost.UITaskHandlerWaitingForSiblingsDone" value="%1 - Waiting for Siblings done. hr = %2" />
        <string id="TaskHost.UITaskHandlerOnRuntimeHostReadyEnter" value="%1 - UITaskHandler::OnRuntimeHostReady TaskID:[%2]" />
        <string id="TaskHost.UITaskHandlerOnRuntimeHostReadySystemKeyPress" value="%1 - UITaskHandler::OnRuntimeHostReady. Processed pending SystemKeyPress [%2]" />
        <string id="TaskHost.UITaskHandlerOnRuntimeHostReadyExit" value="%1 - UITaskHandler::OnRuntimeHostReady hr = %2" />
        <string id="TaskHost.UITaskHandlerRegistrationComplete" value="%1 - UITaskHandler::RegistrationComplete hr = %2" />
        <string id="TaskHost.UITaskHandlerConnectionCompleteEnter" value="%1 - UITaskHandler::ConnectionComplete received" />
        <string id="TaskHost.UITaskHandlerConnectionCompleteExit" value="%1 - UITaskHandler::ConnectionComplete hr = %2" />
        <string id="TaskHost.AgTaskHandlerConnectionCompleteEnter" value="%1 - AgTaskHandler::ConnectionComplete received" />
        <string id="TaskHost.AgTaskHandlerConnectionCompleteExit" value="%1 - AgTaskHandler::ConnectionComplete hr = %2" />
        <string id="TaskHost.UITaskHandlerProcessActivationDataEnter" value="%1 - UITaskHandler::ProcessActivationData received, reason=%2" />
        <string id="TaskHost.UITaskHandlerProcessActivationDataExit" value="%1 - UITaskHandler::ProcessActivationData hr = %2" />
        <string id="TaskHost.UITaskHandlerShowEnter" value="%1 - UITaskHandler::Show received. Direction:[%2]" />
        <string id="TaskHost.UITaskHandlerShowQueuing" value="%1 - Navigation in progress. Queuing up the Show" />
        <string id="TaskHost.UITaskHandlerShowExit" value="%1 - UITaskHandler::Show hr = %2" />
        <string id="TaskHost.UITaskHandlerShowInternalEnter" value="%1 - UITaskHandler::ShowInternal. Direction:[%2:NavigationDirection:]" />
        <string id="TaskHost.UITaskHandlerShowInternalExit" value="%1 - UITaskHandler::ShowInternal. hr = %2" />
        <string id="TaskHost.UITaskHandlerHideEnter" value="%1 - UITaskHandler::Hide received. Direction:[%2]" />
        <string id="TaskHost.UITaskHandler" value="%1 - Navigation in progress. Cancelling Show and ignoring Hide" />
        <string id="TaskHost.UITaskHandlerHideExit" value="%1 - UITaskHandler::Hide hr = %2" />
        <string id="TaskHost.UITaskHandlerNavigateToEnter" value="%1 - UITaskHandler::NavigateTo received TaskID:[%2]" />
        <string id="TaskHost.UITaskHandlerNavigateToExit" value="%1 - UITaskHandler::NavigateTo. hr = %2" />
        <string id="TaskHost.UITaskHandlerNavigationCompleteEnter" value="%1 - UITaskHandler::NavigationComplete TaskID:[%2]" />
        <string id="TaskHost.UITaskHandlerNavigationCompleteExit" value="%1 - UITaskHandler::NavigationComplete hr = %2" />
        <string id="TaskHost.UITaskHandlerNavigateAwayEnter" value="%1 - UITaskHandler::NavigateAway received TaskID:[%2]" />
        <string id="TaskHost.UITaskHandlerNavigateAwayInterrupted" value="%1 - Navigation interrupted since Task is closing" />
        <string id="TaskHost.UITaskHandlerNavigateAwayQueuing" value="%1 - Navigation in progress. Queuing up the NavigateAway" />
        <string id="TaskHost.UITaskHandlerNavigateAwayExit" value="%1 - UITaskHandler::NavigateAway hr = %2" />
        <string id="TaskHost.UITaskHandlerNavigateAwayInternalEnter" value="%1 - UITaskHandler::NavigateAwayInternal TaskID:[%2]" />
        <string id="TaskHost.UITaskHandlerNavigateAwayInternalExit" value="%1 - UITaskHandler::NavigateAwayInternal hr = %2" />
        <string id="TaskHost.UITaskHandlerRequestCloseEnter" value="%1 - UITaskHandler::RequestClose called TaskID:[%2]" />
        <string id="TaskHost.UITaskHandlerRequestCloseExit" value="%1 - UITaskHandler::RequestClose hr = %2" />
        <string id="TaskHost.UITaskHandlerRequestNavigateBackEnter" value="%1 - UITaskHandler::RequestNavigateBack called TaskID:[%2]" />
        <string id="TaskHost.UITaskHandlerRequestNavigateBackExit" value="%1 - UITaskHandler::RequestNavigateBack hr = %2" />
        <string id="TaskHost.UITaskHandlerLaunchSessionInProgress" value="%1 - LaunchSession in progress. Cannot add another callback" />
        <string id="TaskHost.UITaskHandlerLaunchSession" value="%1 - UITaskHandler::LaunchSession hr = %2" />
        <string id="TaskHost.UITaskHandlerLaunchChildTaskInProgress" value="%1 - LaunchChildTask in progress. Cannot add another callback" />
        <string id="TaskHost.UITaskHandlerLaunchChildTask" value="%1 - UITaskHandler::LaunchChildTask hr = %2" />
        <string id="TaskHost.UITaskHandlerLaunchModernChooser" value="%1 - UITaskHandler::LaunchModernChooser hr = %2" />
        <string id="TaskHost.UITaskHandlerSetPauseOnLockEnter" value="%1 - UITaskHandler::SetPauseOnLock[%2] called TaskID:[%3]" />
        <string id="TaskHost.UITaskHandlerSetPauseOnLockExit" value="%1 - UITaskHandler::SetPauseOnLock hr = %2" />
        <string id="TaskHost.UITaskHandlerSetFullScreenEnter" value="%1 - UITaskHandler::SetFullScreen[%2] called TaskID:[%3]" />
        <string id="TaskHost.UITaskHandlerSetFullScreenExit" value="%1 - UITaskHandler::SetFullScreen hr = %2" />
        <string id="TaskHost.UITaskHandlerCloseEnter" value="%1 - UITaskHandler::Close received TaskID:[%2]" />
        <string id="TaskHost.UITaskHandlerCloseExit" value="%1 - UITaskHandler::Close hr = %2" />
        <string id="TaskHost.UITaskHandlerSystemKeyPressedEnter" value="%1 - UITaskHandler::SystemKeyPressed received: [%2]" />
        <string id="TaskHost.UITaskHandlerSystemKeyPressedProcessed" value="%1 - UITaskHandler::SystemKeyPressed processed" />
        <string id="TaskHost.UITaskHandlerSystemKeyPressedPending" value="%1 - UITaskHandler::SystemKeyPressed pending. Will be processed on RuntimeHost ready" />
        <string id="TaskHost.UITaskHandlerLaunchChildTaskCompleteEnter" value="%1 - UITaskHandler::LaunchChildTaskComplete received with result %2" />
        <string id="TaskHost.UITaskHandlerLaunchChildTaskCompleteExit" value="%1 - UITaskHandler::LaunchChildTaskComplete result:%2 hr = %3" />
        <string id="TaskHost.UITaskHandlerLaunchSessionCompleteEnter" value="%1 - UITaskHandler::LaunchSessionComplete received with result %2" />
        <string id="TaskHost.UITaskHandlerLaunchSessionCompleteExit" value="%1 - UITaskHandler::LaunchChildTaskComplete result:%2 hr = %3" />
        <string id="TaskHost.UITaskHandlerPropertyChanged" value="%1 - OrientationChanged NewOrientation=%2" />
        <string id="TaskHost.UITaskHandlerPropertyChangedWarning" value="%1 - OrientationChange received before RuntimeHostTask is set" />
        <string id="TaskHost.UITaskHandlerApplicationLayerPropertyChanged" value="%1 - ApplicationLayerChanged NewApplicationLayer=%2" />
        <string id="TaskHost.UITaskHandlerApplicationLayerPropertyChangedWarning" value="%1 - ApplicationLayerChange received before RuntimeHostTask is set" />
        <string id="TaskHost.UITaskHandlerSetSupportedOrientations" value="%1 - SetSupportedOrientations. SupportedOrientations:[%2]. hr = %3" />
        <string id="TaskHost.UITaskHandlerGetSupportedOrientations" value="%1 - GetSupportedOrientations. SupportedOrientations[%2]. hr = %3" />
        <string id="TaskHost.UITaskHandlerGetCurrentOrientation" value="%1 - GetCurrentOrientation. CurrentOrientation[%2]. hr = %3" />
        <string id="TaskHost.UITaskHandlerGetSessionDisplayName" value="%1 - GetSessionDisplayName. DisplayName=%2 hr = %3" />
        <string id="TaskHost.UITaskHandlerReplaceTouchEndpoint" value="%1 - UITaskHandler::ReplaceTouchEndpoint hr = %2" />
        <string id="TaskHost.UITaskHandlerReplaceTextEndpoint" value="%1 - UITaskHandler::ReplaceTextEndpoint hr = %2" />
        <string id="TaskHost.UITaskHandlerGetState" value="%1 - UITaskHandler::Get Task State. StateSize[%2]. hr = %3" />
        <string id="TaskHost.UITaskHandlerSetState" value="%1 - UITaskHandler::Set Task State. StateSize[%2]. hr = %3" />
        <string id="TaskHost.UITaskHandlerOnObscurityChange" value="%1 - UITaskHandler::OnObscurityChange[%2]. hr = %3" />
        <string id="TaskHost.UITaskHandlerOnLockScreenVisibilityChange" value="%1 - UITaskHandler::OnLockScreenVisibilityChange[%2]. hr = %3" />
        <string id="TaskHost.UITaskHandlerOnSipVisibilityChange" value="%1 - UITaskHandler::OnSipVisibilityChange[%2]. hr = %3" />
        <string id="TaskHost.UITaskHandlerOnNavigationBarVisibilityChange" value="%1 - UITaskHandler::OnNavigationBarVisibilityChange[%2]. hr = %3" />
        <string id="TaskHost.UITaskHandlerOnShowAnimationComplete" value="%1 - UITaskHandler::OnShowAnimationComplete" />
        <string id="TaskHost.UITaskHandlerWindowPropertyChanged" value="%1 - UITaskHandler::Window.Visible property changed [%2]" />
        <string id="TaskHost.AgTaskHandlerLaunchSession" value="%1 - AgTaskHandler::LaunchSession hr = %2" />
        <string id="TaskHost.AgTaskHandlerLaunchChildTask" value="%1 - AgTaskHandler::LaunchChildTask hr = %2" />
        <string id="TaskHost.FreezeHostCallbackEnter" value="%1 - FreezeHost event triggered" />
        <string id="TaskHost.FreezeHostCallbackExit" value="%1 - FreezeHostCallback failed with hr = %2" />
        <string id="TaskHost.CancelTask" value="%1 - CancelTask TaskId=%2" />
        <string id="TaskHost.OnHostPausing" value="%1 - OnHostPausing" />
        <string id="TaskHost.OnHostPausingFailed" value="%1 - OnHostPausing failed with hr = %2" />
        <string id="TaskHost.OnHostPaused" value="%1 - OnHostPaused" />
        <string id="TaskHost.OnHostPausedFailed" value="%1 - OnHostPaused failed with hr = %2" />
        <string id="TaskHost.FreezeHost" value="%1 - FreezeHost event triggered" />
        <string id="TaskHost.FreezeHostCallbackFailed" value="%1 - FreezeHostCallback failed with hr = %2" />
        <string id="TaskHost.CancelTaskWhileExecuteInBackground" value="%1 - CancelTask received while executing in background" />
        <string id="TaskHost.CancelTaskIgnored" value="%1 - CancelTask received. Ignoring since this is a valid transition only when running in background" />
        <string id="TaskHost.UIHostCancelTask" value="%1 - CancelTask hr = %2" />
        <string id="TaskHost.TpaEntry" value="%1 - TPA entry: %2\\%3%4;" />
        <string id="TaskHost.PlatformAssembliesList" value="%1 - Platform Assemblies List: %2" />
        <string id="TaskHost.ParseManifestFile" value="%1 - ParseManifestFile HResult = %2" />
        <string id="TaskHost.UnableToDisableNIOptimizations" value="%1 - NotifyError ! Unable to disable NI optimizations" />
        <string id="TaskHost.UnableToSetDebuggerWait" value="%1 - NotifyError ! Unable to set the debugger wait env variable" />
        <string id="TaskHost.TestTrustedPath" value="%1 - TestTrustedPath: %2" />
        <string id="TaskHost.TestAppPaths" value="%1 - TestAppPaths: %2" />
        <string id="TaskHost.FailedToSetTestSettings" value="%1 - NotifyError ! Failed to set the test settings" />
        <string id="TaskHost.GetAppPaths" value="%1 - GetAppPaths failed with hr = %2" />
        <string id="TaskHost.CXcpControlHostNotifyError" value="%1 - NotifyError ! message = %2, source = %3" />
        <string id="TaskHost.CXcpControlHostReportUnhandledException" value="%1 - NotifyError ! hr=%2. message = %3" />
        <string id="TaskHost.GetIsoStoreAvailableFreeSpace" value="%1 - GetIsoStoreAvailableFreeSpace hr = %2" />
        <string id="TaskHost.CXcpControlHostApplicationStarted" value="%1 - NotifyEvent XcpHostEvent_ApplicationStarted" />
        <string id="TaskHost.CXcpControlHostApplicationStarting" value="%1 - NotifyEvent XcpHostEvent_ApplicationStarting" />
        <string id="TaskHost.CXcpControlHostXcpHostEventApplicationConstructing" value="%1 - NotifyEvent XcpHostEvent_ApplicationConstructing: Assembly = %2, NotifyEvent Type = %3" />
        <string id="TaskHost.CXcpControlHostXcpHostEventApplicationConstructed" value="%1 - NotifyEvent XcpHostEvent_ApplicationConstructed: Assembly = %2, NotifyEvent Type = %3" />
        <string id="TaskHost.CXcpControlHostXcpHostEventAssemblyLoading" value="%1 - NotifyEvent XcpHostEvent_AssemblyLoading: Assembly = %2" />
        <string id="TaskHost.CXcpControlHostXcpHostEventAssemblyLoaded" value="%1 - NotifyEvent XcpHostEvent_AssemblyLoaded: Assembly = %2" />
        <string id="TaskHost.CXcpControlHostXcpHostEventSourceLoading" value="%1 - NotifyEvent XcpHostEvent_SourceLoading: XAP = %2" />
        <string id="TaskHost.CXcpControlHostXcpHostEventSourceLoaded" value="%1 - NotifyEvent XcpHostEvent_SourceLoaded: XAP = %2" />
        <string id="TaskHost.TaskFirstPresentCompleted" value="%1 - TaskFirstPresentCompleted = %2" />
        <string id="TaskHost.UITaskHandlerFirstPresentCompletedEnter" value="%1 - UITaskHandler::FirstPresentCompleted called TaskID:[%2]" />
        <string id="TaskHost.UITaskHandlerFirstPresentCompletedExit" value="%1 - UITaskHandler::FirstPresentCompleted hr = %2" />
        <string id="TaskHost.GetQualifiedMutexName" value="%1 - GetQualifiedMutexName returned:[%2]. AllowedMutexCount:[%3]\r\n" />
        <string id="TaskHost.XcpHostStart" value="%1 - XcpHost::Start() failed with hr = %2" />
        <string id="TaskHost.XcpHostStop" value="%1 - Shutting down the SL runtime..." />
        <string id="TaskHost.XcpHostPausingBefore" value="%1 - Calling into XcpHost::Pausing %2" />
        <string id="TaskHost.XcpHostPausingAfter" value="%1 - XcpHost::Pausing %2" />
        <string id="TaskHost.XcpHostPauseBefore" value="%1 - Calling into XcpHost::Pause %2" />
        <string id="TaskHost.XcpHostPauseAfter" value="%1 - XcpHost::Pause %2" />
        <string id="TaskHost.XcpHostResumeBefore" value="%1 - Calling into XcpHost::Resume %2" />
        <string id="TaskHost.XcpHostResumeAfter" value="%1 - XcpHost::Resume %2" />
        <string id="TaskHost.XcpHostResumedBefore" value="%1 - Calling into XcpHost::Resumed %2" />
        <string id="TaskHost.XcpHostResumedAfter" value="%1 - XcpHost::Resumed %2" />
        <string id="TaskHost.XcpHostCompleteTaskWIthTaskID" value="%1 - XcpHost::CompleteTask called TaskID:[%2]" />
        <string id="TaskHost.XcpHostCompleteTaskWhenTaskIsNull" value="%1 - CompleteTask called when XcpTask is null. This likely indicates CompleteTask getting called twice" />
        <string id="TaskHost.XcpHostOnApplicationStarted" value="%1 - Error in OnApplicationStarted" />
        <string id="TaskHost.XcpHostOnApplicationConstructing" value="%1 - Error in OnApplicationConstructing" />
        <string id="TaskHost.XcpHostLaunchSession" value="%1 - LaunchSession hr = %2" />
        <string id="TaskHost.XcpHostLaunchChildTask" value="%1 - LaunchChildTask hr = %2" />
        <string id="TaskHost.XcpHostLaunchModernChooser" value="%1 - LaunchChildTask hr = %2" />
        <string id="TaskHost.XcpTaskOnLaunchingBefore" value="%1 - Raising Task.OnLaunching" />
        <string id="TaskHost.XcpTaskOnLaunchingAfter" value="%1 - Raised Task.OnLaunching" />
        <string id="TaskHost.XcpTaskOnPauseBefore" value="%1 - Raising Task.OnPause. PauseReason[%2]" />
        <string id="TaskHost.XcpTaskOnPauseAfter" value="%1 - Raised Task.OnPause" />
        <string id="TaskHost.XcpTaskOnResumeBefore" value="%1 - Raising Task.OnResume. IsExecutionContextPreserved[%2]" />
        <string id="TaskHost.XcpTaskOnResumeAfter" value="%1 - Raised Task.OnResume" />
        <string id="TaskHost.XcpTaskOnRunningInBackgroundBefore" value="%1 - Raising Task.OnRunningInBackground" />
        <string id="TaskHost.XcpTaskOnRunningInBackgroundAfter" value="%1 - Raised Task.OnRunningInBackground" />
        <string id="TaskHost.XcpTaskOnCancelBefore" value="%1 - Raising Task.OnCancel" />
        <string id="TaskHost.XcpTaskOnCancelAfter" value="%1 - Raised Task.OnCancel" />
        <string id="TaskHost.XcpTaskOnHostDehydartingBefore" value="%1 - Raising Task.OnHostDehydarting" />
        <string id="TaskHost.XcpTaskOnHostDehydartingAfter" value="%1 - Raised Task.OnHostDehydarting" />
        <string id="TaskHost.XcpTaskOnNavigateToBefore" value="%1 - Raising Task.OnNavigateTo" />
        <string id="TaskHost.XcpTaskOnNavigateToAfter" value="%1 - Raised Task.OnNavigateTo" />
        <string id="TaskHost.XcpTaskOnRefreshBefore" value="%1 - Raising Task.OnRefresh" />
        <string id="TaskHost.XcpTaskOnRefreshAfter" value="%1 - Raised Task.OnRefresh" />
        <string id="TaskHost.XcpTaskOnNavigateAwayBefore" value="%1 - Raising Task.OnNavigateAway" />
        <string id="TaskHost.XcpTaskOnNavigateAwayAfter" value="%1 - Raised Task.OnNavigateAway" />
        <string id="TaskHost.XcpTaskOnShowBefore" value="%1 - Raising Task.OnShow" />
        <string id="TaskHost.XcpTaskOnShowAfter" value="%1 - Raised Task.OnShow" />
        <string id="TaskHost.XcpTaskOnHideBefore" value="%1 - Raising Task.OnHide" />
        <string id="TaskHost.XcpTaskOnHideAfter" value="%1 - Raised Task.OnHide" />
        <string id="TaskHost.XcpTaskOnSystemKeyPressedBefore" value="%1 - Raising Task.OnSystemKeyPressed" />
        <string id="TaskHost.XcpTaskOnSystemKeyPressedAfter" value="%1 - Raised Task.OnSystemKeyPressed" />
        <string id="TaskHost.XcpTaskOnChildTaskReturnedBefore" value="%1 - Raising Task.OnChildTaskReturned" />
        <string id="TaskHost.XcpTaskOnChildTaskReturnedAfter" value="%1 - Raised Task.OnChildTaskReturned" />
        <string id="TaskHost.XcpTaskOnObscurityChangeBefore" value="%1 - Raising Task.OnObscurityChange" />
        <string id="TaskHost.XcpTaskOnObscurityChangeAfter" value="%1 - Raised Task.OnObscurityChange" />
        <string id="TaskHost.XcpTaskOnLockScreenVisibilityChangeBefore" value="%1 - Raising Task.OnLockScreenVisibilityChange" />
        <string id="TaskHost.XcpTaskOnLockScreenVisibilityChangeAfter" value="%1 - Raised Task.OnLockScreenVisibilityChange" />
        <string id="TaskHost.XcpTaskOnApplicationLayerChangeBefore" value="%1 - Raising Task.OnApplicationLayerChange" />
        <string id="TaskHost.XcpTaskOnApplicationLayerChangeAfter" value="%1 - Raised Task.OnApplicationLayerChange" />
        <string id="TaskHost.XcpTaskOnRequestOverlayStateChangeBefore" value="%1 - Raising Task.OnRequestOverlayStateChange. State=%2" />
        <string id="TaskHost.XcpTaskOnRequestOverlayStateChangeAfter" value="%1 - Raised Task.OnRequestOverlayStateChange" />
        <string id="TaskHost.XcpTaskOnClosingBefore" value="%1 - Raising Task.OnClosing" />
        <string id="TaskHost.XcpTaskOnClosingAfter" value="%1 - Raised Task.OnClosing" />
        <string id="TaskHost.XcpTaskOnModernActivationBefore" value="%1 - Raising Task.OnModernActivation" />
        <string id="TaskHost.XcpTaskOnModernActivationAfter" value="%1 - Raised Task.OnModernActivation" />
        <string id="Maps.FSM_STATE.HOST_CREATED" value="HOST_CREATED" />
        <string id="Maps.FSM_STATE.HOST_INITIALIZED" value="HOST_INITIALIZED" />
        <string id="Maps.FSM_STATE.HOST_RUNNING" value="HOST_RUNNING" />
        <string id="Maps.FSM_STATE.STARTING_TASK" value="STARTING_TASK" />
        <string id="Maps.FSM_STATE.REHYDRATING_TASK" value="REHYDRATING_TASK" />
        <string id="Maps.FSM_STATE.HOST_READY" value="HOST_READY" />
        <string id="Maps.FSM_STATE.HOST_PAUSING" value="HOST_PAUSING" />
        <string id="Maps.FSM_STATE.PAUSING_TASK" value="PAUSING_TASK" />
        <string id="Maps.FSM_STATE.PAUSED_TASK" value="PAUSED_TASK" />
        <string id="Maps.FSM_STATE.HOST_PAUSED" value="HOST_PAUSED" />
        <string id="Maps.FSM_STATE.RESUMING_TASK" value="RESUMING_TASK" />
        <string id="Maps.FSM_STATE.HOST_GOING_IN_BACKGROUND" value="HOST_GOING_IN_BACKGROUND" />
        <string id="Maps.FSM_STATE.TASK_GOING_IN_BACKGROUND" value="TASK_GOING_IN_BACKGROUND" />
        <string id="Maps.FSM_STATE.HOST_IN_BACKGROUND" value="HOST_IN_BACKGROUND" />
        <string id="Maps.FSM_STATE.TASK_GOING_IN_FOREGROUND" value="TASK_GOING_IN_FOREGROUND" />
        <string id="Maps.FSM_STATE.GRACEFULLY_DEHYDRATING_HOST" value="GRACEFULLY_DEHYDRATING_HOST" />
        <string id="Maps.FSM_STATE.HOST_VISIBLE" value="HOST_VISIBLE" />
        <string id="Maps.FSM_STATE.HOST_HIDDEN" value="HOST_HIDDEN" />
        <string id="Maps.FSM_STATE.HOST_FROZEN" value="HOST_FROZEN" />
        <string id="Maps.FSM_STATE.HOST_THAWED" value="HOST_THAWED" />
        <string id="Maps.FSM_STATE.HOST_EXITING" value="HOST_EXITING" />
        <string id="Maps.FSM_STATE.HOST_ERROR" value="HOST_ERROR" />
        <string id="Maps.NavigationDirection.Direction_Forward" value="Direction_Forward" />
        <string id="Maps.NavigationDirection.Direction_Backward" value="Direction_Backward" />
        <string id="Maps.NavigationDirection.Direction_ForceSize" value="Direction_ForceSize" />
        <string id="TaskHost.RegisterAppCallbacks" value="%1 - RegisterAppCallbacks hr = %2" />
        <string id="TaskHost.RegisterTaskCallbacks" value="%1 - RegisterTaskCallbacks hr = %2" />
        <string id="TaskHost.TaskReadyToNavigate" value="%1 - TaskReadyToShow hr = %2" />
        <string id="TaskHost.RequestCloseTask" value="%1 - RequestCloseTask hr = %2" />
        <string id="TaskHost.RequestNavigateBack" value="%1 - RequestNavigateBack hr = %2" />
        <string id="TaskHost.CompleteTask" value="%1 - CompleteTask hr = %2" />
        <string id="TaskHost.DestroyTaskCallbacks" value="%1 - DestroyTaskCallbacks hr = %2" />
        <string id="TaskHost.SetHostErrorCode" value="%1 - SetHostErrorCode hrHostError = %2, hr = %3" />
        <string id="TaskHost.LaunchSession" value="%1 - LaunchSession[%2] hr = %3" />
        <string id="TaskHost.GetTaskState" value="%1 - GetTaskState hr = %2" />
        <string id="TaskHost.SetTaskState" value="%1 - SetTaskState hr = %2" />
        <string id="TaskHost.LaunchChildTask" value="%1 - LaunchChildTask[%2] hr = %3" />
        <string id="TaskHost.LaunchModernChooser" value="%1 - LaunchModernChooser[%2] hr = %3" />
        <string id="TaskHost.GetTaskAppChromeHandle" value="%1 - GetTaskAppChromeHandle hr = %2" />
        <string id="TaskHost.SetTaskPauseOnLock" value="%1 - SetTaskPauseOnLock hr = %2" />
        <string id="TaskHost.SetTaskFullScreen" value="%1 - SetTaskFullScreen hr = %2" />
        <string id="TaskHost.SetHostObscurity" value="%1 - SetHostObscurity[%2] hr = %3" />
        <string id="TaskHost.EnteringModalState" value="%1 - Entering Modal state" />
        <string id="TaskHost.ExitingModalState" value="%1 - Exiting Modal state hr = %2" />
        <string id="TaskHost.OnHostError" value="%1 - NotifyError: message=%2, source=%3" />
        <string id="TaskHost.CXbfGeneratorXcpControlHostApplicationStarted" value="%1 - NotifyEvent XcpHostEvent_ApplicationStarted" />
        <string id="TaskHost.CXbfGeneratorXcpControlHostApplicationStarting" value="%1 - NotifyEvent XcpHostEvent_ApplicationStarting" />
        <string id="TaskHost.CXbfGeneratorXcpControlHostApplicationConstructing" value="%1 - NotifyEvent XcpHostEvent_ApplicationConstructing: Assembly = %2, NotifyEvent Type = %3" />
        <string id="TaskHost.CXbfGeneratorXcpControlHostApplicationConstructed" value="%1 - NotifyEvent XcpHostEvent_ApplicationConstructed: Assembly = %2, NotifyEvent Type = %3" />
        <string id="TaskHost.CXbfGeneratorXcpControlHostAssemblyLoading" value="%1 - NotifyEvent XcpHostEvent_AssemblyLoading: Assembly = %2" />
        <string id="TaskHost.CXbfGeneratorXcpControlHostAssemblyLoaded" value="%1 - NotifyEvent XcpHostEvent_AssemblyLoaded: Assembly = %2" />
        <string id="TaskHost.CXbfGeneratorXcpControlHostEventSourceLoading" value="%1 - NotifyEvent XcpHostEvent_SourceLoading: XAP = %2" />
        <string id="TaskHost.CXbfGeneratorXcpControlHostEventSourceLoaded" value="%1 - NotifyEvent XcpHostEvent_SourceLoaded: XAP = %2" />
        <string id="AgHost.FrameworkViewInitialize" value="AgHost - FrameworkView::Initialize HRESULT=%1" />
        <string id="AgHost.FrameworkViewSetWindow" value="AgHost - FrameworkView::SetWindow HRESULT=%1" />
        <string id="AgHost.FrameworkViewLoad" value="AgHost - FrameworkView::Load HRESULT=%1" />
        <string id="AgHost.FrameworkViewRun" value="AgHost - FrameworkView::Run HRESULT=%1" />
        <string id="AgHost.FrameworkViewUninitialize" value="AgHost - FrameworkView::Uninitialize HRESULT=%1" />
        <string id="AgHost.FrameworkViewOnActivated" value="AgHost - FrameworkView::OnActivated PreviousExecutionState=%1 ActivationKind=%2 HRESULT=%3" />
        <string id="AgHost.FrameworkViewOnExiting" value="AgHost - FrameworkView::OnExiting HRESULT=%1" />
        <string id="AgHost.FrameworkViewOnResuming" value="AgHost - FrameworkView::OnResuming HRESULT=%1" />
        <string id="AgHost.FrameworkViewOnSuspending" value="AgHost - FrameworkView::OnSuspending HRESULT=%1" />
        <string id="AgHostSvcs.EmCancelTaskInstance" value="AgHostSvcs - EmCancelTaskInstance TaskID=%1 HRESULT=%2" />
        <string id="AgHostSvcs.EmCreateTaskInstance" value="AgHostSvcs - EmCreateTaskInstance TaskID=%1 HRESULT=%2" />
        <string id="AgHostSvcs.EmExitTaskHost" value="AgHostSvcs - EmExitTaskHost HRESULT=%1" />
        <string id="AgHostSvcs.EmPauseTaskInstance" value="AgHostSvcs - EmPauseTaskInstance TaskID=%1 HRESULT=%2" />
        <string id="AgHostSvcs.EmResumeTaskInstance" value="AgHostSvcs - EmResumeTaskInstance TaskID=%1 HRESULT=%2" />
        <string id="AgHostSvcs.EmSetTaskInstanceApplicationUri" value="AgHostSvcs - EmSetTaskInstanceApplicationUri TaskID=%1 ApplicationUri=%2 HRESULT=%3" />
        <string id="AgHostSvcs.EmSetTaskInstanceArguments" value="AgHostSvcs - EmSetTaskInstanceArguments TaskID=%1 HRESULT=%2" />
        <string id="AgHostSvcs.EmSetTaskInstanceBackgroundTaskId" value="AgHostSvcs - EmSetTaskInstanceBackgroundTaskId TaskID=%1 BackgroundTaskID=%2 HRESULT=%3" />
        <string id="AgHostSvcs.EmSetTaskInstanceNavigationPage" value="AgHostSvcs - EmSetTaskInstanceNavigationPage TaskID=%1 NavigationPage=%2 HRESULT=%3" />
        <string id="AgHostSvcs.EmStartTaskInstance" value="AgHostSvcs - EmStartTaskInstance TaskID=%1 HRESULT=%2" />
        <string id="AgHostSvcs.TaskCompleted" value="AgHostSvcs - TaskCompleted TaskID=%1 CompletionCode=%2 HRESULT=%3" />
        <string id="AgHostSvcs.TaskPaused" value="AgHostSvcs - TaskPaused TaskID=%1 HRESULT=%2" />
        <string id="AgHostSvcs.TaskRunning" value="AgHostSvcs - TaskRunning TaskID=%1 HRESULT=%2" />
        <string id="AgHostSvcs.TaskRunningInBackground" value="AgHostSvcs - TaskRunningInBackground TaskID=%1 HRESULT=%2" />
        <string id="AgHostSvcs.TaskRunningInForeground" value="AgHostSvcs - TaskRunningInForeground TaskID=%1 HRESULT=%2" />
        <string id="AgHostSvcs.EmWaitForTaskInstanceCompleted" value="AgHostSvcs - EmWaitForTaskInstanceCompleted TaskID=%1 CompletionCode=%2 HRESULT=%3" />
        <string id="AgHostSvcs.OnModernContractActivation" value="AgHostSvcs - OnModernContractActivation TaskID=%1 HRESULT=%2" />
        <string id="ModernResourceEnforcer.RE_SetApplicationPropertiesFailed" value="Modern Enforcer: Failed to call SetApplicationProperties - Status=%1, PsmKey=%2, HostJobType=%3: (%9, %10, %11, %12, %13) - CpuRate=%4, HardMemoryLimit=%5, NotifyMemoryLowLimit=%6, NotifyMemoryHighLimit=%7, Priority=%8" />
        <string id="ModernResourceEnforcer.RE_QueryApplicationPropertiesFailed" value="Modern Enforcer: Failed to call QueryApplicationProperties - Status=%1, PsmKey=%2, HostJobType=%3, CpuRate=%4, HardMemoryLimit=%5, NotifyMemoryLowLimit=%6, NotifyMemoryHighLimit=%7, Priority=%8" />
        <string id="ModernResourceEnforcer.RE_QueryMemoryUsageFailed" value="Modern Enforcer: Failed to call QueryMemoryUsage - Status=%1, PsmKey=%2, HostJobType=%3, MemoryUsage=%4" />
        <string id="ModernResourceEnforcer.RE_QuerySharedCommitFailed" value="Modern Enforcer: Failed to call QuerySharedCommit- Status=%1, PsmKey=%2, HostJobType=%3, SharedMemoryUsage=%4" />
        <string id="ModernResourceEnforcer.RE_SetApplicationProperties" value="Modern Enforcer: SetApplicationProperties - Status=%1, PsmKey=%2, HostJobType=%3: (%9, %10, %11, %12, %13) - CpuRate=%4, HardMemoryLimit=%5, NotifyMemoryLowLimit=%6, NotifyMemoryHighLimit=%7, Priority=%8" />
        <string id="ModernResourceEnforcer.RE_QueryApplicationProperties" value="Modern Enforcer: QueryApplicationProperties - Status=%1, PsmKey=%2, HostJobType=%3, CpuRate=%4, HardMemoryLimit=%5, NotifyMemoryLowLimit=%6, NotifyMemoryHighLimit=%7, Priority=%8" />
        <string id="ModernResourceEnforcer.RE_HandleGroupOwnershipNotification" value="Modern Enforcer: PSM GroupOwnershipNotification - Status=%1, PsmKey=%2, HostJobType=%3, %4, fUpdateRate=%5" />
        <string id="ModernResourceEnforcer.RE_HandleHostEmptyNotification" value="Modern Enforcer: PSM HostEmpty Notification - PsmKey=%1, HostJobType=%2" />
        <string id="ModernResourceEnforcer.RE_PsmApplicationStateNotification" value="Modern Enforcer: PsmApplicationStateNotification - Session=%2, PsmKey=%3, State=%4" />
        <string id="ModernResourceEnforcer.RE_PsmHostStateNotification" value="Modern Enforcer: PsmHostStateNotification - Session=%2, PsmKey=%3, HostJobType=%4, State=%5" />
        <string id="Maps.INSTALLTYPE.INSTALLTYPE_INVALID" value="INSTALLTYPE_INVALID" />
        <string id="Maps.INSTALLTYPE.INSTALLTYPE_APPX_PACKAGE" value="INSTALLTYPE_APPX_PACKAGE" />
        <string id="Maps.INSTALLTYPE.INSTALLTYPE_FRAMEWORK_PACKAGE" value="INSTALLTYPE_FRAMEWORK_PACKAGE" />
        <string id="Maps.INSTALLTYPE.INSTALLTYPE_XAP_PACKAGE" value="INSTALLTYPE_XAP_PACKAGE" />
        <string id="Maps.INSTALLTYPE.INSTALLTYPE_APPX_INFUSED" value="INSTALLTYPE_APPX_INFUSED" />
        <string id="Maps.INSTALLTYPE.INSTALLTYPE_FRAMEWORK_INFUSED" value="INSTALLTYPE_FRAMEWORK_INFUSED" />
        <string id="Maps.INSTALLTYPE.INSTALLTYPE_XAP_INFUSED" value="INSTALLTYPE_XAP_INFUSED" />
        <string id="Maps.PM_NOTIFICATION_TYPE.PNT_LIFECYCLE_NOTIFICATION" value="PNT_LIFECYCLE_NOTIFICATION" />
        <string id="Maps.PM_NOTIFICATION_TYPE.PNT_TILE_NOTIFICATION" value="PNT_TILE_NOTIFICATION" />
        <string id="Maps.PM_NOTIFICATION_TYPE.PNT_BNS_NOTIFICATION" value="PNT_BNS_NOTIFICATION" />
        <string id="Maps.PM_NOTIFICATION_TYPE.PNT_INVALID" value="PNT_INVALID" />
        <string id="Format.ExecGenericTraceFunctionError" value="%1: %2" />
        <string id="Maps.APPLICATIONLAYER.APPLICATIONLAYER_FOREGROUND" value="Foreground" />
        <string id="Maps.APPLICATIONLAYER.APPLICATIONLAYER_LOCK" value="Lock" />
        <string id="Maps.APPLICATIONLAYER.APPLICATIONLAYER_OVERLAY" value="Overlay" />
        <string id="Maps.AcquireRelease.Release" value="Release" />
        <string id="Maps.AcquireRelease.Acquire" value="Acquire" />
        <string id="Maps.PsmAppState.Active" value="Active" />
        <string id="Maps.PsmAppState.Brokered" value="Brokered" />
        <string id="Maps.PsmAppState.Sandboxed" value="Sandboxed" />
        <string id="Maps.PsmAppState.Quiescing" value="Quiescing" />
        <string id="Maps.PsmAppState.Halted" value="Halted" />
        <string id="Maps.PsmAppState.TerminatePending" value="TerminatePending" />
        <string id="Maps.PsmAppState.Terminated" value="Terminated" />
        <string id="Maps.PsmAppState.HaltPending" value="HaltPending" />
        <string id="Maps.PsmAppState.Deleted" value="Deleted" />
        <string id="Maps.PsmAppState.Initialized" value="Initialized" />
        <string id="Maps.PsmAppState.OutSwapped" value="OutSwapped" />
        <string id="Maps.PsmAppState.Invalid" value="Invalid" />
        <string id="Maps.PsmHostState.Empty" value="Empty" />
        <string id="Maps.PsmHostState.AcquireGroupScheduling" value="AcquireGroupScheduling" />
        <string id="Maps.PsmHostState.ReleaseGroupScheduling" value="ReleaseGroupScheduling" />
        <string id="Maps.PsmHostState.QuotaPolicySuspend" value="QuotaPolicySuspend" />
        <string id="Maps.PsmHostState.QuotaPolicyResume" value="QuotaPolicyResume" />
        <string id="Maps.PsmHostState.Invalid" value="Invalid" />
        <string id="Maps.FM.ResourcePolicyType.Invalid" value="Invalid" />
        <string id="Maps.FM.ResourcePolicyType.ModernForeground" value="ModernForeground" />
        <string id="Maps.FM.ResourcePolicyType.Pausing" value="Pausing" />
        <string id="Maps.FM.ResourcePolicyType.PausingLowPri" value="PausingLowPri" />
        <string id="Maps.FM.ResourcePolicyType.Paused" value="Paused" />
        <string id="Maps.FM.ResourcePolicyType.PausedHighPri" value="PausedHighPri" />
        <string id="Maps.FM.ResourcePolicyType.PausedDNK" value="PausedDNK" />
        <string id="Maps.FM.ResourcePolicyType.Frozen" value="Frozen" />
        <string id="Maps.FM.ResourcePolicyType.FrozenHighPri" value="FrozenHighPri" />
        <string id="Maps.FM.ResourcePolicyType.FrozenDNK" value="FrozenDNK" />
        <string id="Maps.FM.ResourcePolicyType.FrozenDNCS" value="FrozenDNCS" />
        <string id="Maps.FM.ResourcePolicyType.LockScreen" value="LockScreen" />
        <string id="Maps.FM.ResourcePolicyType.Overlay" value="Overlay" />
        <string id="Maps.FM.ResourcePolicyType.FileProvider" value="11" />
        <string id="Maps.FM.ResourcePolicyType.CalendarAsChild" value="CalendarAsChild" />
        <string id="Maps.FM.ResourcePolicyType.ComponentTarget" value="ComponentTarget" />
        <string id="Maps.FM.ResourcePolicyType.PiP" value="PiP" />
        <string id="Maps.FM.ResourcePolicyType.Balloon" value="Balloon" />
        <string id="Maps.FM.ResourcePolicyType.VideoTranscode" value="VideoTranscode" />
        <string id="Maps.FM.ResourcePolicyType.CBE" value="CBE" />
        <string id="Maps.FM.ResourcePolicyType.GenericExtendedExecution" value="GenericExtendedExecution" />
        <string id="Maps.FM.ResourcePolicyType.ModernForegroundExtended" value="ModernForegroundExtended" />
        <string id="Maps.FM.ResourcePolicyType.TaskCompletionHighPriority" value="TaskCompletionHighPriority" />
        <string id="Maps.FM.ResourcePolicyType.ModernForegroundLarge" value="ModernForegroundLarge" />
        <string id="Maps.FM.ResourcePolicyType.ShellCustom1" value="ShellCustom1" />
        <string id="Maps.FM.ResourcePolicyType.ShellCustom2" value="ShellCustom2" />
        <string id="Maps.FM.ResourcePolicyType.ShellCustom3" value="ShellCustom3" />
        <string id="Maps.FM.ResourcePolicyType.ShellCustom4" value="ShellCustom4" />
        <string id="Maps.FM.ResourcePolicyType.Composer" value="Composer" />
        <string id="Maps.FM.ResourcePolicyType.DebugModeForeground" value="DebugModeForeground" />
        <string id="Maps.BMEvaluationState.Unevaluated" value="Unevaluated" />
        <string id="Maps.BMEvaluationState.EvaluationPending" value="EvaluationPending" />
        <string id="Maps.BMEvaluationState.Evaluated" value="Evaluated" />
        <string id="Format.PITP_ActivateTasksForUser" value="PreInstallTaskPolicy: Activate task for User = %1 HRESULT = %2" />
        <string id="Format.PITP_BiActivateInBackground" value="PreInstallTaskPolicy: BiActivate WorkItemId = %1 for user = %2, PackageFullName = %3, EntryPoint = %4, HRESULT = %5" />
        <string id="Maps.BackgroundAccessManager.ACCESS_USER_STATE.Allowed" value="BACKGROUND_ACCESS_USER_STATE_ALLOWED" />
        <string id="Maps.BackgroundAccessManager.ACCESS_USER_STATE.Disabled" value="BACKGROUND_ACCESS_USER_STATE_DISABLED" />
        <string id="Maps.BackgroundAccessManager.ACCESS_USER_STATE.LockedByDeviceManagement" value="BACKGROUND_ACCESS_USER_STATE_LOCKED_BY_DEVICE_MANAGEMENT" />
        <string id="Maps.BackgroundAccessManager.ACCESS_STATE.Default" value="BACKGROUND_ACCESS_STATE_DEFAULT" />
        <string id="Maps.BackgroundAccessManager.ACCESS_STATE.Disabled" value="BACKGROUND_ACCESS_STATE_DISABLED" />
        <string id="Maps.BackgroundAccessManager.ACCESS_STATE.AlwaysAllowed" value="BACKGROUND_ACCESS_STATE_ALWAYS_ALLOWED" />
        <string id="Maps.BackgroundAccessManager.ACCESS_STATE.LockedByDeviceManagement" value="BACKGROUND_ACCESS_STATE_LOCKED_BY_DEVICE_MANAGEMENT" />
        <string id="Maps.BackgroundAccessManager.ACCESS_STATE.NcbEnabled" value="BACKGROUND_ACCESS_STATE_NCB_ENABLED" />
        <string id="Maps.BackgroundAccessManager.ACCESS_STATE.DisabledbySystem" value="BACKGROUND_ACCESS_STATE_DISABLED_BY_SYSTEM" />
        <string id="Maps.BackgroundAccessManager.ACCESS_STATE.DisabledbyUser" value="BACKGROUND_ACCESS_STATE_DISABLED_BY_USER" />
        <string id="Maps.BackgroundAccessManager.ACCESS_STATE.Highpriorityhost" value="BACKGROUND_ACCESS_STATE_HIGH_PRIORITY_HOST" />
        <string id="Maps.BackgroundAccessManager.ACCESS_STATE.Unlimitedlifetime" value="BACKGROUND_ACCESS_STATE_UNLIMITED_LIFETIME" />
        <string id="Maps.BackgroundAccessManager.ACCESS_STATE.SleepAlwaysAllowed" value="BACKGROUND_ACCESS_STATE_SLEEP_ALWAYS_ALLOWED" />
        <string id="Maps.BackgroundAccessManager.ACCESS_STATE.SleepDisabled" value="BACKGROUND_ACCESS_STATE_SLEEP_DISABLED" />
        <string id="Maps.BackgroundAccessManager.ACCESS_STATE.SleepDisabledByUser" value="BACKGROUND_ACCESS_STATE_SLEEP_DISABLED_BY_USER" />
        <string id="Maps.BackgroundAccessManager.ACCESS_STATE.SleepDisabledBySystem" value="BACKGROUND_ACCESS_STATE_SLEEP_DISABLED_BY_SYSTEM" />
        <string id="Task.BackgroundAccessManager.SetUserState" value="Background Access User State Changed" />
        <string id="Task.BackgroundAccessManager.SetPackageState" value="Background Access Package State Changed" />
        <string id="Event.BackgroundAccessManager.SetUserState" value="Background Access State For User Modified CallerUserSid = %1 CallerProcessName = %2 CallerPackageFamilyName = %3              OldConsentValue = %4 NewConsentValue = %5 IsSetByHigherAuthority = %6 EffectiveConsentValue = %7 TargetUserSid = %8 HRESULT = %9" />
        <string id="Event.BackgroundAccessManager.SetPackageState" value="Background Access State For Package Modified CallerUserSid = %1 CallerProcessName = %2 CallerPackageFamilyName = %3              OldConsentValue = %4 NewConsentValue = %5 IsSetByHigherAuthority = %6 EffectiveConsentValue = %7 TargetUserSid = %8              TargetPackageFamilyName = %9 HRESULT = %10" />
      </stringTable>
    </resources>
  </localization>
  <trustInfo>
    <security>
      <accessControl>
        <securityDescriptorDefinitions>
          <securityDescriptorDefinition name="WRP_FILE_DEFAULT_SDDL" sddl="O:S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464G:S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464D:P(A;;FA;;;S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464)(A;;GRGX;;;BA)(A;;GRGX;;;SY)(A;;GRGX;;;BU)(A;;GRGX;;;S-1-15-2-1)(A;;GRGX;;;S-1-15-2-2)S:(AU;FASA;0x000D0116;;;WD)" operationHint="replace" description="Default SDDL for Windows Resource Protected file" />
        </securityDescriptorDefinitions>
      </accessControl>
    </security>
  </trustInfo>
</assembly>