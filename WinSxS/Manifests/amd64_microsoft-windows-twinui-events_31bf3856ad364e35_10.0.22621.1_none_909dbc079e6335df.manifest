<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<assembly xmlns="urn:schemas-microsoft-com:asm.v3" manifestVersion="1.0" copyright="Copyright (c) Microsoft Corporation. All Rights Reserved.">
  <assemblyIdentity name="Microsoft-Windows-TwinUI-Events" version="10.0.22621.1" processorArchitecture="amd64" language="neutral" buildType="release" publicKeyToken="31bf3856ad364e35" versionScope="nonSxS" />
  <instrumentation xmlns:ms="http://manifests.microsoft.com/win/2004/08/windows/events" xmlns:win="http://manifests.microsoft.com/win/2004/08/windows/events" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <events xmlns="http://schemas.microsoft.com/win/2004/08/events">
      <provider guid="{315a8872-923e-4ea2-9889-33cd4754bf64}" message="$(string.eventProviderName)" messageFileName="%SystemRoot%\system32\twinui.appcore.dll" name="Microsoft-Windows-Immersive-Shell" resourceFileName="%SystemRoot%\system32\twinui.appcore.dll" symbol="MICROSOFT_TWINUI_PUBLISHER">
        <channels>
          <channel chid="TWinDiagnostic" name="Microsoft-Windows-TWinUI/Diagnostic" type="Analytic" />
          <channel chid="TWinOperational" enabled="true" name="Microsoft-Windows-TWinUI/Operational" type="Operational" />
          <importChannel chid="GlobalApplicationChannel" name="Application" />
        </channels>
      </provider>
      <messageTable>
        <message message="$(string.Map.ShellComponentInitialize.CreateAndPublishServices)" value="0xD0000001" />
        <message message="$(string.Map.ShellComponentInitialize.SubscribeAndSite)" value="0xD0000002" />
        <message message="$(string.Map.ShellComponentInitialize.DelayedInitialization)" value="0xD0000003" />
        <message message="$(string.Map.ShellComponentInitialize.UnsubcribeFromServices)" value="0xD0000004" />
        <message message="$(string.Map.ShellComponentInitialize.ShutdownServices)" value="0xD0000005" />
        <message message="$(string.Map.ImmersiveShellLayoutInvalidation.ResolutionChange)" value="0xD0000006" />
        <message message="$(string.Map.ImmersiveShellLayoutInvalidation.AccessibilityDocking)" value="0xD0000007" />
        <message message="$(string.Map.ImmersiveShellLayoutInvalidation.AccessibilityUndocking)" value="0xD0000008" />
        <message message="$(string.Map.ImmersiveShellLayoutInvalidation.ClientAdded)" value="0xD0000009" />
        <message message="$(string.Map.ImmersiveShellLayoutInvalidation.ClientRemoved)" value="0xD000000A" />
        <message message="$(string.Map.ImmersiveShellIHMNotificationType.Showing)" value="0xD000000B" />
        <message message="$(string.Map.ImmersiveShellIHMNotificationType.Hiding)" value="0xD000000C" />
        <message message="$(string.Value.SecondaryTile.Create)" value="0xD000000D" />
        <message message="$(string.Value.SecondaryTile.Delete)" value="0xD000000E" />
        <message message="$(string.ToastImmersiveApp)" value="0xD000000F" />
        <message message="$(string.ToastDesktopApp)" value="0xD0000010" />
        <message message="$(string.ToastSystemApp)" value="0xD0000011" />
        <message message="$(string.Map.ImmersiveShellAppManagerApplicationStateChange.IAC_UNKNOWN)" value="0xD0000012" />
        <message message="$(string.Map.ImmersiveShellAppManagerApplicationStateChange.IAC_STARTED)" value="0xD0000013" />
        <message message="$(string.Map.ImmersiveShellAppManagerApplicationStateChange.IAC_FOREGROUND)" value="0xD0000014" />
        <message message="$(string.Map.ImmersiveShellAppManagerApplicationStateChange.IAC_BACKGROUND)" value="0xD0000015" />
        <message message="$(string.Map.ImmersiveShellAppManagerApplicationStateChange.IAC_SHOWN)" value="0xD0000016" />
        <message message="$(string.Map.ImmersiveShellAppManagerApplicationStateChange.IAC_HIDDEN)" value="0xD0000017" />
        <message message="$(string.Map.ImmersiveShellAppManagerApplicationStateChange.IAC_CLOSED)" value="0xD0000018" />
        <message message="$(string.Map.ImmersiveShellAppManagerApplicationStateChange.IAC_WINDOWPRESENTATIONDECLINED)" value="0xD0000019" />
        <message message="$(string.Map.ImmersiveShellAppManagerApplicationStateChange.IAC_PRESENTEDWINDOWCHANGED)" value="0xD000001A" />
        <message message="$(string.Map.ImmersiveShellAppManagerApplicationStateChange.IAC_MOBODYENTERED)" value="0xD000001B" />
        <message message="$(string.Map.ImmersiveShellAppManagerApplicationStateChange.IAC_MOBODYEXIT)" value="0xD000001C" />
        <message message="$(string.PLM.MemoryPolicy.TerminationExemption.NOT_SUSPENDED)" value="0xD000001D" />
        <message message="$(string.PLM.MemoryPolicy.TerminationExemption.BEING_OUTSWAPPED)" value="0xD000001E" />
        <message message="$(string.PLM.MemoryPolicy.TerminationExemption.DEBUG)" value="0xD000001F" />
        <message message="$(string.PLM.MemoryPolicy.TerminationExemption.TASKCOMPLETION)" value="0xD0000020" />
        <message message="$(string.PLM.MemoryPolicy.TerminationExemption.REALTIMECOMMUNICATION)" value="0xD0000021" />
        <message message="$(string.PLM.ExemptionType.VISIBILITY)" value="0xD0000022" />
        <message message="$(string.PLM.ExemptionType.TASKCOMPLETION)" value="0xD0000023" />
        <message message="$(string.PLM.ExemptionType.PACKAGE)" value="0xD0000024" />
        <message message="$(string.PLM.ExemptionType.RPC)" value="0xD0000025" />
        <message message="$(string.PLM.ResumeReason.USER)" value="0xD0000026" />
        <message message="$(string.PLM.ResumeReason.IAM)" value="0xD0000027" />
        <message message="$(string.PLM.ResumeReason.RPC)" value="0xD0000028" />
        <message message="$(string.PLM.ResumeReason.TASK_START)" value="0xD0000029" />
        <message message="$(string.PLM.ResumeReason.PACKAGE_MGR)" value="0xD000002A" />
        <message message="$(string.PLM.ResumeReason.USER_SWITCH_IN)" value="0xD000002B" />
        <message message="$(string.PLM.ResumeReason.CONNECTEDSTANDBY_EXIT)" value="0xD000002C" />
        <message message="$(string.PLM.ResumeReason.FULL_EVAL)" value="0xD000002D" />
        <message message="$(string.PLM.ResumeReason.DEBUG_API)" value="0xD000002E" />
        <message message="$(string.PLM.PackageState.Active)" value="0xD000002F" />
        <message message="$(string.PLM.PackageState.Quiescing)" value="0xD0000030" />
        <message message="$(string.PLM.PackageState.Halted)" value="0xD0000031" />
        <message message="$(string.PLM.PackageState.Terminated)" value="0xD0000032" />
        <message message="$(string.PLM.PackageState.Unknown)" value="0xD0000033" />
        <message message="$(string.Map.PackageRemediationStates.NORMAL)" value="0xD0000034" />
        <message message="$(string.Map.PackageRemediationStates.LICENSE_ISSUE)" value="0xD0000035" />
        <message message="$(string.Map.PackageRemediationStates.MODIFIED)" value="0xD0000036" />
        <message message="$(string.Map.PackageRemediationStates.TAMPERING)" value="0xD0000037" />
        <message message="$(string.Map.PackageRemediationStates.UPDATING)" value="0xD0000038" />
        <message message="$(string.Map.ImmersiveAppLaunchExecutionStates.DEFAULT)" value="0xD0000039" />
        <message message="$(string.Map.ImmersiveAppLaunchExecutionStates.ACTIVATEAPP)" value="0xD000003A" />
        <message message="$(string.Map.ImmersiveAppLaunchExecutionStates.LAUNCHSTORE)" value="0xD000003B" />
        <message message="$(string.Map.ImmersiveAppLaunchExecutionStates.NOOP_RESET)" value="0xD000003C" />
        <message message="$(string.Map.LauncherAppStates.NORMAL)" value="0xD000003D" />
        <message message="$(string.Map.LauncherAppStates.INSTALLING)" value="0xD000003E" />
        <message message="$(string.Map.LauncherAppStates.QUEUED)" value="0xD000003F" />
        <message message="$(string.Map.LauncherAppStates.PAUSED)" value="0xD0000040" />
        <message message="$(string.Map.LauncherAppStates.ERROR)" value="0xD0000041" />
        <message message="$(string.Map.LauncherAppStates.RESET)" value="0xD0000042" />
        <message message="$(string.Map.LauncherAppStates.BLOCKED)" value="0xD0000043" />
        <message message="$(string.PLM.TaskCompletion.PT_TC_PBM)" value="0x00002AF9" />
        <message message="$(string.PLM.TaskCompletion.PT_TC_FILEOPENPICKER)" value="0x00002AFA" />
        <message message="$(string.PLM.TaskCompletion.PT_TC_SHARING)" value="0x00002AFB" />
        <message message="$(string.PLM.TaskCompletion.PT_TC_PRINTING)" value="0x00002AFC" />
        <message message="$(string.PLM.TaskCompletion.PT_TC_GENERIC)" value="0x00002AFD" />
        <message message="$(string.PLM.TaskCompletion.PT_TC_CAMERA_DCA)" value="0x00002AFE" />
        <message message="$(string.PLM.TaskCompletion.PT_TC_PRINTER_DCA)" value="0x00002AFF" />
        <message message="$(string.PLM.TaskCompletion.PT_TC_PLAYTO)" value="0x00002B00" />
        <message message="$(string.PLM.TaskCompletion.PT_TC_FILESAVEPICKER)" value="0x00002B01" />
        <message message="$(string.PLM.TaskCompletion.PT_TC_CONTACTPICKER)" value="0x00002B02" />
        <message message="$(string.PLM.TaskCompletion.PT_TC_CACHEDFILEUPDATER_LOCAL)" value="0x00002B03" />
        <message message="$(string.PLM.TaskCompletion.PT_TC_CACHEDFILEUPDATER_REMOTE)" value="0x00002B04" />
        <message message="$(string.PLM.TaskCompletion.PT_TC_WER_CONSENT)" value="0x00002B05" />
        <message message="$(string.PLM.TaskCompletion.PT_TC_ERROR_REPORT)" value="0x00002B06" />
        <message message="$(string.PLM.TaskCompletion.PT_TC_UNCONSTRAINED)" value="0x00002B07" />
        <message message="$(string.PLM.TaskCompletion.PT_TC_CRASHDUMP)" value="0x00002B08" />
        <message message="$(string.PLM.ResumeApplication.Flags.Emptied)" value="0x00002B09" />
        <message message="$(string.PLM.ResumeApplication.Flags.SwapDisabled)" value="0x00002B0A" />
        <message message="$(string.PLM.ResumeApplication.Flags.Failure)" value="0x00002B0B" />
        <message message="$(string.PLM.ResumeApplication.Flags.ProtectedBackstack)" value="0x00002B0C" />
        <message message="$(string.PLM.ApplicationSwap.Flags.Emptied)" value="0x00002B0D" />
        <message message="$(string.PLM.ApplicationSwap.Flags.SwapDisabled)" value="0x00002B0E" />
        <message message="$(string.PLM.ApplicationSwap.Flags.LargeApp)" value="0x00002B0F" />
        <message message="$(string.PLM.Priority.VeryLow)" value="0x00002B10" />
        <message message="$(string.PLM.Priority.Normal)" value="0x00002B11" />
        <message message="$(string.Map.ImmersiveAppLaunchExecutionStates.INSTALLPACKAGE)" value="0x00002B12" />
        <message message="$(string.Map.ImmersiveAppLaunchExecutionStates.SHOWINSTALLERROR)" value="0x00002B13" />
        <message message="$(string.PLM.GpuWatchdogMode.Interference)" value="0x00002B14" />
        <message message="$(string.PLM.GpuWatchdogMode.LowUtilizationOrMaximumTime)" value="0x00002B15" />
        <message message="$(string.PLM.IsChild)" value="0x00002B16" />
        <message message="$(string.PLM.Priority.Paused)" value="0x00002B17" />
        <message message="$(string.PLM.SpeculativeLaunchResult.Interactive)" value="0x00002B18" />
        <message message="$(string.PLM.Terminated)" value="0x00002B19" />
        <message message="$(string.PLM.TerminateReason.Crash)" value="0x00002B1A" />
        <message message="$(string.PLM.TerminateReason.DebugApi)" value="0x00002B1B" />
        <message message="$(string.PLM.TerminateReason.BrokerCrash)" value="0x00002B1C" />
        <message message="$(string.PLM.TerminateReason.Invalid)" value="0x00002B1D" />
        <message message="$(string.PLM.TerminateReason.ServicingStart)" value="0x00002B1E" />
        <message message="$(string.PLM.TerminateReason.ServicingStop)" value="0x00002B1F" />
        <message message="$(string.PLM.TerminateReason.Uninstall)" value="0x00002B20" />
        <message message="$(string.PLM.TerminateReason.LogOff)" value="0x00002B21" />
        <message message="$(string.PLM.TerminateReason.UserClose)" value="0x00002B22" />
        <message message="$(string.PLM.TerminateReason.PendingUserCloseOnSwitch)" value="0x00002B23" />
        <message message="$(string.PLM.TerminateReason.SystemClose)" value="0x00002B24" />
        <message message="$(string.PLM.TerminateReason.PendingSystemCloseOnSwitch)" value="0x00002B25" />
        <message message="$(string.PLM.TerminateReason.ReportQuiesceHang)" value="0x00002B26" />
        <message message="$(string.PLM.TerminateReason.MemoryPolicy)" value="0x00002B27" />
        <message message="$(string.PLM.TerminateReason.TerminateApi)" value="0x00002B28" />
        <message message="$(string.PLM.TerminateReason.LaunchTriggeredTerminateApi)" value="0x00002B29" />
        <message message="$(string.PLM.TerminateReason.ErrorReportingOnSwitch)" value="0x00002B2A" />
        <message message="$(string.PLM.TerminateReason.PendingTerminationOnSwitch)" value="0x00002B2B" />
        <message message="$(string.PLM.TerminateReason.HandleInUse)" value="0x00002B2C" />
        <message message="$(string.PLM.TerminateReason.ActivationHang)" value="0x00002B2D" />
        <message message="$(string.PLM.TerminateReason.NoWindowAfterActivation)" value="0x00002B2E" />
        <message message="$(string.PLM.TerminateReason.ForceTerminationDependency)" value="0x00002B2F" />
        <message message="$(string.PLM.TerminateReason.HungWindowOnSwitch)" value="0x00002B30" />
        <message message="$(string.PLM.TerminateReason.ActivationHangReportingOnSwitch)" value="0x00002B31" />
        <message message="$(string.PLM.TerminateReason.TerminateBeforeActivation)" value="0x00002B32" />
        <message message="$(string.PLM.TerminateReason.Cleanup)" value="0x00002B33" />
        <message message="$(string.PLM.TerminateReason.PendingCleanupOnSwitch)" value="0x00002B34" />
        <message message="$(string.PLM.TerminateReason.BackgroundTaskCleanup)" value="0x00002B35" />
        <message message="$(string.PLM.TerminateReason.SetNextApplicationState)" value="0x00002B36" />
        <message message="$(string.PLM.TerminateReason.PnpAwaitingResponse)" value="0x00002B37" />
        <message message="$(string.PLM.TerminateReason.PsWakeChargeResourcePolicy)" value="0x00002B38" />
        <message message="$(string.PLM.Terminate.Forceful)" value="0x00002B39" />
        <message message="$(string.PLM.Launch.NewProcess)" value="0x00002B3A" />
        <message message="$(string.PLM.Launch.NewWindow)" value="0x00002B3B" />
        <message message="$(string.PLM.Launch.BackgroundTask)" value="0x00002B3C" />
        <message message="$(string.PLM.Launch.SpeculativeLaunch)" value="0x00002B3D" />
        <message message="$(string.PLM.IsWWAHost)" value="0x00002B3E" />
        <message message="$(string.PLM.TerminateReason.FltRundownWaitBlocked)" value="0x00002B3F" />
        <message message="$(string.PLM.TerminateReason.TerminateApiRemoveBackgroundWorkItems)" value="0x00002B40" />
        <message message="$(string.PLM.TerminateReason.MemoryPolicySwapSpaceExceeded)" value="0x00002B41" />
        <message message="$(string.PLM.TerminateReason.MemoryPolicyPhysicalMemoryUsage)" value="0x00002B42" />
        <message message="$(string.PLM.TerminateReason.MemoryPolicyCommitSoftThreshold)" value="0x00002B43" />
        <message message="$(string.PLM.TerminateReason.MemoryPolicyCommitHardThreshold)" value="0x00002B44" />
        <message message="$(string.PLM.TerminateReason.MemoryPolicyLargeApp)" value="0x00002B45" />
        <message message="$(string.PLM.TerminateReason.MemoryPolicyModifiedPages)" value="0x00002B46" />
        <message message="$(string.PLM.TerminateReason.FsrlOplockBreak)" value="0x00002B47" />
        <message message="$(string.PLM.TerminateReason.MemoryPolicyCommitMaxLimit)" value="0x00002B48" />
        <message message="$(string.PLM.TerminateReason.RpcSuspensionTimeout)" value="0x00002B49" />
        <message message="$(string.PLM.TerminateReason.ApplicationOutOfMemory)" value="0x00002B4A" />
        <message message="$(string.PLM.TerminateReason.ActivationFailure)" value="0x00002B4B" />
        <message message="$(string.ActivationErrorMessage)" value="0x00003584" />
        <message message="$(string.ActivationPhase.NONE)" value="0x00003585" />
        <message message="$(string.ActivationPhase.DEPLOYMENT)" value="0x00003586" />
        <message message="$(string.ActivationPhase.LICENSE_CHECK)" value="0x00003587" />
        <message message="$(string.ActivationPhase.VIEW_ACTIVATION)" value="0x00003588" />
        <message message="$(string.ActivationPhase.PLM_PREPARE)" value="0x00003589" />
        <message message="$(string.ActivationPhase.PLM_BEFORE_ACTIVATE)" value="0x0000358A" />
        <message message="$(string.ActivationPhase.COM_ACTIVATION)" value="0x0000358B" />
        <message message="$(string.ActivationPhase.COM_APPACTIVATE)" value="0x0000358C" />
        <message message="$(string.ActivationPhase.COM_ACTIVATEEXTENSION)" value="0x0000358D" />
        <message message="$(string.ActivationPhase.POLICY_CHECK)" value="0x0000358E" />
      </messageTable>
      <cmi />
    </events>
  </instrumentation>
  <localization>
    <resources culture="en-US">
      <stringTable>
        <string id="eventProviderName" value="Microsoft-Windows-Apps" />
        <string id="Event.ImmersiveShellStartupBegin" value="The shell is starting up." />
        <string id="Event.ImmersiveShellStartupComplete" value="The shell startup sequence completed with result %1." />
        <string id="Event.ImmersiveShellComponentStartup" value="The shell is starting up, the shell component with table index %1 is %2, current result (%3)." />
        <string id="Event.ImmersiveShellComponentStartupGuid" value="Shell component %1, phase %2, result %3." />
        <string id="Map.ShellComponentInitialize.CreateAndPublishServices" value="being created and publishing its services" />
        <string id="Map.ShellComponentInitialize.SubscribeAndSite" value="subscribing to services" />
        <string id="Map.ShellComponentInitialize.DelayedInitialization" value="preforming delayed initialization" />
        <string id="Map.ShellComponentInitialize.UnsubcribeFromServices" value="unsubscribing from services" />
        <string id="Map.ShellComponentInitialize.ShutdownServices" value="shutting down services" />
        <string id="Event.ImmersiveMonitorAdded" value="The Monitor Manager is adding a new display with identity %1." />
        <string id="Event.ImmersiveMonitorHandleDisplayChange" value="The Monitor Manager is handling a display change notification." />
        <string id="Event.ImmersiveMonitorConnectObject" value="An object is being connected to the Monitor %1." />
        <string id="Event.ImmersiveMonitorReconcileMonitors" value="The Monitor manager is reconciling monitors" />
        <string id="Event.ImmersiveMonitorReconcileMonitors_NoIdentity" value="The Monnitor Manager could not create a monitor identity. Error %1." />
        <string id="Event.TileCache_IdleTaskEnabled" value="The Optimize Start menu cache files task has been requested due to a layout change." />
        <string id="Event.TileCache_RemapFailed" value="Failed to remap the cache." />
        <string id="Event.TileXML_AllContentClipped" value="All payload content was clipped at the current tile size." />
        <string id="ToastManagerInitStartMessage" value="Initializing the Toast Manager." />
        <string id="ToastManagerInitStopMessage" value="Toast Manager Initializing completed with status : %1." />
        <string id="ToastCreateSessionStartMessage" value="Creating session with the Windows Notification Platform." />
        <string id="ToastCreateSessionStopMessage" value="Session creation with Windows Notification Platform completed with status : %1." />
        <string id="ToastStartPositionSetMessage" value="The start position for Toast Layout has been set to - %1 [x], %2 [y]." />
        <string id="ToastDisplayLimitSetMessage" value="The max display limit for Toast Layout has been set to - %1." />
        <string id="ToastOpaqueStateDurationSetMessage" value="The Toast opaque state duration for has been set to - %1." />
        <string id="ToastSizeSetMessage" value="A size for Toasts has been set to - %1 [height], %2 [width]." />
        <string id="ToastNewNotificationStartMessage" value="A new Notification with Id %1 was received from the Windows Notification Platform." />
        <string id="ToastNewNotificationStopMessage" value="The Notification with Id %1 was processed and displayed." />
        <string id="ToastDataProcessingStartMessage" value="Starting to Process the payload for the Notification Id : %1." />
        <string id="ToastDataProcessingStopMessage" value="Completed processing the payload for the Notification Id : %1, App Type %4 with Status %2. Is this a Special Toast? %3." />
        <string id="ToastRenderingDataDoneMessage" value="Received tile rendering info for the Notification Id : %1, App Type %4 with Status %2." />
        <string id="ToastRenderingDataErrorMessage" value="Error Receiving tile rendering info for the Notification Id : %1, App Type %4. Error Code : %2." />
        <string id="ToastUIRenderingStartMessage" value="Starting to render UI for the Notification Id : %1." />
        <string id="ToastUIRenderingStopMessage" value="Completed rendering UI for the Notification Id : %1, App Type %4 with Status %2." />
        <string id="ToastUIRenderingErrorMessage" value="Error rendering UI for the Notification Id : %1, App Type %4. Error Code : %2." />
        <string id="ToastPositionMessage" value="The Toast Position for the Notification Id : %1 is - %2 [x], %3 [y]." />
        <string id="ToastDisplayListEntryMessage" value="The Toast Display Index for the Notification Id : %1 is %2." />
        <string id="ToastOverflowEnqueueMessage" value="The Toast with Notification Id : %1 has been queued as overflow. Is it a special toast? %2" />
        <string id="ToastOverflowDequeueMessage" value="The Toast with Notification Id : %1 has been removed from the overflow queue. Is it a special toast? %2" />
        <string id="ToastCancelledMessage" value="The Toast with Notification Id : %1 has been cancelled." />
        <string id="ToastCancelReceivedMessage" value="Cancel Request for Toast with Notification Id : %1 has been received." />
        <string id="ToastCancelStoredMessage" value="Cancel Request for Toast with Notification Id : %1 has been stored." />
        <string id="ToastFrozenMessage" value="Toast with Notification Id : %1 has been frozen/thawed. IsFrozen? %2" />
        <string id="ToastDisplayListExitMessage" value="The Toast Display Index no longer occupied by the Notification Id : %1 is %2." />
        <string id="ToastMaxDisplayLimitReachedMessage" value="Unable to display Toast for the Notification Id : %1 as the number of Toasts displayed has reached the max display limit." />
        <string id="ToastOpaqueStateEnterMessage" value="Toast for Notification Id %1 is entering the Opaque State." />
        <string id="ToastOpaqueStateLeaveMessage" value="Toast for Notification Id %1 is leaving the Opaque State." />
        <string id="ToastDecayStateEnterMessage" value="Toast for Notification Id %1 is entering the Decay State." />
        <string id="ToastDecayStateLeaveMessage" value="Toast for Notification Id %1 is leaving the Decay State. Was this a Special Toast? %2." />
        <string id="ToastWorkingStateEnterMessage" value="Toast for Notification Id %1 is entering the Working State." />
        <string id="ToastWorkingStateLeaveMessage" value="Toast for Notification Id %1 is leaving the Working State." />
        <string id="ToastActivatedMessage" value="User has Activated the Toast for Notification Id %1, App Type %3. Was this a Special Toast? %2." />
        <string id="ToastDismissedMessage" value="User has Dismissed the Toast for Notification Id %1. Is this a Special Toast? %2." />
        <string id="ToastRemoveDisplayStarted" value="Starting to remove the Toast for Notification Id %1 from Display." />
        <string id="ToastRemoveDisplayCompleted" value="Completed removing the Toast for Notification Id %1 from Display." />
        <string id="ToastWorkingUIEnabled" value="The Toast for Notification Id %1 is completely Opaque and the Close Button has appeared." />
        <string id="ToastRearrangeStart" value="Rearranging displayed toasts owing to change in layout. The new start position is - %1 [x], %2 [y]." />
        <string id="ToastRearrangeStop" value="Rerrangement of Toasts to their new position is complete." />
        <string id="ToastImmersiveActivateError" value="Error Activating Application. Error Code : %1." />
        <string id="ToastVoipOverflowEnqueueMessage" value="The Toast with Notification Id : %1 has been queued as VoIP overflow." />
        <string id="ToastVoipOverflowDequeueMessage" value="The Toast with Notification Id : %1 has been removed from the VoIP overflow queue." />
        <string id="ToastRenderingDataGenerationStatus" value="API To generate Tile Rendering Data for the Notification Id : %1, App Type %4 completed with Status %2." />
        <string id="ToastAudioPlayStart" value="Calling MediaEngine-Play() on Path : %2 for Notification Id : %1. Was this a Special Toast? %3." />
        <string id="ToastAudioPlayBusy" value="Attempt to MediaEngine-Play() on Path : %2 for Notification Id : %1 conflicted with playback for Notification Id : %3." />
        <string id="ToastAudioStop" value="Calling MediaEngine-Stop() on Notification Id : %1." />
        <string id="ToastAudioPlayComplete" value="Playback for Notification Id : %1 has completed successfully." />
        <string id="ToastAudioPlayError" value="Error received during playback for Notification Id : %1." />
        <string id="ToastFadeInAnimationStarted" value="Toast FadeIn Animation started for Notification Id : %1." />
        <string id="ToastFadeInAnimationStopped" value="Toast FadeIn Animation stopped for Notification Id : %1." />
        <string id="ToastFadeOutAnimationStarted" value="Toast FadeOut Animation started for Notification Id : %1." />
        <string id="ToastFadeOutAnimationStopped" value="Toast FadeOut Animation stopped for Notification Id : %1." />
        <string id="ToastEntryAnimationStarted" value="Toast Entry Animation started for Notification Id : %1." />
        <string id="ToastEntryAnimationStopped" value="Toast Entry Animation stopped for Notification Id : %1." />
        <string id="ToastExitAnimationStarted" value="Toast Exit Animation started for Notification Id : %1." />
        <string id="ToastExitAnimationStopped" value="Toast Exit Animation stopped for Notification Id : %1." />
        <string id="ToastRepositionAnimationStarted" value="Toast Reposition Animation started for Notification Id : %1." />
        <string id="ToastRepositionAnimationStopped" value="Toast Reposition Animation stopped for Notification Id : %1." />
        <string id="ToastTapUpAnimationStarted" value="Toast TapUp Animation started for Notification Id : %1." />
        <string id="ToastTapUpAnimationStopped" value="Toast TapUp Animation stopped for Notification Id : %1." />
        <string id="ToastTapDownAnimationStarted" value="Toast TapDown Animation started for Notification Id : %1." />
        <string id="ToastTapDownAnimationStopped" value="Toast TapDown Animation stopped for Notification Id : %1." />
        <string id="AlarmToastDequeueMessage" value="The Alarm Toast with Notification Id : %1 that was pending has now been displayed and removed from the pending slot." />
        <string id="AlarmToastReplacingMessage" value="Canceling Alarm Toast with Notification Id : %1 to replace it wilth Alarm Toast with Notification Id : %2.  Cancel result : %3" />
        <string id="AlarmToastQueueMessage" value="The Alarm Toast with Notification Id : %1 has been set as the pending alarm." />
        <string id="ToastImmersiveApp" value="App" />
        <string id="ToastDesktopApp" value="Desktop Application" />
        <string id="ToastSystemApp" value="System Component" />
        <string id="Event.WatermarkFailedToRegisterLicensingEvent" value="Failed to register for licensing policy change event. Error code is %1." />
        <string id="Event.WatermarkFailedToCreateWindow" value="Failed to create the watermark window. Error code is %1." />
        <string id="Event.WatermarkFailedToLoadGenuineImage" value="Failed to load the genuine licensing image. Error code is %1." />
        <string id="Event.WatermarkFailedToBlendGenuineImage" value="Failed to blend the genuine licensing image. Error code is %1." />
        <string id="Event.WatermarkFailedToRender" value="Failed to render the watermark. Error code is %1." />
        <string id="Event.Watermark_Failed_To_Get_Genuine_Status" value="Failed to get genuine status. Error code is %1." />
        <string id="Keyword.PLM" value="Process Lifetime Manager" />
        <string id="Keyword.NotificationE2E" value="Notifications end-to-end" />
        <string id="Keyword.wpndebug_TileParsingErrors" value="Developer Debug: Debugging Tile or Badge XML Parsing Errors" />
        <string id="Keyword.wpndebug_LocalImageErrors" value="Developer Debug: Debugging Tile or Toast Local Image Rendering Errors" />
        <string id="Keyword.wpndebug_ToastParsingErrors" value="Developer Debug: Debugging Toast XML Parsing Errors" />
        <string id="Event.Tile_ImageLoad_WrongFormat" value="The image could not be loaded because it is not a PNG or JPEG" />
        <string id="Event.Tile_ImageLoad_BadSize" value="The image could not be loaded because it is too large" />
        <string id="Event.Tile_ImageLoad_BadPath" value="The image could not be loaded because the provided path does not exist" />
        <string id="Event.Tile_ImageLoad_BadProtocol" value="The image could not be loaded because the protocol handler used is invalid" />
        <string id="Event.TileXML_Badge_ParseXML_Error" value="The parsing of the badge notification XML payload has failed." />
        <string id="Event.TileNotifications_PauseNotifications" value="Notifications have been paused for this tile." />
        <string id="Event.TileNotifications_ResumeNotifications" value="Notifications have been resumed for this tile." />
        <string id="Event.TileNotifications_ImageDownloadFailed" value="Failed to download image for tile notification." />
        <string id="Event.TileNotifications_PresentNotificationFailed" value="Failed to present the notification for this tile." />
        <string id="Event.Tile_ImageLoad_FileName" value="A tile has attempted to load an image off disk." />
        <string id="Event.Tiles_Cache_Data_CRC_Failure" value="The tile cache has suffered a CRC failure for this entry's data region." />
        <string id="Event.Tiles_Cache_Entry_CRC_Failure" value="The tile cache has suffered a CRC failure for this entry's entry/header region." />
        <string id="Event.TileNotification_InitializeWPNFailure" value="The Windows Notification platform has failed initialization.  Notifications will not work until after a restart." />
        <string id="Channel.Operational" value="OperationalChannel" />
        <string id="Event.AccessibilityDockingGetAvailableSize" value="Docking Service: GetAvailable called." />
        <string id="Event.AccessibilityDockingReserveDockingSpace" value="Docking Service: ReserveDockingSpace called." />
        <string id="Event.AccessibilityDockingDockWindow" value="Docking Service: DockWindow called." />
        <string id="Event.AccessibilityDockingUndockWindow" value="Docking Service: UndockWindow called." />
        <string id="Event.AccessibilityDockingQueryWorkArea" value="Docking Service: Handling work area / resolution changes." />
        <string id="Event.ImmersiveShellLayoutInitialize" value="Layout Manager: Initialization" />
        <string id="Event.ImmersiveShellLayoutInvalidate" value="Layout Manager Invalidation has occurred" />
        <string id="Event.ImmersiveShellStartupLaunchError" value="Failed to launch startup applications" />
        <string id="Map.ImmersiveShellLayoutInvalidation.ResolutionChange" value="Layout Manager Invalidation: Resolution Change" />
        <string id="Map.ImmersiveShellLayoutInvalidation.AccessibilityDocking" value="Layout Manager Invalidation: Accessibility Keyboard Docking" />
        <string id="Map.ImmersiveShellLayoutInvalidation.AccessibilityUndocking" value="Layout Manager Invalidation: Accessibility Keyboard Undocking" />
        <string id="Map.ImmersiveShellLayoutInvalidation.ClientAdded" value="Layout Manager Invalidation: Layout Client Added" />
        <string id="Map.ImmersiveShellLayoutInvalidation.ClientRemoved" value="Layout Manager Invalidation: Layout Client Removed" />
        <string id="Map.ImmersiveShellIHMNotificationType.Showing" value="IHM Notification Type: Showing" />
        <string id="Map.ImmersiveShellIHMNotificationType.Hiding" value="IHM Notification Type: Hiding" />
        <string id="NotificationsPermissionSettingChanged" value="Setting for AppId: %1 has been changed to %2 from Permissions View" />
        <string id="NotificationsPermissionSettingEnabled" value="Setting for AppId: %1 has enabled = %2 in Permissions View" />
        <string id="NotificationsPermissionSettingSupported" value="Setting for AppId: %1 is supported in Permissions View? %2." />
        <string id="NotificationsPermissionSettingSync" value="Setting Sync Scheduled for Package: %2 on behalf of AppUserModelId: %1." />
        <string id="Value.SecondaryTile.Create" value="requestCreateAsync" />
        <string id="Value.SecondaryTile.Delete" value="requestDeleteAsync" />
        <string id="Event.ImmersiveShellAppManagerStateChange" value="Application state change for %1: %2." />
        <string id="Map.ImmersiveShellAppManagerApplicationStateChange.IAC_UNKNOWN" value="Application State is unknown" />
        <string id="Map.ImmersiveShellAppManagerApplicationStateChange.IAC_STARTED" value="Application Started up" />
        <string id="Map.ImmersiveShellAppManagerApplicationStateChange.IAC_FOREGROUND" value="Application moved to the foreground (application is visible)" />
        <string id="Map.ImmersiveShellAppManagerApplicationStateChange.IAC_BACKGROUND" value="Application moved to the background (app may already be hidden)" />
        <string id="Map.ImmersiveShellAppManagerApplicationStateChange.IAC_SHOWN" value="Application Shown" />
        <string id="Map.ImmersiveShellAppManagerApplicationStateChange.IAC_HIDDEN" value="Application Hidden" />
        <string id="Map.ImmersiveShellAppManagerApplicationStateChange.IAC_CLOSED" value="Application Closed" />
        <string id="Map.ImmersiveShellAppManagerApplicationStateChange.IAC_WINDOWPRESENTATIONDECLINED" value="HSHELL_FLASH arrived AND application is in LockedPresentation state" />
        <string id="Map.ImmersiveShellAppManagerApplicationStateChange.IAC_PRESENTEDWINDOWCHANGED" value="Window that application presents to the end-user changed" />
        <string id="Map.ImmersiveShellAppManagerApplicationStateChange.IAC_MOBODYENTERED" value="Application entered mobody band" />
        <string id="Map.ImmersiveShellAppManagerApplicationStateChange.IAC_MOBODYEXIT" value="Application exited mobody band" />
        <string id="PLM.MemoryPolicy.TerminationExemption.NOT_SUSPENDED" value="Package is running" />
        <string id="PLM.MemoryPolicy.TerminationExemption.BEING_OUTSWAPPED" value="Package is being suspended" />
        <string id="PLM.MemoryPolicy.TerminationExemption.DEBUG" value="Package is being debugged" />
        <string id="PLM.MemoryPolicy.TerminationExemption.TASKCOMPLETION" value="Package has an OS task completion exemption" />
        <string id="PLM.MemoryPolicy.TerminationExemption.REALTIMECOMMUNICATION" value="Package contains a realtime communication app" />
        <string id="PLM.ExemptionType.VISIBILITY" value="Package is visible" />
        <string id="PLM.ExemptionType.TASKCOMPLETION" value="Package is running an OS task completion" />
        <string id="PLM.ExemptionType.PACKAGE" value="Package is exempted by PackageMgr" />
        <string id="PLM.ExemptionType.RPC" value="Package is running an RPC" />
        <string id="PLM.ResumeReason.USER" value="User moved the app to the foreground" />
        <string id="PLM.ResumeReason.IAM" value="IAM is showing the app" />
        <string id="PLM.ResumeReason.RPC" value="Remote procedure call" />
        <string id="PLM.ResumeReason.TASK_START" value="OS task completion" />
        <string id="PLM.ResumeReason.PACKAGE_MGR" value="PackageMgr" />
        <string id="PLM.ResumeReason.USER_SWITCH_IN" value="User switch in" />
        <string id="PLM.ResumeReason.CONNECTEDSTANDBY_EXIT" value="Connected standby exit" />
        <string id="PLM.ResumeReason.FULL_EVAL" value="Full evaluation of PLM policy" />
        <string id="PLM.ResumeReason.DEBUG_API" value="Debug API" />
        <string id="PLM.PackageState.Active" value="PsmApplicationActive" />
        <string id="PLM.PackageState.Quiescing" value="PsmApplicationQuiescing" />
        <string id="PLM.PackageState.Halted" value="PsmApplicationHalted" />
        <string id="PLM.PackageState.Terminated" value="PsmApplicationTerminated" />
        <string id="PLM.PackageState.Unknown" value="Unknown" />
        <string id="PLM.TaskCompletion.PT_TC_PBM" value="PT_TC_PBM" />
        <string id="PLM.TaskCompletion.PT_TC_FILEOPENPICKER" value="PT_TC_FILEOPENPICKER" />
        <string id="PLM.TaskCompletion.PT_TC_SHARING" value="PT_TC_SHARING" />
        <string id="PLM.TaskCompletion.PT_TC_PRINTING" value="PT_TC_PRINTING" />
        <string id="PLM.TaskCompletion.PT_TC_GENERIC" value="PT_TC_GENERIC" />
        <string id="PLM.TaskCompletion.PT_TC_CAMERA_DCA" value="PT_TC_CAMERA_DCA" />
        <string id="PLM.TaskCompletion.PT_TC_PRINTER_DCA" value="PT_TC_PRINTER_DCA" />
        <string id="PLM.TaskCompletion.PT_TC_PLAYTO" value="PT_TC_PLAYTO" />
        <string id="PLM.TaskCompletion.PT_TC_FILESAVEPICKER" value="PT_TC_FILESAVEPICKER" />
        <string id="PLM.TaskCompletion.PT_TC_CONTACTPICKER" value="PT_TC_CONTACTPICKER" />
        <string id="PLM.TaskCompletion.PT_TC_CACHEDFILEUPDATER_LOCAL" value="PT_TC_CACHEDFILEUPDATER_LOCAL" />
        <string id="PLM.TaskCompletion.PT_TC_CACHEDFILEUPDATER_REMOTE" value="PT_TC_CACHEDFILEUPDATER_REMOTE" />
        <string id="PLM.TaskCompletion.PT_TC_WER_CONSENT" value="PT_TC_WER_CONSENT" />
        <string id="PLM.TaskCompletion.PT_TC_ERROR_REPORT" value="PT_TC_ERROR_REPORT" />
        <string id="PLM.TaskCompletion.PT_TC_UNCONSTRAINED" value="PT_TC_UNCONSTRAINED" />
        <string id="PLM.TaskCompletion.PT_TC_CRASHDUMP" value="PT_TC_CRASHDUMP" />
        <string id="PLM.SuspendTimeout" value="Package %1 was terminated because it took too long to suspend." />
        <string id="PLM.MemoryPolicy.Termination" value="Package %1 was terminated due to low system resources." />
        <string id="PLM.LaunchGraceExpired" value="App %1 did not launch within its allotted time." />
        <string id="PLM.ResumeApplication.Flags.Emptied" value="Emptied" />
        <string id="PLM.ResumeApplication.Flags.SwapDisabled" value="SwapDisabled" />
        <string id="PLM.ResumeApplication.Flags.Failure" value="Failure" />
        <string id="PLM.ResumeApplication.Flags.ProtectedBackstack" value="ProtectedBackstack" />
        <string id="PLM.ApplicationSwap.Flags.Emptied" value="Emptied" />
        <string id="PLM.ApplicationSwap.Flags.EmptiedEntire" value="EmptiedEntire" />
        <string id="PLM.ApplicationSwap.Flags.SwapDisabled" value="SwapDisabled" />
        <string id="PLM.ApplicationSwap.Flags.LargeApp" value="LargeApp" />
        <string id="PLM.ApplicationSwap.Flags.PrivateModifiedLow" value="PrivateModifiedLow" />
        <string id="Event.ActivationLogSuccess" value="The app %1 was activated for the %2 contract successfully." />
        <string id="Event.ActivationLogNotRegistered" value="The app %1 is not registered for the %2 contract or is not installed." />
        <string id="Event.ActivationLogMultipleExtensions" value="The app %1 has more than one extension registered for the %2 contract. Activation by AppUserModelId is ambiguous in this case, so the app was not started." />
        <string id="Event.ActivationLogMultiplePackages" value="The app %1's package family (%2) has more than one package installed. This is not supported, so the app was not activated for the %3 contract." />
        <string id="Event.ActivationLogUACDisabled" value="The app %1 could not be activated for the %2 contract because UAC is disabled." />
        <string id="Event.ActivationLogFullAdmin" value="The app %1 could not be activated for the %2 contract because the current user is an Administrator with a full token. Only split token Administrators can activate apps." />
        <string id="Event.ActivationLogElevated" value="Activation of the app %1 for the %2 contract was blocked because the activation attempt occurred in an elevated context. Apps must be activated from Medium-IL." />
        <string id="Event.ActivationLogDWMDisabled" value="The app %1 could not be activated for the %2 contract because Desktop Composition is disabled." />
        <string id="Event.ActivationLogTimedOut" value="Activation of the app %1 for the %2 contract timed out." />
        <string id="Event.ActivationLogRemediation" value="Activation of the app %1 for the %2 contract was blocked with error %3 because its package is in state: %4." />
        <string id="Event.ActivationLogRemediationApplicationBinary" value="Activation of the app %1 for the %2 contract was blocked with error %3 because of an issue with application binary %4. This could be because the binary is unsigned, contains an untrusted signature, or has been corrupted or tampered with. Reinstall the application to fix this issue." />
        <string id="Event.ActivationLogRemediationSystemBinary" value="Activation of the app %1 for the %2 contract was blocked with error %3 because of an issue with Windows binary %4. This could be because the binary is unsigned, contains an untrusted signature, or has been corrupted or tampered with. Refresh your PC to fix this issue." />
        <string id="Event.ActivationLogRemediationExternalBinary" value="Activation of the app %1 for the %2 contract was blocked with error %3 because of an issue with binary %4. This could be because the binary is unsigned, contains an untrusted signature, or has been corrupted or tampered with. See http://go.microsoft.com/fwlink/?LinkID=246710 for more information." />
        <string id="Event.ActivationLogGenericFailure" value="Activation of the app %1 for the %2 contract failed with error: %3." />
        <string id="Event.ActivationLogGenericFailureNoDetails" value="Activation of the app failed with error: %1." />
        <string id="Event.ActivationLogDisabledByPolicy" value="Activation of the app %1 for the %2 contract was blocked by policy. Contact your administrator for more information." />
        <string id="Event.ActivationAppManagerNotRunning" value="The app %1 could not be activated for the %2 contract because the app manager is not running." />
        <string id="Event.ActivationGlobalAppLogFailedActivation" value="Activation of app %1 failed with error: %2 See the Microsoft-Windows-TWinUI/Operational log for additional information." />
        <string id="Event.ActivationLogTemporaryLicenseError" value="Activation of the app %1 for the %2 contract was blocked because of a temporary issue with its license. Try launching the app again in a moment." />
        <string id="Event.ActivationLogPackageUpdating" value="Activation of the app %1 for the %2 contract was blocked because its package is being updated." />
        <string id="Event.ActivationLogLicenseExpired" value="Activation of the app %1 for the %2 contract was blocked because its trial license has expired." />
        <string id="Event.ActivateApplicationVerifyAndInitializeFailed" value="Activation of the app %1 for the %2 contract failed during verifcation and initialization with %3." />
        <string id="Event.ActivateApplicationInitializeFailed" value="Activation of the app %1 for the %2 contract failed during activation initialization with %3." />
        <string id="Event.ActivateApplicationForContractByAppIdAsUserWithHostFailed" value="ActivateApplicationForContractByAppIdAsUserWithHost of the app %1 for the %2 contract failed with %3." />
        <string id="Event.ActivateApplicationForContractByExtensionIdAsUserWithHostFailed" value="ActivateApplicationForContractByExtensionIdAsUserWithHost of the app %1 for the %2 contract failed with %3." />
        <string id="Event.ActivateApplicationForContractByAppIdAsUserWithHostReturnsAppFailed" value="ActivateApplicationForContractByAppIdAsUserWithHostReturnsApp of the app %1 for the %2 contract failed with %3." />
        <string id="Event.ActivateApplicationForContractByAcidAsUserWithHostFailed" value="ActivateApplicationForContractByAcidAsUserWithHost of the app %1 for the %2 contract failed with %3." />
        <string id="Event.ActivateApplicationForComponentUIByAUMIDFailed" value="ActivateApplicationForComponentUIByAUMID of the app %1 for the %2 contract failed with %3." />
        <string id="Event.ActivateExtensionFromContractHelperFailed" value="Activation via contract helper of the app %1 for the %2 contract failed with %3." />
        <string id="Event.ImmersiveAppOpenVerbResult" value="Activation of app %1 attempted. Execution state: %2, %3, %4." />
        <string id="Event.ImmersiveAppOpenRefreshData" value="Activation of app %1 will be attempted with refreshed data, result %2" />
        <string id="LauncherUninstallRemovePackageStart" value="Starting to remove package with full name %1." />
        <string id="LaunchImmersiveAppFailure" value="Failed to launch %1. %2 returned error code %3." />
        <string id="LauncherUninstallRemovePackageStop" value="Removing package with family name %1 completed with result %2." />
        <string id="LauncherUninstallDeleteShortcuts" value="Looking up package for %1 resulted in error %2. Deleting shortcuts." />
        <string id="Map.PackageRemediationStates.NORMAL" value="Error from application of unknown origin" />
        <string id="Map.PackageRemediationStates.LICENSE_ISSUE" value="License Issue" />
        <string id="Map.PackageRemediationStates.MODIFIED" value="Modified" />
        <string id="Map.PackageRemediationStates.TAMPERING" value="Tampered" />
        <string id="Map.PackageRemediationStates.UPDATING" value="Updating" />
        <string id="Map.ImmersiveAppLaunchExecutionStates.DEFAULT" value="Failed to go through a known execution codepath due to bad state" />
        <string id="Map.ImmersiveAppLaunchExecutionStates.ACTIVATEAPP" value="Attempted activation of the app" />
        <string id="Map.ImmersiveAppLaunchExecutionStates.LAUNCHSTORE" value="Attempted launch of the Store" />
        <string id="Map.ImmersiveAppLaunchExecutionStates.NOOP_RESET" value="No-op due to push button reset" />
        <string id="Map.LauncherAppStates.NORMAL" value="Normal" />
        <string id="Map.LauncherAppStates.INSTALLING" value="Installing" />
        <string id="Map.LauncherAppStates.QUEUED" value="Queued" />
        <string id="Map.LauncherAppStates.PAUSED" value="Paused" />
        <string id="Map.LauncherAppStates.ERROR" value="Error" />
        <string id="Map.LauncherAppStates.RESET" value="Reset" />
        <string id="Map.LauncherAppStates.BLOCKED" value="Blocked" />
        <string id="Map.ImmersiveAppLaunchExecutionStates.INSTALLPACKAGE" value="Attempted to install package due to preview tile activation" />
        <string id="Map.ImmersiveAppLaunchExecutionStates.SHOWINSTALLERROR" value="Showed install error dialog for app" />
        <string id="Event.TileManagementPackageInfoInstallStateChange" value="Updating install state of package %1 to '%2' with HRESULT %3." />
        <string id="Event.TileManagementAppTileInfoCommitCreate" value="On commit, creation of shortcut with AppUserModelId %1 with HRESULT %2." />
        <string id="Event.TileManagementAppTileInfoCommitUpdate" value="On commit, update of shortcut with AppUserModelId %1 with HRESULT %2." />
        <string id="Event.TileManagementAppTileInfoCommitDelete" value="On commit, deletion of shortcut with AppUserModelId %1 with HRESULT %2." />
        <string id="Event.TileManagementAppTileInfoCommitTemporary" value="On commit, creation of temporary shortcut with AppUserModelId %1 with HRESULT %2." />
        <string id="Event.TileManagementAppTileInfoCommitChangePropValue" value="On commit, changing property values in shortcut with AppUserModelId %1 failed as the shortcut file does not exist." />
        <string id="Event.TileManagementAppTileInfoRevertCreate" value="On revert, creation of shortcut with AppUserModelId %1 with HRESULT %2." />
        <string id="Event.TileManagementAppTileInfoRevertUpdate" value="On revert, update of shortcut with AppUserModelId %1 with HRESULT %2." />
        <string id="Event.TileManagementAppTileInfoRevertDelete" value="On revert, deletion of shortcut with AppUserModelId %1 with HRESULT %2." />
        <string id="Event.DevicesCharmPrintTaskRequestTimedOut" value="The request for a Print Task timed out for application %1." />
        <string id="Event.DevicesCharmPlaySourceRequestTimedOut" value="The request for a Play Source timed out for application %1." />
        <string id="SecondaryTileQuota.CheckQuota_Start" value="Checking secondary tile roaming quota." />
        <string id="SecondaryTileQuota.CheckQuota_Stop" value="Finished checking secondary tile roaming quota with HRESULT %1, quota %2 bytes, current usage %3 bytes." />
        <string id="SecondaryTileQuota.EnforceQuota_Start" value="Enforcing secondary tile roaming quota - need to reduce %1 bytes." />
        <string id="SecondaryTileQuota.EnforceQuota_Stop" value="Finished enforcing secondary tile roaming quota with HRESULT %1, reclaimed %2 bytes." />
        <string id="PLM.Priority.Paused" value="Paused Priority" />
        <string id="PLM.Priority.VeryLow" value="Very Low Priority" />
        <string id="PLM.Priority.Normal" value="Normal Priority" />
        <string id="ConnectedSearch.LogClickEventProcessingComplete" value="Click Event Processing Complete - Error Code: %1, Impression GUID: %2, Target ID: %3, Input Method: %4, First Item ID: %5, Last Item ID: %6, Viewport Flags: %7." />
        <string id="ConnectedSearch.LogScrollEventProcessingComplete" value="Scroll Event Processing Complete - Error Code: %1, Impression GUID: %2, Scroll Direction: %3, Input Method: %4, First Item ID: %5, Last Item ID: %6, Viewport Flags: %7." />
        <string id="ConnectedSearch.LogAppVisibilityEventProcessingComplete" value="App Visibility Event Processing Complete - Error Code: %1, Impression GUID: %2, New Visibility State: %3." />
        <string id="ConnectedSearch.LogAppResizeEventProcessingComplete" value="App Resize Event Processing Complete - Error Code: %1, Impression GUID: %2, Orientation: %3, First Item ID: %4, Last Item ID: %5, Viewport Flags: %6." />
        <string id="ConnectedSearch.LogWebLayoutEventProcessingComplete" value="Web Layout Event Processing Complete - Error Code: %1, Impression GUID: %2, Layout Action: %3, Telemetry Id affected: %4." />
        <string id="ConnectedSearch.LogLocalLayoutEventProcessingComplete" value="Local Layout Event Processing Complete - Error Code: %1, Impression GUID: %2, Layout Action: %3, Item Type: %4." />
        <string id="ConnectedSearch.LogAppInstallStateProcessingComplete" value="App Install State Event Processing Complete - Error Code: %1, Impression GUID: %2, Layout Action: %3, Telemetry Id affected: %4." />
        <string id="ConnectedSearch.LogHttpErrorEventProcessingComplete" value="HTTP Error Event Processing Complete - Operation Error Code: %1, Impression GUID: %2, Logged Error Code: %3, Error Url: %4, Error HBT: %5." />
        <string id="ConnectedSearch.LogParsingErrorEventProcessingComplete" value="Parsing Error Event Processing Complete - Operation Error Code: %1, Impression GUID: %2, Logged Error Code: %3, Error Url: %4, Error HBT: %5." />
        <string id="ConnectedSearch.LogTemplateErrorEventProcessingComplete" value="Template Error Event Processing Complete - Operation Error Code: %1, Impression GUID: %2, Logged Error Code: %3, Error Template ID: %4, Error Telemetry ID: %5." />
        <string id="ConnectedSearch.LogTemplateFallbackEventProcessingComplete" value="Template Fallback Event Processing Complete - Operation Error Code: %1, Impression GUID: %2, Fallback Telemetry ID: %3." />
        <string id="ConnectedSearch.LogSuggestionEventProcessingComplete" value="Suggestion Event Processing Complete - Error Code: %1, Partial Query: %2, Selected Position: %3, Max Query Length With Suggestion: %4, Instrumentation Payload: %5." />
        <string id="ConnectedSearch.LogDirectQueryProcessingComplete" value="Direct Query Instrumentation Processing Complete - Error Code: %1, Partial Query: %2, Number of Suggestions Shown: %3, Max Query Length With Suggestion: %4, Instrumentation Payload: %5." />
        <string id="ConnectedSearch.LogPerfPingEventProcessingComplete" value="Perf Ping Event Processing Complete - Error Code: %1, Impression GUID: %2, Data Center: %3, Was Abandoned?: %4. JSON Payload: %5" />
        <string id="ConnectedSearch.LogDetailArrowClickEventProcessingComplete" value="Detail Arrow Click Event Processing Complete - Error Code: %1, Impression GUID: %2, Telemetry Id: %3, Arrow Direction: %4." />
        <string id="ConnectedSearch.LogDetailViewVisibilityEventProcessingComplete" value="Detail View Visibility Event Processing Complete - Error Code: %1, Impression GUID: %2, IsVisible?: %3." />
        <string id="ConnectedSearch.LogAttributionClickEventProcessingComplete" value="Attribution Overlay Click Event Processing Complete - Error Code: %1, Impression GUID: %2, Telemetry Id: %3." />
        <string id="ConnectedSearch.LogAttributionVisibilityEventProcessingComplete" value="Attribution Overlay Visibility Event Processing Complete - Error Code: %1, Impression GUID: %2, IsVisible?: %3." />
        <string id="ConnectedSearch.LogAppBarClickEventProcessingComplete" value="App Bar Click Event Processing Complete - Error Code: %1, Impression GUID: %2, Telemetry Id: %3, Command Id: %4." />
        <string id="ConnectedSearch.SetActiveImpressionGuid" value="Active Impression GUID has been set - Operation Error Code: %1, Impression GUID: %2." />
        <string id="ConnectedSearch.NoImpressionGuidForInstrumentation" value="Instrumentation Payload dropped because Impression Guid was not set - Dropped Instrumentation API: %1." />
        <string id="ConnectedSearch.LogModeChangeJSONPayload" value="CI.ModeChange JSON Payload serialized - Payload: %1." />
        <string id="ConnectedSearch.LogAppNavigationJSONPayload" value="CI.AppExit/CI.AppResume JSON Payload serialized - Payload: %1." />
        <string id="ConnectedSearch.LogSwipeJSONPayload" value="CI.Swipe JSON Payload serialized - Payload: %1." />
        <string id="ConnectedSearch.LogLayoutJSONPayload" value="L.MergeUpdate JSON Payload serialized - Payload: %1." />
        <string id="ConnectedSearch.LogHttpErrorJSONPayload" value="CI.Error JSON Payload serialized - Payload: %1." />
        <string id="ConnectedSearch.LogLocalSuggestionJSONPayload" value="Local Suggestion JSON Payload serialized - Payload: %1." />
        <string id="ConnectedSearch.LogPerfJSONPayload" value="Perf Ping JSON Payload serialized - Payload: %1." />
        <string id="ConnectedSearch.LogTemplateFallbackJSONPayload" value="Template Fallback JSON Payload serialized - Payload: %1." />
        <string id="ConnectedSearch.LogWebClickEventEnter" value="Entering LogWebResultClick API call." />
        <string id="ConnectedSearch.LogWebClickEventExit" value="Exiting LogWebResultClick API call." />
        <string id="ConnectedSearch.LogWebClickEventBGEnter" value="Entering LogWebResultClick background worker." />
        <string id="ConnectedSearch.LogWebClickEventBGExit" value="Exiting LogWebResultClick background worker." />
        <string id="ConnectedSearch.LogClickEventJSONPayload" value="Click Event JSON Serialization Complete - Input Method: %1, Timestamp: %2, IsLandscape: %3, JSON: %4." />
        <string id="ConnectedSearch.UploadEventEnqueued" value="Instrumentation Event Enqueued for Upload - Impression GUID: %1, Timestamp: %2, HRESULT: %3, Url: %4, HBT: %5." />
        <string id="ConnectedSearch.UploadEventDequeued" value="Instrumentation Event Dequeued for Upload - Impression GUID: %1, Timestamp: %2, JSON: %3." />
        <string id="ConnectedSearch.UploadPayload" value="Instrumentation Payload uploaded - POST Payload: %1, Query String: %2 Error Code: %3." />
        <string id="ConnectedSearch.ConnectionEstablished" value="Connection Established to Instrumentation Endpoint - Endpoint Id: %1, Host Name: %2, Object Name: %3, User Agent: %4." />
        <string id="ConnectedSearch.SentUploadRequest" value="Upload Request sent to Instrumentation Endpoint - HTTP Response Code: %1, HTTP Request Headers: %2, HTTP Post Payload: %3." />
        <string id="ConnectedSearch.AuthenticationStarted" value="Authentication has started" />
        <string id="ConnectedSearch.AuthenticationStopped" value="Authentication has stopped" />
        <string id="ConnectedSearch.AuthenticationSuccess" value="Authentication has succeeded" />
        <string id="ConnectedSearch.AuthenticationFailure" value="Authentication failed - Error Code: 0x%1." />
        <string id="ConnectedSearch.UnAuthenticationStarted" value="UnAuthentication has started" />
        <string id="ConnectedSearch.UnAuthenticationStopped" value="UnAuthentication has stopped" />
        <string id="ConnectedSearch.UnAuthenticationSuccess" value="UnAuthentication has succeeded: only auth cookies are cleared" />
        <string id="ConnectedSearch.UnAuthenticationSuccessAllCookiesCleared" value="UnAuthentication has succeeded: all cookies are cleared" />
        <string id="ConnectedSearch.UnAuthenticationFailure" value="UnAuthentication failed - Error Code: 0x%1." />
        <string id="ConnectedSearch.AuthenticationGettingTokenFailure" value="Authentication failed in getting the token- Error Code: 0x%1." />
        <string id="ConnectedSearch.AuthenticationLocalAccount" value="User is logged in as local account, no authentication needed" />
        <string id="ConnectedSearch.HTTPRequestFailure" value="HTTP Request failed - Error Code: 0x%1." />
        <string id="ConnectedSearch.LogLocalClickEventEnter" value="Entering LogLocalResultClick API call." />
        <string id="ConnectedSearch.LogLocalClickEventExit" value="Exiting LogLocalResultClick API call." />
        <string id="ConnectedSearch.LogLocalClickEventBGEnter" value="Entering LogLocalResultClick background worker." />
        <string id="ConnectedSearch.LogLocalClickEventBGExit" value="Exiting LogLocalResultClick background worker." />
        <string id="ConnectedSearch.LogScrollEventEnter" value="Entering LogScroll API call." />
        <string id="ConnectedSearch.LogScrollEventExit" value="Exiting LogScroll API call." />
        <string id="ConnectedSearch.LogScrollEventBGEnter" value="Entering LogScroll background worker." />
        <string id="ConnectedSearch.LogScrollEventBGExit" value="Exiting LogScroll background worker." />
        <string id="ConnectedSearch.LogWebLayoutEventEnter" value="Entering LogWebLayoutChange API call." />
        <string id="ConnectedSearch.LogWebLayoutEventExit" value="Exiting LogWebLayoutChange API call." />
        <string id="ConnectedSearch.LogWebLayoutEventBGEnter" value="Entering LogWebLayoutChange background worker." />
        <string id="ConnectedSearch.LogWebLayoutEventBGExit" value="Exiting LogWebLayoutChange background worker." />
        <string id="ConnectedSearch.LogLocalLayoutEventEnter" value="Entering LogLocalLayoutChange API call." />
        <string id="ConnectedSearch.LogLocalLayoutEventExit" value="Exiting LogLocalLayoutChange API call." />
        <string id="ConnectedSearch.LogLocalLayoutEventBGEnter" value="Entering LogLocalLayoutChange background worker." />
        <string id="ConnectedSearch.LogLocalLayoutEventBGExit" value="Exiting LogLocalLayoutChange background worker." />
        <string id="ConnectedSearch.LogAppVisibilityEventEnter" value="Entering LogAppVisibilityChange API call." />
        <string id="ConnectedSearch.LogAppVisibilityEventExit" value="Exiting LogAppVisibilityChange API call." />
        <string id="ConnectedSearch.LogAppVisibilityEventBGEnter" value="Entering LogAppVisibilityChange background worker." />
        <string id="ConnectedSearch.LogAppVisibilityEventBGExit" value="Exiting LogAppVisibilityChange background worker." />
        <string id="ConnectedSearch.LogAppResizeEventEnter" value="Entering LogAppResize API call." />
        <string id="ConnectedSearch.LogAppResizeEventExit" value="Exiting LogAppResize API call." />
        <string id="ConnectedSearch.LogAppResizeEventBGEnter" value="Entering LogAppResize background worker." />
        <string id="ConnectedSearch.LogAppResizeEventBGExit" value="Exiting LogAppResizeChange background worker." />
        <string id="ConnectedSearch.LogHttpErrorEventEnter" value="Entering LogHttpError API call." />
        <string id="ConnectedSearch.LogHttpErrorEventExit" value="Exiting LogHttpError API call." />
        <string id="ConnectedSearch.LogHttpErrorEventBGEnter" value="Entering LogHttpError background worker." />
        <string id="ConnectedSearch.LogHttpErrorEventBGExit" value="Exiting LogHttpError background worker." />
        <string id="ConnectedSearch.LogParsingErrorEventEnter" value="Entering LogParsingError API call." />
        <string id="ConnectedSearch.LogParsingErrorEventExit" value="Exiting LogParsingError API call." />
        <string id="ConnectedSearch.LogParsingErrorEventBGEnter" value="Entering LogParsingError background worker." />
        <string id="ConnectedSearch.LogParsingErrorEventBGExit" value="Exiting LogParsingError background worker." />
        <string id="ConnectedSearch.LogTemplateFallbackEventEnter" value="Entering LogTemplateFallback API call." />
        <string id="ConnectedSearch.LogTemplateFallbackEventExit" value="Exiting LogTemplateFallback API call." />
        <string id="ConnectedSearch.LogTemplateFallbackEventBGEnter" value="Entering LogTemplateFallback background worker." />
        <string id="ConnectedSearch.LogTemplateFallbackEventBGExit" value="Exiting LogTemplateFallback background worker." />
        <string id="ConnectedSearch.LogTemplateErrorEventEnter" value="Entering LogTemplateError API call." />
        <string id="ConnectedSearch.LogTemplateErrorEventExit" value="Exiting LogTemplateError API call." />
        <string id="ConnectedSearch.LogTemplateErrorEventBGEnter" value="Entering LogTemplateError background worker." />
        <string id="ConnectedSearch.LogTemplateErrorEventBGExit" value="Exiting LogTemplateError background worker." />
        <string id="ConnectedSearch.LogSuggestionEventEnter" value="Entering LogSuggestion API call." />
        <string id="ConnectedSearch.LogSuggestionEventExit" value="Exiting LogSuggestion API call." />
        <string id="ConnectedSearch.LogSuggestionEventBGEnter" value="Entering LogSuggestion background worker." />
        <string id="ConnectedSearch.LogSuggestionEventBGExit" value="Exiting LogSuggestion background worker." />
        <string id="ConnectedSearch.LogPerfPingEventEnter" value="Entering LogPerfPing API call." />
        <string id="ConnectedSearch.LogPerfPingEventExit" value="Exiting LogPerfPing API call." />
        <string id="ConnectedSearch.LogPerfPingEventBGEnter" value="Entering LogPerfPing background worker." />
        <string id="ConnectedSearch.LogPerfPingEventBGExit" value="Exiting LogPerfPing background worker." />
        <string id="ConnectedSearch.LogPerfRequestStartEventEnter" value="Entering LogPerfRequestStart API call." />
        <string id="ConnectedSearch.LogPerfRequestStartEventExit" value="Exiting LogPerfRequestStart API call." />
        <string id="ConnectedSearch.LogPerfRequestSentEventEnter" value="Entering LogPerfRequestSent API call." />
        <string id="ConnectedSearch.LogPerfRequestSentEventExit" value="Exiting LogPerfRequestSent API call." />
        <string id="ConnectedSearch.LogPerfRenderCompleteEventEnter" value="Entering LogPerfRenderComplete API call." />
        <string id="ConnectedSearch.LogPerfRenderCompleteEventExit" value="Exiting LogPerfRenderComplete API call." />
        <string id="ConnectedSearch.LogPerfImagesCompleteEventEnter" value="Entering LogPerfImagesComplete API call." />
        <string id="ConnectedSearch.LogPerfImagesCompleteEventExit" value="Exiting LogPerfImagesComplete API call." />
        <string id="ConnectedSearch.LogPerfAbandonedEventEnter" value="Entering LogPerfAbandoned API call." />
        <string id="ConnectedSearch.LogPerfAbandonedEventExit" value="Exiting LogPerfAbandoned API call." />
        <string id="ConnectedSearch.LogPerfResponseReceivedEventEnter" value="Entering LogPerfResponseReceived API call." />
        <string id="ConnectedSearch.LogPerfResponseReceivedEventExit" value="Exiting LogPerfResponseReceived API call." />
        <string id="ConnectedSearch.TemplateDownloadStart" value="Template download starting - Query String: %1, Impression GUID: %2." />
        <string id="ConnectedSearch.TemplateDownloadFinish" value="Template download finished - Query String: %1, Impression GUID: %2, HRESULT: %3." />
        <string id="ConnectedSearch.TemplateWrittenToDisk" value="Downloaded template written to disk - Template ID: %1." />
        <string id="ConnectedSearch.RetryTimerScheduled" value="Error Instrumentation Retry Timer has been scheduled" />
        <string id="ConnectedSearch.RetryTimerCallback" value="Error Instrumentation Retry Timer Callback has been fired" />
        <string id="ConnectedSearch.ErrorInstDroppedRetry" value="Error Instrumentation Event(s) have been dropped after a maximum number of retries" />
        <string id="ConnectedSearch.ErrorInstDroppedOverflow" value="Error Instrumentation Event has been dropped due to error overflow." />
        <string id="ConnectedSearch.UseConnectedSearchSettingEntry" value="Entering SetUseConnectedSearch API." />
        <string id="ConnectedSearch.SearchOnMeteredConnectionSettingEntry" value="Entering SetSearchOnMeteredConnection API." />
        <string id="ConnectedSearch.LocationAwarenessSettingEntry" value="Entering SetLocationAwareness API." />
        <string id="ConnectedSearch.ShareHistorySettingEntry" value="Entering SetShareHistory API." />
        <string id="ConnectedSearch.SafeSearchSettingEntry" value="Entering SetSafeSearch API." />
        <string id="ConnectedSearch.DeleteOnlineHistorySettingEntry" value="Entering DeleteOnlineSearchHistory API." />
        <string id="ConnectedSearch.DeleteLocalHistorySettingEntry" value="Entering DeleteLocalSearchHistory API." />
        <string id="ConnectedSearch.DeleteOnlineHistory" value="Exiting DeleteOnlineHistory API - HRESULT: 0x%1." />
        <string id="ConnectedSearch.DeleteLocalHistory" value="Exiting DeleteLocalHistory API - HRESULT: 0x%1." />
        <string id="ConnectedSearch.UseConnectedSearchSettingExit" value="Exiting SetUseConnectedSearch API - ChangeTo: %1. HRESULT: 0x%2." />
        <string id="ConnectedSearch.SearchOnMeteredConnectionSettingExit" value="Exiting SetSearchOnMeteredConnection API - ChangeTo: %1. HRESULT: 0x%2." />
        <string id="ConnectedSearch.LocationAwarenessSettingExit" value="Exiting SetLocationAwareness API - ChangeTo: %1. HRESULT: 0x%2." />
        <string id="ConnectedSearch.ShareHistorySettingExit" value="Exiting SetShareHistory API - ChangeTo: %1. HRESULT: 0x%2." />
        <string id="ConnectedSearch.SafeSearchSettingExit" value="Exiting SetSafeSearch API - ChangeTo: %1. HRESULT: 0x%2." />
        <string id="ConnectedSearch.LogDetailArrowClickEnter" value="Entering LogDetailArrowClick API call." />
        <string id="ConnectedSearch.LogDetailArrowClickExit" value="Exiting LogDetailArrowClick API call." />
        <string id="ConnectedSearch.LogDetailArrowClickBGEnter" value="Entering LogDetailArrowClick background worker." />
        <string id="ConnectedSearch.LogDetailArrowClickBGExit" value="Exiting LogDetailArrowClick background worker." />
        <string id="ConnectedSearch.LogAttributionClickEnter" value="Entering LogAttributionClick API call." />
        <string id="ConnectedSearch.LogAttributionClickExit" value="Exiting LogAttributionClick API call." />
        <string id="ConnectedSearch.LogAttributionClickBGEnter" value="Entering LogAttributionClick background worker." />
        <string id="ConnectedSearch.LogAttributionClickBGExit" value="Exiting LogAttributionClick background worker." />
        <string id="ConnectedSearch.LogDetailsViewVisibilityEnter" value="Entering LogDetailsViewVisibility API call." />
        <string id="ConnectedSearch.LogDetailsViewVisibilityExit" value="Exiting LogDetailsViewVisibility API call." />
        <string id="ConnectedSearch.LogDetailsViewVisibilityBGEnter" value="Entering LogDetailsViewVisibility background worker." />
        <string id="ConnectedSearch.LogDetailsViewVisibilityBGExit" value="Exiting LogDetailsViewVisibility background worker." />
        <string id="ConnectedSearch.LogAttributionVisibilityEnter" value="Entering LogAttributionVisibility API call." />
        <string id="ConnectedSearch.LogAttributionVisibilityExit" value="Exiting LogAttributionVisibility API call." />
        <string id="ConnectedSearch.LogAttributionVisibilityBGEnter" value="Entering LogAttributionVisibility background worker." />
        <string id="ConnectedSearch.LogAttributionVisibilityBGExit" value="Exiting LogAttributionVisibility background worker." />
        <string id="ConnectedSearch.LogAppBarClickEnter" value="Entering LogAppBarClick API call." />
        <string id="ConnectedSearch.LogAppBarClickExit" value="Exiting LogAppBarClick API call." />
        <string id="ConnectedSearch.LogAppBarClickBGEnter" value="Entering LogAppBarClick background worker." />
        <string id="ConnectedSearch.LogAppBarClickBGExit" value="Exiting LogAppBarClick background worker." />
        <string id="ConnectedSearch.LogDirectQueryEnter" value="Entering GetInstrumenationForDirectQuery API call." />
        <string id="ConnectedSearch.LogDirectQueryExit" value="Exiting GetInstrumenationForDirectQuery API call." />
        <string id="ConnectedSearch.LogDetailArrowClickJSONPayload" value="Detail Arrow Click Properties JSON Payload serialized - Payload: %1." />
        <string id="ConnectedSearch.LogAttributionClickJSONPayload" value="Attribution Click Properties JSON Payload serialized - Payload: %1." />
        <string id="ConnectedSearch.LogDetailsVisbilityJSONPayload" value="Details Visibility JSON Payload serialized - Payload: %1." />
        <string id="ConnectedSearch.LogAttributionVisbilityJSONPayload" value="Attribution Visibility JSON Payload serialized - Payload: %1." />
        <string id="ConnectedSearch.LogAppBarClickJSONPayload" value="App Bar Click JSON Payload serialized - Payload: %1." />
        <string id="ConnectedSearch.ImageDownloaderPreFetchTaskStart" value="Starting Image Downloader Pre-Fetch Task for Impression GUID: %1." />
        <string id="ConnectedSearch.ImageDownloaderPreFetchTaskStop" value="Completed Image Downloader Pre-Fetch Task for Impression GUID: %1 with HRESULT: %2." />
        <string id="ConnectedSearch.ImageDownloaderDeferredPreFetchTaskStart" value="Starting Image Downloader Deferred Pre-Fetch Task." />
        <string id="ConnectedSearch.ImageDownloaderDeferredPreFetchTaskStop" value="Completed Image Downloader Deferred Pre-Fetch Task with HRESULT: %1." />
        <string id="ConnectedSearch.ImageDownloaderDownloadUrlStart" value="Starting Image Download for URL: %1." />
        <string id="ConnectedSearch.ImageDownloaderDownloadUrlStop" value="Completed Image Download for URL: %1 with HRESULT: %2." />
        <string id="AppointmentActions.AddAppointmentFailure" value="The operation to add an appointment failed with %1." />
        <string id="AppointmentActions.ReplaceAppointmentFailure" value="The operation to replace an appointment failed with %1." />
        <string id="AppointmentActions.RemoveAppointmentFailure" value="The operation to remove an appointment failed with %1." />
        <string id="AppointmentActions.ExecuteActionFailure" value="Appointment action %1 failed with HRESULT %2." />
        <string id="AssociationLaunch.File.UnsupportedFileExtension" value="Windows.System.Launcher.LaunchFileAsync failed because the file extension %1 is not supported by this API." />
        <string id="AssociationLaunch.File.MissingFileExtension" value="Windows.System.Launcher.LaunchFileAsync failed because the launched file has no file extension." />
        <string id="AssociationLaunch.File.DesktopAppsDisabled" value="Windows.System.Launcher.LaunchFileAsync failed because the current group policy settings prohibit launching desktop programs through this API." />
        <string id="AssociationLaunch.Uri.UnsupportedScheme" value="Windows.System.Launcher.LaunchUriAsync failed because the URI scheme %1 is not supported by this API." />
        <string id="AssociationLaunch.Uri.DesktopAppsDisabled" value="Windows.System.Launcher.LaunchUriAsync failed because the current group policy settings prohibit launching desktop programs through this API." />
        <string id="AssociationLaunch.Uri.UnsupportedFileExtension" value="Windows.System.Launcher.LaunchUriAsync failed because the file extension %1 is not supported by this API." />
        <string id="AssociationLaunch.Uri.MissingFileExtension" value="Windows.System.Launcher.LaunchUriAsync failed because file URI has no file extension." />
        <string id="AssociationLaunch.Uri.LocalZoneBlocked" value="Windows.System.Launcher.LaunchUriAsync failed because URI %1 points to a local resource. Local zone URIs are not supported by this API." />
        <string id="AssociationLaunch.Uri.MissingIntranetCapability" value="Windows.System.Launcher.LaunchUriAsync failed because URI %1 points to an intranet network resource. In order to launch intranet URIs the app must have the privateNetworkClientServer capability." />
        <string id="AssociationLaunch.Uri.UntrustedFileBlocked" value="Windows.System.Launcher.LaunchUriAsync failed because file URI %1 points to an untrusted resource." />
        <string id="PLM.GpuWatchdogMode.Interference" value="GpuWatchdogMode: Interference" />
        <string id="PLM.GpuWatchdogMode.LowUtilizationOrMaximumTime" value="GpuWatchdogMode: LowUtilizationOrMaximumTime" />
        <string id="PLM.IsChild" value="ChildSuspensionGroup" />
        <string id="PLM.IsWWAHost" value="WWAHost" />
        <string id="PLM.SpeculativeLaunchResult.Interactive" value="AppInteractive" />
        <string id="PLM.Terminated" value="Terminated" />
        <string id="PLM.TerminateReason.Crash" value="Crash" />
        <string id="PLM.TerminateReason.DebugApi" value="DebugApi" />
        <string id="PLM.TerminateReason.BrokerCrash" value="BrokerCrash" />
        <string id="PLM.TerminateReason.Invalid" value="Invalid" />
        <string id="PLM.TerminateReason.ServicingStart" value="ServicingStart" />
        <string id="PLM.TerminateReason.ServicingStop" value="ServicingStop" />
        <string id="PLM.TerminateReason.Uninstall" value="Uninstall" />
        <string id="PLM.TerminateReason.LogOff" value="LogOff" />
        <string id="PLM.TerminateReason.UserClose" value="UserClose" />
        <string id="PLM.TerminateReason.PendingUserCloseOnSwitch" value="PendingUserCloseOnSwitch" />
        <string id="PLM.TerminateReason.SystemClose" value="SystemClose" />
        <string id="PLM.TerminateReason.PendingSystemCloseOnSwitch" value="PendingSystemCloseOnSwitch" />
        <string id="PLM.TerminateReason.ReportQuiesceHang" value="ReportQuiesceHang" />
        <string id="PLM.TerminateReason.MemoryPolicy" value="MemoryPolicy" />
        <string id="PLM.TerminateReason.TerminateApi" value="TerminateApi" />
        <string id="PLM.TerminateReason.LaunchTriggeredTerminateApi" value="LaunchTriggeredTerminateApi" />
        <string id="PLM.TerminateReason.ErrorReportingOnSwitch" value="ErrorReportingOnSwitch" />
        <string id="PLM.TerminateReason.PendingTerminationOnSwitch" value="PendingTerminationOnSwitch" />
        <string id="PLM.TerminateReason.HandleInUse" value="HandleInUse" />
        <string id="PLM.TerminateReason.ActivationHang" value="ActivationHang" />
        <string id="PLM.TerminateReason.NoWindowAfterActivation" value="NoWindowAfterActivation" />
        <string id="PLM.TerminateReason.ForceTerminationDependency" value="ForceTerminationDependency" />
        <string id="PLM.TerminateReason.HungWindowOnSwitch" value="HungWindowOnSwitch" />
        <string id="PLM.TerminateReason.ActivationHangReportingOnSwitch" value="ActivationHangReportingOnSwitch" />
        <string id="PLM.TerminateReason.TerminateBeforeActivation" value="TerminateBeforeActivation" />
        <string id="PLM.TerminateReason.Cleanup" value="Cleanup" />
        <string id="PLM.TerminateReason.PendingCleanupOnSwitch" value="PendingCleanupOnSwitch" />
        <string id="PLM.TerminateReason.BackgroundTaskCleanup" value="BackgroundTaskCleanup" />
        <string id="PLM.TerminateReason.SetNextApplicationState" value="SetNextApplicationState" />
        <string id="PLM.TerminateReason.PnpAwaitingResponse" value="PnpAwaitingResponse" />
        <string id="PLM.TerminateReason.PsWakeChargeResourcePolicy" value="PsWakeChargeResourcePolicy" />
        <string id="PLM.TerminateReason.FltRundownWaitBlocked" value="FltRundownWaitBlocked" />
        <string id="PLM.TerminateReason.TerminateApiRemoveBackgroundWorkItems" value="TerminateApiRemoveBackgroundWorkItems" />
        <string id="PLM.TerminateReason.MemoryPolicySwapSpaceExceeded" value="MemoryPolicySwapSpaceExceeded" />
        <string id="PLM.TerminateReason.MemoryPolicyPhysicalMemoryUsage" value="MemoryPolicyPhysicalMemoryUsage" />
        <string id="PLM.TerminateReason.MemoryPolicyCommitSoftThreshold" value="MemoryPolicyCommitSoftThreshold" />
        <string id="PLM.TerminateReason.MemoryPolicyCommitHardThreshold" value="MemoryPolicyCommitHardThreshold" />
        <string id="PLM.TerminateReason.MemoryPolicyLargeApp" value="MemoryPolicyLargeApp" />
        <string id="PLM.TerminateReason.MemoryPolicyModifiedPages" value="MemoryPolicyModifiedPages" />
        <string id="PLM.TerminateReason.FsrlOplockBreak" value="FsrlOplockBreak" />
        <string id="PLM.TerminateReason.MemoryPolicyCommitMaxLimit" value="MemoryPolicyCommitMaxLimit" />
        <string id="PLM.TerminateReason.RpcSuspensionTimeout" value="RpcSuspensionTimeout" />
        <string id="PLM.TerminateReason.ApplicationOutOfMemory" value="ApplicationOutOfMemory" />
        <string id="PLM.TerminateReason.ActivationFailure" value="ActivationFailure" />
        <string id="PLM.Terminate.Forceful" value="Forceful" />
        <string id="PLM.Launch.NewProcess" value="NewProcess" />
        <string id="PLM.Launch.NewWindow" value="NewWindow" />
        <string id="PLM.Launch.BackgroundTask" value="BackgroundTask" />
        <string id="PLM.Launch.SpeculativeLaunch" value="SpeculativeLaunch" />
        <string id="ActivationErrorMessage" value="Activation for %1 failed. Error code: %2. Activation phase: %3" />
        <string id="ActivationPhase.NONE" value="No phase defined" />
        <string id="ActivationPhase.DEPLOYMENT" value="Deployment" />
        <string id="ActivationPhase.LICENSE_CHECK" value="License check" />
        <string id="ActivationPhase.POLICY_CHECK" value="Policy check" />
        <string id="ActivationPhase.VIEW_ACTIVATION" value="View activation" />
        <string id="ActivationPhase.PLM_PREPARE" value="PLM prepare for activation" />
        <string id="ActivationPhase.PLM_BEFORE_ACTIVATE" value="PLM before activation" />
        <string id="ActivationPhase.COM_ACTIVATION" value="COM activation" />
        <string id="ActivationPhase.COM_APPACTIVATE" value="COM App activation" />
        <string id="ActivationPhase.COM_ACTIVATEEXTENSION" value="COM ActivateExtension" />
      </stringTable>
    </resources>
  </localization>
</assembly>