<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<assembly xmlns="urn:schemas-microsoft-com:asm.v3" manifestVersion="1.0" copyright="Copyright (c) Microsoft Corporation. All Rights Reserved.">
  <assemblyIdentity name="Microsoft-Windows-System-Counters" version="10.0.22621.1" processorArchitecture="amd64" language="neutral" buildType="release" publicKeyToken="31bf3856ad364e35" versionScope="nonSxS" />
  <dependency discoverable="no" resourceType="Resources">
    <dependentAssembly>
      <assemblyIdentity name="Microsoft-Windows-System-Counters.Resources" version="10.0.22621.1" processorArchitecture="amd64" language="*" buildType="release" publicKeyToken="31bf3856ad364e35" />
    </dependentAssembly>
  </dependency>
  <file name="advapi32res.dll" destinationPath="$(runtime.system32)\" sourceName="advapi32res.dll" importPath="$(build.nttree)\" sourcePath=".\">
    <securityDescriptor name="WRP_FILE_DEFAULT_SDDL" />
    <asmv2:hash xmlns:asmv2="urn:schemas-microsoft-com:asm.v2" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
      <dsig:Transforms>
        <dsig:Transform Algorithm="urn:schemas-microsoft-com:HashTransforms.Identity" />
      </dsig:Transforms>
      <dsig:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha256" />
      <dsig:DigestValue>X4gW57PlzcTh/mP5q11rXcSzWNc3xwFqwdsqJS8KGkM=</dsig:DigestValue>
    </asmv2:hash>
  </file>
  <instrumentation>
    <counters xmlns="http://schemas.microsoft.com/win/2005/12/counters" schemaVersion="2.0">
      <provider applicationIdentity="%SystemRoot%\system32\advapi32res.dll" providerGuid="{383487A6-3676-4870-A4E7-D45B30C35629}" providerType="kernelMode">
        <counterSet description="The Processor Information performance counter set consists of counters that measure aspects of processor activity. The processor is the part of the computer that performs arithmetic and logical computations, initiates operations on peripherals, and runs the threads of processes. A computer can have multiple processors. On some computers, processors are organized in NUMA nodes that share hardware resources such as physical memory. The Processor Information counter set represents each processor as a pair of numbers, where the first number is the NUMA node number and the second number is the zero-based index of the processor within that NUMA node. If the computer does not use NUMA nodes, the first number is zero." descriptionID="3" guid="{b4fc721a-0378-476f-89ba-a5a79f810b36}" instances="multiple" name="Processor Information" nameID="1" symbol="ProcessorCounterSet" uri="Microsoft.Windows.Kernel.ProcessorInformation">
          <structs>
            <struct name="ProcessorInfo" type="PCW_PROCESSOR_INFO" />
          </structs>
          <counter description="% Processor Time is the percentage of elapsed time that the processor spends to execute a non-Idle thread. It is calculated by measuring the percentage of time that the processor spends executing the idle thread and then subtracting that value from 100%. (Each processor has an idle thread to which time is accumulated when no other threads are ready to run). This counter is the primary indicator of processor activity, and displays the average percentage of busy time observed during the sample interval. It should be noted that the accounting calculation of whether the processor is idle is performed at an internal sampling interval of the system clock tick. On todays fast processors, % Processor Time can therefore underestimate the processor utilization as the processor may be spending a lot of time servicing threads between the system clock sampling interval. Workload based timer applications are one example  of applications  which are more likely to be measured inaccurately as timers are signaled just after the sample is taken." descriptionID="7" detailLevel="standard" field="IdleTime" id="0" name="% Processor Time" nameID="5" struct="ProcessorInfo" symbol="PCW_PROCESSOR_TIME_COUNTER" type="perf_100nsec_timer_inv" uri="Microsoft.Windows.Kernel.ProcessorInformation.ProcessorTime" />
          <counter description="% User Time is the percentage of elapsed time the processor spends in the user mode. User mode is a restricted processing mode designed for applications, environment subsystems, and integral subsystems.  The alternative, privileged mode, is designed for operating system components and allows direct access to hardware and all memory.  The operating system switches application threads to privileged mode to access operating system services. This counter displays the average busy time as a percentage of the sample time." descriptionID="11" detailLevel="standard" field="UserTime" id="1" name="% User Time" nameID="9" struct="ProcessorInfo" symbol="PCW_USER_TIME_COUNTER" type="perf_100nsec_timer" uri="Microsoft.Windows.Kernel.ProcessorInformation.UserTime" />
          <counter description="% Privileged Time is the percentage of elapsed time that the process threads spent executing code in privileged mode.  When a Windows system service in called, the service will often run in privileged mode to gain access to system-private data. Such data is protected from access by threads executing in user mode. Calls to the system can be explicit or implicit, such as page faults or interrupts. Unlike some early operating systems, Windows uses process boundaries for subsystem protection in addition to the traditional protection of user and privileged modes. Some work done by Windows on behalf of the application might appear in other subsystem processes in addition to the privileged time in the process." descriptionID="15" detailLevel="standard" field="KernelTime" id="2" name="% Privileged Time" nameID="13" struct="ProcessorInfo" symbol="PCW_KERNEL_TIME_COUNTER" type="perf_100nsec_timer" uri="Microsoft.Windows.Kernel.ProcessorInformation.PrivilegedTime" />
          <counter description="Interrupts/sec is the average rate, in incidents per second, at which the processor received and serviced hardware interrupts. It does not include deferred procedure calls (DPCs), which are counted separately. This value is an indirect indicator of the activity of devices that generate interrupts, such as the system clock, the mouse, disk drivers, data communication lines, network interface cards, and other peripheral devices. These devices normally interrupt the processor when they have completed a task or require attention. Normal thread execution is suspended. The system clock typically interrupts the processor every 10 milliseconds, creating a background of interrupt activity. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval." descriptionID="19" detailLevel="standard" field="Interrupts" id="3" name="Interrupts/sec" nameID="17" struct="ProcessorInfo" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.ProcessorInformation.Interrupts" />
          <counter description="% DPC Time is the percentage of time that the processor spent receiving and servicing deferred procedure calls (DPCs) during the sample interval. DPCs are interrupts that run at a lower priority than standard interrupts. % DPC Time is a component of % Privileged Time because DPCs are executed in privileged mode. They are counted separately and are not a component of the interrupt counters. This counter displays the average busy time as a percentage of the sample time." descriptionID="23" detailLevel="standard" field="DpcTime" id="4" name="% DPC Time" nameID="21" struct="ProcessorInfo" type="perf_100nsec_timer" uri="Microsoft.Windows.Kernel.ProcessorInformation.DPCTime" />
          <counter description="% Interrupt Time is the time the processor spends receiving and servicing hardware interrupts during sample intervals. This value is an indirect indicator of the activity of devices that generate interrupts, such as the system clock, the mouse, disk drivers, data communication lines, network interface cards and other peripheral devices. These devices normally interrupt the processor when they have completed a task or require attention. Normal thread execution is suspended during interrupts. Most system clocks interrupt the processor every 10 milliseconds, creating a background of interrupt activity. suspends normal thread execution during interrupts. This counter displays the average busy time as a percentage of the sample time." descriptionID="27" detailLevel="standard" field="InterruptTime" id="5" name="% Interrupt Time" nameID="25" struct="ProcessorInfo" type="perf_100nsec_timer" uri="Microsoft.Windows.Kernel.ProcessorInformation.InterruptTime" />
          <counter description="DPCs Queued/sec is the average rate, in incidents per second, at which deferred procedure calls (DPCs) were added to the processor's DPC queue. DPCs are interrupts that run at a lower priority than standard interrupts.  Each processor has its own DPC queue. This counter measures the rate that DPCs are added to the queue, not the number of DPCs in the queue.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval." descriptionID="31" detailLevel="standard" field="DpcCount" id="6" name="DPCs Queued/sec" nameID="29" struct="ProcessorInfo" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.ProcessorInformation.DPCsQueued" />
          <counter description="DPC Rate is the rate at which deferred procedure calls (DPCs) were added to the processors DPC queues between the timer ticks of the processor clock. DPCs are interrupts that run at alower priority than standard interrupts.  Each processor has its own DPC queue. This counter measures the rate that DPCs were added to the queue, not the number of DPCs in the queue. This counter displays the last observed value only; it is not an average." descriptionID="35" detailLevel="standard" field="DpcRate" id="7" name="DPC Rate" nameID="33" struct="ProcessorInfo" type="perf_counter_rawcount" uri="Microsoft.Windows.Kernel.ProcessorInformation.DPCRate" />
          <counter description="% Idle Time is the percentage of time the processor is idle during the sample interval" descriptionID="39" detailLevel="standard" field="IdleTime" id="8" name="% Idle Time" nameID="37" struct="ProcessorInfo" symbol="PCW_IDLE_TIME_COUNTER" type="perf_100nsec_timer" uri="Microsoft.Windows.Kernel.ProcessorInformation.IdleTime" />
          <counter description="% C1 Time is the percentage of time the processor spends in the C1 low-power idle state. % C1 Time is a subset of the total processor idle time. C1 low-power idle state enables the processor to maintain its entire context and quickly return to the running state. Not all systems support the % C1 state." descriptionID="43" detailLevel="standard" field="C1Time" id="9" name="% C1 Time" nameID="41" struct="ProcessorInfo" symbol="PCW_C1_TIME_COUNTER" type="perf_100nsec_timer" uri="Microsoft.Windows.Kernel.ProcessorInformation.C1Time" />
          <counter description="% C2 Time is the percentage of time the processor spends in the C2 low-power idle state. % C2 Time is a subset of the total processor idle time. C2 low-power idle state enables the processor to maintain the context of the system caches. The C2 power state is a lower power and higher exit latency state than C1. Not all systems support the C2 state." descriptionID="47" detailLevel="standard" field="C2Time" id="10" name="% C2 Time" nameID="45" struct="ProcessorInfo" symbol="PCW_C2_TIME_COUNTER" type="perf_100nsec_timer" uri="Microsoft.Windows.Kernel.ProcessorInformation.C2Time" />
          <counter description="% C3 Time is the percentage of time the processor spends in the C3 low-power idle state. % C3 Time is a subset of the total processor idle time. When the processor is in the C3 low-power idle state it is unable to maintain the coherency of its caches. The C3 power state is a lower power and higher exit latency state than C2. Not all systems support the C3 state." descriptionID="51" detailLevel="standard" field="C3Time" id="11" name="% C3 Time" nameID="49" struct="ProcessorInfo" symbol="PCW_C3_TIME_COUNTER" type="perf_100nsec_timer" uri="Microsoft.Windows.Kernel.ProcessorInformation.C3Time" />
          <counter description="C1 Transitions/sec is the rate that the CPU enters the C1 low-power idle state. The CPU enters the C1 state when it is sufficiently idle and exits this state on any interrupt. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval." descriptionID="55" detailLevel="standard" field="C1Transitions" id="12" name="C1 Transitions/sec" nameID="53" struct="ProcessorInfo" symbol="PCW_C1_TRANSITIONS_COUNTER" type="perf_counter_bulk_count" uri="Microsoft.Windows.Kernel.ProcessorInformation.C1Transitions" />
          <counter description="C2 Transitions/sec is the rate that the CPU enters the C2 low-power idle state. The CPU enters the C2 state when it is sufficiently idle and exits this state on any interrupt. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval." descriptionID="59" detailLevel="standard" field="C2Transitions" id="13" name="C2 Transitions/sec" nameID="57" struct="ProcessorInfo" symbol="PCW_C2_TRANSITIONS_COUNTER" type="perf_counter_bulk_count" uri="Microsoft.Windows.Kernel.ProcessorInformation.C2Transitions" />
          <counter description="C3 Transitions/sec is the rate that the CPU enters the C3 low-power idle state. The CPU enters the C3 state when it is sufficiently idle and exits this state on any interrupt. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval." descriptionID="63" detailLevel="standard" field="C3Transitions" id="14" name="C3 Transitions/sec" nameID="61" struct="ProcessorInfo" symbol="PCW_C3_TRANSITIONS_COUNTER" type="perf_counter_bulk_count" uri="Microsoft.Windows.Kernel.ProcessorInformation.C3Transitions" />
          <counter description="% Priority Time is the percentage of elapsed time that the processor spends executing threads that are not low priority. It is calculated by measuring the percentage of time that the processor spends executing low priority threads or the idle thread and then subtracting that value from 100%. (Each processor has an idle thread to which time is accumulated when no other threads are ready to run). This counter displays the average percentage of busy time observed during the sample interval excluding low priority background work. It should be noted that the accounting calculation of whether the processor is idle is performed at an internal sampling interval of the system clock tick. % Priority Time can therefore underestimate the processor utilization as the processor may be spending a lot of time servicing threads between the system clock sampling interval. Workload based timer applications are one example  of applications  which are more likely to be measured inaccurately as timers are signaled just after the sample is taken." descriptionID="67" detailLevel="standard" field="AvailableTime" id="15" name="% Priority Time" nameID="65" struct="ProcessorInfo" symbol="PCW_PRIORITY_TIME_COUNTER" type="perf_100nsec_timer_inv" uri="Microsoft.Windows.Kernel.ProcessorInformation.PriorityTime" />
          <counter description="Parking Status represents whether a processor is parked or not." descriptionID="71" detailLevel="standard" field="ParkingStatus" id="16" name="Parking Status" nameID="69" struct="ProcessorInfo" symbol="PCW_PARKING_STATUS_COUNTER" type="perf_counter_rawcount" uri="Microsoft.Windows.Kernel.ProcessorInformation.ParkingStatus" />
          <counter description="Processor Frequency is the frequency of the current processor in megahertz. Some processors are capable of regulating their frequency outside of the control of Windows. Processor Frequency will not accurately reflect actual processor frequency on these systems. Use % Processor Performance instead." descriptionID="75" detailLevel="standard" field="CurrentFrequency" id="17" name="Processor Frequency" nameID="73" struct="ProcessorInfo" symbol="PCW_PROCESSOR_FREQUENCY_COUNTER" type="perf_counter_rawcount" uri="Microsoft.Windows.Kernel.ProcessorInformation.ProcessorFrequency" />
          <counter description="% of Maximum Frequency is the percentage of the current processor's maximum frequency. Some processors are capable of regulating their frequency outside of the control of Windows. % of Maximum Frequency will not accurately reflect actual processor frequency on these systems. Use % Processor Performance instead." descriptionID="79" detailLevel="standard" field="PercentMaxFrequency" id="18" name="% of Maximum Frequency" nameID="77" struct="ProcessorInfo" symbol="PCW_MAXIMUM_FREQUENCY_COUNTER" type="perf_counter_rawcount" uri="Microsoft.Windows.Kernel.ProcessorInformation.PctMaximumFrequency" />
          <counter description="Processor State Flags" descriptionID="83" detailLevel="standard" field="StateFlags" id="19" name="Processor State Flags" nameID="81" struct="ProcessorInfo" symbol="PCW_PROCESSOR_STATE_COUNTER" type="perf_counter_rawcount" uri="Microsoft.Windows.Kernel.ProcessorInformation.ProcessorStateFlags" />
          <counter description="Clock Interrupts/sec is the average rate, in incidents per second, at which the processor received and serviced clock tick interrupts. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval." descriptionID="777" detailLevel="standard" field="ClockInterrupts" id="20" name="Clock Interrupts/sec" nameID="999" struct="ProcessorInfo" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.ProcessorInformation.ClockInterrupts" />
          <counter baseID="22" description="Average Idle Time is the average idle duration in 100ns units observed between the last two samples." descriptionID="779" detailLevel="standard" field="AverageIdleTime" id="21" name="Average Idle Time" nameID="1001" struct="ProcessorInfo" symbol="PCW_AVERAGE_IDLE_TIME_COUNTER" type="perf_precision_100ns_timer" uri="Microsoft.Windows.Kernel.ProcessorInformation.AverageIdleTime" />
          <counter detailLevel="standard" field="IdleBreakEvents" id="22" struct="ProcessorInfo" symbol="PCW_IDLE_TIME_BASE" type="perf_large_raw_base" uri="Microsoft.Windows.Kernel.ProcessorInformation.IdleBreakEvents" />
          <counter description="Idle Break Events/sec is the average rate, in incidents per second, at which the processor wakes from idle.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval." descriptionID="781" detailLevel="standard" field="IdleBreakEvents" id="23" name="Idle Break Events/sec" nameID="1003" struct="ProcessorInfo" symbol="PCW_IDLE_BREAK_COUNTER" type="perf_counter_bulk_count" uri="Microsoft.Windows.Kernel.ProcessorInformation.IdleBreakEventCount" />
          <counter baseID="25" description="Processor Performance is the average performance of the processor while it is executing instructions, as a percentage of the nominal performance of the processor. On some processors, Processor Performance may exceed 100%. Some processors are capable of regulating their frequency outside of the control of Windows. Processor Performance will accurately reflect the performance of these processors." descriptionID="783" detailLevel="standard" field="ScaledThroughput" id="24" name="% Processor Performance" nameID="1005" struct="ProcessorInfo" symbol="PCW_PROCESSOR_PERFORMANCE_COUNTER" type="perf_average_bulk" uri="Microsoft.Windows.Kernel.ProcessorInformation.ProcessorPerformance" />
          <counter detailLevel="standard" field="ActiveThroughput" id="25" struct="ProcessorInfo" symbol="PCW_PROCESSOR_PERFORMANCE_BASE" type="perf_average_base" uri="Microsoft.Windows.Kernel.ProcessorInformation.ActiveThroughput" />
          <counter baseID="27" description="Processor Utility is the amount of work a processor is completing, as a percentage of the amount of work the processor could complete if it were running at its nominal performance and never idle. On some processors, Processor Utility may exceed 100%." descriptionID="785" detailLevel="standard" field="ScaledThroughput" id="26" name="% Processor Utility" nameID="1007" struct="ProcessorInfo" symbol="PCW_PROCESSOR_UTILITY_COUNTER" type="perf_average_bulk" uri="Microsoft.Windows.Kernel.ProcessorInformation.ProcessorUtility" />
          <counter detailLevel="standard" field="NominalThroughput" id="27" struct="ProcessorInfo" symbol="PCW_PROCESSOR_UTILITY_BASE" type="perf_average_base" uri="Microsoft.Windows.Kernel.ProcessorInformation.NominalThroughput" />
          <counter baseID="27" description="Privileged Utility is the amount of work a processor is completing while executing in privileged mode, as a percentage of the amount of work the processor could complete if it were running at its nominal performance and never idle. On some processors, Privileged Utility may exceed 100%." descriptionID="787" detailLevel="standard" field="ScaledKernelThroughput" id="28" name="% Privileged Utility" nameID="1009" struct="ProcessorInfo" symbol="PCW_PRIVILIGED_UTILITY_COUNTER" type="perf_average_bulk" uri="Microsoft.Windows.Kernel.ProcessorInformation.PrivilegedUtility" />
          <counter detailLevel="standard" field="NominalThroughput" id="29" struct="ProcessorInfo" symbol="PCW_PRIVILIGED_UTILITY_BASE" type="perf_average_base" uri="Microsoft.Windows.Kernel.ProcessorInformation.NominalThroughput2" />
          <counter description="% Performance Limit is the performance the processor guarantees it can provide, as a percentage of the nominal performance of the processor. Performance can be limited by Windows power policy, or by the platform as a result of a power budget, overheating, or other hardware issues." descriptionID="789" detailLevel="standard" field="PerformanceLimit" id="30" name="% Performance Limit" nameID="1011" struct="ProcessorInfo" symbol="PCW_PERFORMANCE_LIMIT" type="perf_counter_rawcount" uri="Microsoft.Windows.Kernel.ProcessorInformation.PerformanceLimit" />
          <counter description="Performance Limit Flags indicate reasons why the processor performance was limited." descriptionID="791" detailLevel="standard" field="PerformanceLimitFlags" id="31" name="Performance Limit Flags" nameID="1013" struct="ProcessorInfo" symbol="PCW_PERFORMANCE_LIMIT_FLAGS" type="perf_counter_rawcount" uri="Microsoft.Windows.Kernel.ProcessorInformation.PerformanceLimitFlags" />
          <counter detailLevel="standard" field="StallTime" id="32" struct="ProcessorInfo" symbol="PCW_STALL_TIME" type="perf_100nsec_timer" uri="Microsoft.Windows.Kernel.ProcessorInformation.StallTime" />
          <counter baseID="34" detailLevel="standard" field="ScaledFrequency" id="33" struct="ProcessorInfo" symbol="PCW_PROCESSOR_SCALED_FREQUENCY_COUNTER" type="perf_average_bulk" uri="Microsoft.Windows.Kernel.ProcessorInformation.ScaledFrequency" />
          <counter detailLevel="standard" field="ActiveThroughput" id="34" struct="ProcessorInfo" symbol="PCW_PROCESSOR_FREQUENCY_BASE" type="perf_average_base" uri="Microsoft.Windows.Kernel.ProcessorInformation.ActiveThroughput2" />
        </counterSet>
        <counterSet description="The Synchronization performance object consists of counters for kernel synchronization. The synchronization object represents each processor as an instance of the object." descriptionID="87" guid="{370E979A-377A-4f30-B2C4-9A0FD072890B}" instances="multipleAggregate" name="Synchronization" nameID="85" symbol="SynchCounterSet" uri="Microsoft.Windows.Kernel.Synchronization">
          <structs>
            <struct name="SynchCounters" type="SYNCH_COUNTERS" />
          </structs>
          <counter description="Spinlock acquires/sec is the rate of spinlock acquisitions. It includes the basic spinlocks, queued spinlocks, in-stack queued spinlocks, and shared spinlocks acquisitions." descriptionID="91" detailLevel="advanced" field="SpinLockAcquireCount" id="0" name="Spinlock Acquires/sec" nameID="89" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.SpinLockAcquireCount" />
          <counter description="Spinlock contentions/sec is the rate of spinlock contentions. It includes the basic spinlocks, queued spinlocks, in-stack queued spinlocks, and shared spinlocks contentions." descriptionID="95" detailLevel="advanced" field="SpinLockContentionCount" id="1" name="Spinlock Contentions/sec" nameID="93" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.SpinLockContentionCount" />
          <counter description="Spinlock spins/sec is the rate of spinlock spins. It includes the spins to acquire basic spinlocks, queued spinlocks, in-stack queued spinlocks, and shared spinlocks." descriptionID="99" detailLevel="advanced" field="SpinLockSpinCount" id="2" name="Spinlock Spins/sec" nameID="97" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.SpinLockSpinCount" />
          <counter description="IPI Send Broadcast Requests/sec is the rate of IPI broadcast requests. " descriptionID="103" detailLevel="advanced" field="IpiSendRequestBroadcastCount" id="3" name="IPI Send Broadcast Requests/sec" nameID="101" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.IpiSendRequestBroadcastCount" />
          <counter description="IPI Send Routine Requests/sec is the rate of IPI routine requests." descriptionID="107" detailLevel="advanced" field="IpiSendRequestRoutineCount" id="4" name="IPI Send Routine Requests/sec" nameID="105" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.IpiSendRequestRoutineCount" />
          <counter description="IPI Send Software Interrrupts/sec is the rate of software interrupts." descriptionID="111" detailLevel="advanced" field="IpiSendSoftwareInterruptCount" id="5" name="IPI Send Software Interrupts/sec" nameID="109" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.IpiSendSoftwareInterruptCount" />
          <counter description="Frequency of initialization operations on Executive Resources." descriptionID="115" detailLevel="advanced" field="ExInitializeResourceCount" id="6" name="Exec. Resource Total Initialize/sec" nameID="113" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExInitializeResourceCount" />
          <counter description="Frequency of re-initialization operations on Executive Resources." descriptionID="119" detailLevel="advanced" field="ExReInitializeResourceCount" id="7" name="Exec. Resource Total Re-Initialize/sec" nameID="117" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExReInitializeResourceCount" />
          <counter description="Frequency of delete operations on Executive Resources." descriptionID="123" detailLevel="advanced" field="ExDeleteResourceCount" id="8" name="Exec. Resource Total Delete/sec" nameID="121" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExDeleteResourceCount" />
          <counter description="Frequency of acquire operations on Executive Resources." descriptionID="127" detailLevel="advanced" field="ExecutiveResourceAcquiresCount" id="9" name="Exec. Resource Total Acquires/sec" nameID="125" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExecutiveResourceAcquiresCount" />
          <counter description="Contention rate on Executive Resources." descriptionID="131" detailLevel="advanced" field="ExecutiveResourceContentionsCount" id="10" name="Exec. Resource Total Contentions/sec" nameID="129" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExecutiveResourceContentionsCount" />
          <counter description="Frequency of Exclusive releases on Executive Resources." descriptionID="135" detailLevel="advanced" field="ExecutiveResourceReleaseExclusiveCount" id="11" name="Exec. Resource Total Exclusive Releases/sec" nameID="133" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExecutiveResourceReleaseExclusiveCount" />
          <counter description="Frequency of Shared releases on Executive Resources." descriptionID="139" detailLevel="advanced" field="ExecutiveResourceReleaseSharedCount" id="12" name="Exec. Resource Total Shared Releases/sec" nameID="137" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExecutiveResourceReleaseSharedCount" />
          <counter description="Frequency of convert to shared operations on Executive Resources." descriptionID="143" detailLevel="advanced" field="ExecutiveResourceConvertsCount" id="13" name="Exec. Resource Total Conv. Exclusive To Shared/sec" nameID="141" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExecutiveResourceConvertsCount" />
          <counter description="Frequency of acquire exclusive attempts on Executive Resources from ExAcquireResourceExclusiveLite." descriptionID="147" detailLevel="advanced" field="ExAcqResExclusiveAttempts" id="14" name="Exec. Resource Attempts AcqExclLite/sec" nameID="145" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExAcqResExclusiveAttempts" />
          <counter description="Frequency of first exclusive acquires from ExAcquireResourceExclusiveLite." descriptionID="151" detailLevel="advanced" field="ExAcqResExclusiveAcquiresExclusive" id="15" name="Exec. Resource Acquires AcqExclLite/sec" nameID="149" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExAcqResExclusiveAcquiresExclusive" />
          <counter description="Frequency of recursive exclusive acquires from ExAcquireResourceExclusiveLite." descriptionID="155" detailLevel="advanced" field="ExAcqResExclusiveAcquiresExclusiveRecursive" id="16" name="Exec. Resource Recursive Excl. Acquires AcqExclLite/sec" nameID="153" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExAcqResExclusiveAcquiresExclusiveRecursive" />
          <counter description="Frequency of waits during exclusive acquire attempts from ExAcquireResourceExclusiveLite." descriptionID="159" detailLevel="advanced" field="ExAcqResExclusiveWaits" id="17" name="Exec. Resource Contention AcqExclLite/sec" nameID="157" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExAcqResExclusiveWaits" />
          <counter description="Frequency of no-waits during exclusive acquire attempts from ExAcquireResourceExclusiveLite." descriptionID="163" detailLevel="advanced" field="ExAcqResExclusiveNotAcquires" id="18" name="Exec. Resource no-Waits AcqExclLite/sec" nameID="161" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExAcqResExclusiveNotAcquires" />
          <counter description="Frequency of acquire shared attempts on Executive Resources from ExAcquireResourceSharedLite." descriptionID="167" detailLevel="advanced" field="ExAcqResSharedAttempts" id="19" name="Exec. Resource Attempts AcqShrdLite/sec" nameID="165" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExAcqResSharedAttempts" />
          <counter description="Frequency of recursive exclusive acquires from ExAcquireResourceSharedLite." descriptionID="171" detailLevel="advanced" field="ExAcqResSharedAcquiresExclusive" id="20" name="Exec. Resource Recursive Excl. Acquires AcqShrdLite/sec" nameID="169" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExAcqResSharedAcquiresExclusive" />
          <counter description="Frequency of first shared acquires from ExAcquireResourceSharedLite." descriptionID="175" detailLevel="advanced" field="ExAcqResSharedAcquiresShared" id="21" name="Exec. Resource Acquires AcqShrdLite/sec" nameID="173" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExAcqResSharedAcquiresShared" />
          <counter description="Frequency of recursive shared acquires from ExAcquireResourceSharedLite." descriptionID="179" detailLevel="advanced" field="ExAcqResSharedAcquiresSharedRecursive" id="22" name="Exec. Resource Recursive Sh. Acquires AcqShrdLite/sec" nameID="177" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExAcqResSharedAcquiresSharedRecursive" />
          <counter description="Frequency of waits during acquire attempts from ExAcquireResourceSharedLite." descriptionID="183" detailLevel="advanced" field="ExAcqResSharedWaits" id="23" name="Exec. Resource Contention AcqShrdLite/sec" nameID="181" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExAcqResSharedWaits" />
          <counter description="Frequency of no-waits during acquire attempts from ExAcquireResourceSharedLite." descriptionID="187" detailLevel="advanced" field="ExAcqResSharedNotAcquires" id="24" name="Exec. Resource no-Waits AcqShrdLite/sec" nameID="185" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExAcqResSharedNotAcquires" />
          <counter description="Frequency of acquire shared attempts on Executive Resources from ExAcquireSharedStarveExclusive." descriptionID="191" detailLevel="advanced" field="ExAcqResSharedStarveExclusiveAttempts" id="25" name="Exec. Resource Attempts AcqShrdStarveExcl/sec" nameID="189" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExAcqResSharedStarveExclusiveAttempts" />
          <counter description="Frequency of recursive exclusive acquires from ExAcquireSharedStarveExclusive." descriptionID="195" detailLevel="advanced" field="ExAcqResSharedStarveExclusiveAcquiresExclusive" id="26" name="Exec. Resource Recursive Excl. Acquires AcqShrdStarveExcl/sec" nameID="193" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExAcqResSharedStarveExclusiveAcquiresExclusive" />
          <counter description="Frequency of first shared acquires from ExAcquireSharedStarveExclusive." descriptionID="199" detailLevel="advanced" field="ExAcqResSharedStarveExclusiveAcquiresShared" id="27" name="Exec. Resource Acquires AcqShrdStarveExcl/sec" nameID="197" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExAcqResSharedStarveExclusiveAcquiresShared" />
          <counter description="Frequency of recursive shared acquires from ExAcquireSharedStarveExclusive." descriptionID="203" detailLevel="advanced" field="ExAcqResSharedStarveExclusiveAcquiresSharedRecursive" id="28" name="Exec. Resource Recursive Sh. Acquires AcqShrdStarveExcl/sec" nameID="201" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExAcqResSharedStarveExclusiveAcquiresSharedRecursive" />
          <counter description="Frequency of waits during shared acquire attempts from ExAcquireSharedStarveExclusive." descriptionID="207" detailLevel="advanced" field="ExAcqResSharedStarveExclusiveWaits" id="29" name="Exec. Resource Contention AcqShrdStarveExcl/sec" nameID="205" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExAcqResSharedStarveExclusiveWaits" />
          <counter description="Frequency of no-waits during shared acquire attempts from ExAcquireSharedStarveExclusive." descriptionID="211" detailLevel="advanced" field="ExAcqResSharedStarveExclusiveNotAcquires" id="30" name="Exec. Resource no-Waits AcqShrdStarveExcl/sec" nameID="209" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExAcqResSharedStarveExclusiveNotAcquires" />
          <counter description="Frequency of acquire shared attempts on Executive Resources from ExAcquireSharedWaitForExclusive." descriptionID="215" detailLevel="advanced" field="ExAcqResSharedWaitForExclusiveAttempts" id="31" name="Exec. Resource Attempts AcqShrdWaitForExcl/sec" nameID="213" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExAcqResSharedWaitForExclusiveAttempts" />
          <counter description="Frequency of recursive exclusive acquires from ExAcquireSharedWaitForExclusive." descriptionID="219" detailLevel="advanced" field="ExAcqResSharedWaitForExclusiveAcquiresExclusive" id="32" name="Exec. Resource Recursive Excl. Acquires AcqShrdWaitForExcl/sec" nameID="217" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExAcqResSharedWaitForExclusiveAcquiresExclusive" />
          <counter description="Frequency of first shared acquires from ExAcquireSharedWaitForExclusive." descriptionID="223" detailLevel="advanced" field="ExAcqResSharedWaitForExclusiveAcquiresShared" id="33" name="Exec. Resource Acquires AcqShrdWaitForExcl/sec" nameID="221" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExAcqResSharedWaitForExclusiveAcquiresShared" />
          <counter description="Frequency of recursive shared acquires from ExAcquireSharedWaitForExclusive." descriptionID="227" detailLevel="advanced" field="ExAcqResSharedWaitForExclusiveAcquiresSharedRecursive" id="34" name="Exec. Resource Recursive Sh. Acquires AcqShrdWaitForExcl/sec" nameID="225" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExAcqResSharedWaitForExclusiveAcquiresSharedRecursive" />
          <counter description="Frequency of waits during shared acquire attempts from ExAcquireSharedWaitForExclusive." descriptionID="231" detailLevel="advanced" field="ExAcqResSharedWaitForExclusiveWaits" id="35" name="Exec. Resource Contention AcqShrdWaitForExcl/sec" nameID="229" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExAcqResSharedWaitForExclusiveWaits" />
          <counter description="Frequency of no-waits during exclusive acquire attempts from ExAcquireSharedWaitForExclusive." descriptionID="235" detailLevel="advanced" field="ExAcqResSharedWaitForExclusiveNotAcquires" id="36" name="Exec. Resource no-Waits AcqShrdWaitForExcl/sec" nameID="233" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExAcqResSharedWaitForExclusiveNotAcquires" />
          <counter description="Frequency of ExSetResourceOwnerPointer to an exclusive owner." descriptionID="239" detailLevel="advanced" field="ExSetResOwnerPointerExclusive" id="37" name="Exec. Resource Set Owner Pointer Exclusive/sec" nameID="237" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExSetResOwnerPointerExclusive" />
          <counter description="Frequency of ExSetResourceOwnerPointer to a new shared owner." descriptionID="243" detailLevel="advanced" field="ExSetResOwnerPointerSharedNew" id="38" name="Exec. Resource Set Owner Pointer Shared (New Owner)/sec" nameID="241" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExSetResOwnerPointerSharedNew" />
          <counter description="Frequency of ExSetResourceOwnerPointer to an existing shared owner." descriptionID="247" detailLevel="advanced" field="ExSetResOwnerPointerSharedOld" id="39" name="Exec. Resource Set Owner Pointer Shared (Existing Owner)/sec" nameID="245" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExSetResOwnerPointerSharedOld" />
          <counter description="Frequency of boosting exclusive ownwer when waiting for this Executive Resource." descriptionID="251" detailLevel="advanced" field="ExBoostExclusiveOwner" id="40" name="Exec. Resource Boost Excl. Owner/sec" nameID="249" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExBoostExclusiveOwner" />
          <counter description="Frequency of boosting shared ownwer(s) when waiting for this Executive Resource." descriptionID="255" detailLevel="advanced" field="ExBoostSharedOwners" id="41" name="Exec. Resource Boost Shared Owners/sec" nameID="253" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.Synchronization.ExBoostSharedOwners" />
        </counterSet>
        <counterSet description="The counters in this collection refer to system-wide metrics about the performance of the Event Tracing for Windows subsystem." descriptionID="259" guid="{42cd0051-9dd9-4fe2-8db9-d37885d2d749}" instances="single" name="Event Tracing for Windows" nameID="257" symbol="EventTracingCounterSet" uri="Microsoft.Windows.EventTracing">
          <structs>
            <struct name="EtwPerfCounters" type="ETW_PERF_COUNTERS" />
          </structs>
          <counter description="Number of distinct event providers that are enabled to ETW sessions; multiple instances of a provider are counted only once." descriptionID="263" detailLevel="advanced" field="TotalGuidsEnabled" id="0" name="Total Number of Distinct Enabled Providers" nameID="261" struct="EtwPerfCounters" type="perf_counter_rawcount" uri="Microsoft.Windows.EventTracing.TotalEnabledProviders" />
          <counter description="Number of unique tracing providers that have been enabled to a trace session but have not yet registered with ETW." descriptionID="267" detailLevel="advanced" field="TotalGuidsPreEnabled" id="1" name="Total Number of Distinct Pre-Enabled Providers" nameID="265" struct="EtwPerfCounters" type="perf_counter_rawcount" uri="Microsoft.Windows.EventTracing.TotalPreEnabledProviders" />
          <counter description="Number of unique tracing providers that are registered with the tracing subsystem but are not actively enabled to any trace session; multiple registered instances of a provider are counted only once." descriptionID="271" detailLevel="advanced" field="TotalGuidsNotEnabled" id="2" name="Total Number of Distinct Disabled Providers" nameID="269" struct="EtwPerfCounters" type="perf_counter_rawcount" uri="Microsoft.Windows.EventTracing.TotalProvidersDisabled" />
          <counter description="Number of ETW tracing sessions currently active." descriptionID="275" detailLevel="advanced" field="TotalActiveSessions" id="3" name="Total Number of Active Sessions" nameID="273" struct="EtwPerfCounters" type="perf_counter_rawcount" uri="Microsoft.Windows.EventTracing.TotalActiveSessions" />
          <counter description="Current size of paged memory allocated for the buffers associated with all active sessions (in bytes)." descriptionID="279" detailLevel="advanced" field="TotalBufferMemoryPagedPool" id="4" name="Total Memory Usage --- Paged Pool" nameID="277" struct="EtwPerfCounters" type="perf_counter_rawcount" uri="Microsoft.Windows.EventTracing.TotalMemoryUsagePP" />
          <counter description="Current size of non-paged memory allocated for the buffers associated with all active sessions (in bytes)." descriptionID="283" detailLevel="advanced" field="TotalBufferMemoryNonPagedPool" id="5" name="Total Memory Usage --- Non-Paged Pool" nameID="281" struct="EtwPerfCounters" type="perf_counter_rawcount" uri="Microsoft.Windows.EventTracing.TotalMemoryUsageNPP" />
        </counterSet>
        <counterSet description="The counters in this collection are related to individual Event Tracing for Windows sessions." descriptionID="287" guid="{ed83b00b-6afd-4063-9420-16fe0fa3b36f}" instances="multiple" name="Event Tracing for Windows Session" nameID="285" symbol="EventTracingSessionCounterSet" uri="Microsoft.Windows.EventTracingSession">
          <structs>
            <struct name="EtwSessionPerfCounters" type="ETW_SESSION_PERF_COUNTERS" />
          </structs>
          <counter description="Current size of paged memory allocated for the buffers associated with this session (in bytes)." descriptionID="291" detailLevel="advanced" field="BufferMemoryPagedPool" id="0" name="Buffer Memory Usage -- Paged Pool" nameID="289" struct="EtwSessionPerfCounters" type="perf_counter_rawcount" uri="Microsoft.Windows.EventTracingSession.PP" />
          <counter description="Current size of non-paged memory allocated for the buffers associated with this session (in bytes)." descriptionID="295" detailLevel="advanced" field="BufferMemoryNonPagedPool" id="1" name="Buffer Memory Usage -- Non-Paged Pool" nameID="293" struct="EtwSessionPerfCounters" type="perf_counter_rawcount" uri="Microsoft.Windows.EventTracingSession.NPP" />
          <counter description="Rate at which events are logged to this session by providers that are enabled to this session (events/sec)." descriptionID="299" detailLevel="advanced" field="EventsLoggedCount" id="2" name="Events Logged per sec" nameID="297" struct="EtwSessionPerfCounters" type="perf_counter_bulk_count" uri="Microsoft.Windows.EventTracingSession.EventsLogged" />
          <counter description="Total number of events that were not successfully logged since the start of the tracing session.  Events are lost due to limited space in the session's buffers.  To avoid lost events, consider increasing the buffer size or the number of buffers." descriptionID="303" detailLevel="advanced" field="EventsLost" id="3" name="Events Lost" nameID="301" struct="EtwSessionPerfCounters" type="perf_counter_rawcount" uri="Microsoft.Windows.EventTracingSession.EventsLost" />
          <counter description="Number of consumers currently reading events from this session in real-time mode." descriptionID="307" detailLevel="advanced" field="NumConsumers" id="4" name="Number of Real-Time Consumers" nameID="305" struct="EtwSessionPerfCounters" type="perf_counter_rawcount" uri="Microsoft.Windows.EventTracingSession.NumConsumers" />
        </counterSet>
        <counterSet description="The Synchronization performance object consists of counters for kernel synchronization. The synchronization object represents each processor as an instance of the object. The counters are aggregated based on the system NUMA topology." descriptionID="311" guid="{2F66FD0A-9F6C-4d91-9F2F-2A1B5E41B7DC}" instances="multiple" name="SynchronizationNuma" nameID="309" symbol="SynchNumaCounterSet" uri="Microsoft.Windows.Kernel.SynchronizationNuma">
          <structs>
            <struct name="SynchCounters" type="SYNCH_COUNTERS" />
          </structs>
          <counter description="Spinlock acquires/sec is the rate of spinlock acquisitions. It includes the basic spinlocks, queued spinlocks, in-stack queued spinlocks, and shared spinlocks acquisitions." descriptionID="315" detailLevel="advanced" field="SpinLockAcquireCount" id="0" name="Spinlock Acquires/sec" nameID="313" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.SpinLockAcquireCount" />
          <counter description="Spinlock contentions/sec is the rate of spinlock contentions. It includes the basic spinlocks, queued spinlocks, in-stack queued spinlocks, and shared spinlocks contentions." descriptionID="319" detailLevel="advanced" field="SpinLockContentionCount" id="1" name="Spinlock Contentions/sec" nameID="317" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.SpinLockContentionCount" />
          <counter description="Spinlock spins/sec is the rate of spinlock spins. It includes the spins to acquire basic spinlocks, queued spinlocks, in-stack queued spinlocks, and shared spinlocks." descriptionID="323" detailLevel="advanced" field="SpinLockSpinCount" id="2" name="Spinlock Spins/sec" nameID="321" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.SpinLockSpinCount" />
          <counter description="IPI Send Broadcast Requests/sec is the rate of IPI broadcast requests. " descriptionID="327" detailLevel="advanced" field="IpiSendRequestBroadcastCount" id="3" name="IPI Send Broadcast Requests/sec" nameID="325" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.IpiSendRequestBroadcastCount" />
          <counter description="IPI Send Routine Requests/sec is the rate of IPI routine requests." descriptionID="331" detailLevel="advanced" field="IpiSendRequestRoutineCount" id="4" name="IPI Send Routine Requests/sec" nameID="329" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.IpiSendRequestRoutineCount" />
          <counter description="IPI Send Software Interrrupts/sec is the rate of software interrupts." descriptionID="335" detailLevel="advanced" field="IpiSendSoftwareInterruptCount" id="5" name="IPI Send Software Interrupts/sec" nameID="333" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.IpiSendSoftwareInterruptCount" />
          <counter description="Frequency of initialization operations on Executive Resources." descriptionID="339" detailLevel="advanced" field="ExInitializeResourceCount" id="6" name="Exec. Resource Total Initialize/sec" nameID="337" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExInitializeResourceCount" />
          <counter description="Frequency of re-initialization operations on Executive Resources." descriptionID="343" detailLevel="advanced" field="ExReInitializeResourceCount" id="7" name="Exec. Resource Total Re-Initialize/sec" nameID="341" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExReInitializeResourceCount" />
          <counter description="Frequency of delete operations on Executive Resources." descriptionID="347" detailLevel="advanced" field="ExDeleteResourceCount" id="8" name="Exec. Resource Total Delete/sec" nameID="345" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExDeleteResourceCount" />
          <counter description="Frequency of acquire operations on Executive Resources." descriptionID="351" detailLevel="advanced" field="ExecutiveResourceAcquiresCount" id="9" name="Exec. Resource Total Acquires/sec" nameID="349" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExecutiveResourceAcquiresCount" />
          <counter description="Contention rate on Executive Resources." descriptionID="355" detailLevel="advanced" field="ExecutiveResourceContentionsCount" id="10" name="Exec. Resource Total Contentions/sec" nameID="353" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExecutiveResourceContentionsCount" />
          <counter description="Frequency of Exclusive releases on Executive Resources." descriptionID="359" detailLevel="advanced" field="ExecutiveResourceReleaseExclusiveCount" id="11" name="Exec. Resource Total Exclusive Releases/sec" nameID="357" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExecutiveResourceReleaseExclusiveCount" />
          <counter description="Frequency of Shared releases on Executive Resources." descriptionID="363" detailLevel="advanced" field="ExecutiveResourceReleaseSharedCount" id="12" name="Exec. Resource Total Shared Releases/sec" nameID="361" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExecutiveResourceReleaseSharedCount" />
          <counter description="Frequency of convert to shared operations on Executive Resources." descriptionID="367" detailLevel="advanced" field="ExecutiveResourceConvertsCount" id="13" name="Exec. Resource Total Conv. Exclusive To Shared/sec" nameID="365" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExecutiveResourceConvertsCount" />
          <counter description="Frequency of acquire exclusive attempts on Executive Resources from ExAcquireResourceExclusiveLite." descriptionID="371" detailLevel="advanced" field="ExAcqResExclusiveAttempts" id="14" name="Exec. Resource Attempts AcqExclLite/sec" nameID="369" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExAcqResExclusiveAttempts" />
          <counter description="Frequency of first exclusive acquires from ExAcquireResourceExclusiveLite." descriptionID="375" detailLevel="advanced" field="ExAcqResExclusiveAcquiresExclusive" id="15" name="Exec. Resource Acquires AcqExclLite/sec" nameID="373" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExAcqResExclusiveAcquiresExclusive" />
          <counter description="Frequency of recursive exclusive acquires from ExAcquireResourceExclusiveLite." descriptionID="379" detailLevel="advanced" field="ExAcqResExclusiveAcquiresExclusiveRecursive" id="16" name="Exec. Resource Recursive Excl. Acquires AcqExclLite/sec" nameID="377" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExAcqResExclusiveAcquiresExclusiveRecursive" />
          <counter description="Frequency of waits during exclusive acquire attempts from ExAcquireResourceExclusiveLite." descriptionID="383" detailLevel="advanced" field="ExAcqResExclusiveWaits" id="17" name="Exec. Resource Contention AcqExclLite/sec" nameID="381" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExAcqResExclusiveWaits" />
          <counter description="Frequency of no-waits during exclusive acquire attempts from ExAcquireResourceExclusiveLite." descriptionID="387" detailLevel="advanced" field="ExAcqResExclusiveNotAcquires" id="18" name="Exec. Resource no-Waits AcqExclLite/sec" nameID="385" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExAcqResExclusiveNotAcquires" />
          <counter description="Frequency of acquire shared attempts on Executive Resources from ExAcquireResourceSharedLite." descriptionID="391" detailLevel="advanced" field="ExAcqResSharedAttempts" id="19" name="Exec. Resource Attempts AcqShrdLite/sec" nameID="389" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExAcqResSharedAttempts" />
          <counter description="Frequency of recursive exclusive acquires from ExAcquireResourceSharedLite." descriptionID="395" detailLevel="advanced" field="ExAcqResSharedAcquiresExclusive" id="20" name="Exec. Resource Recursive Excl. Acquires AcqShrdLite/sec" nameID="393" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExAcqResSharedAcquiresExclusive" />
          <counter description="Frequency of first shared acquires from ExAcquireResourceSharedLite." descriptionID="399" detailLevel="advanced" field="ExAcqResSharedAcquiresShared" id="21" name="Exec. Resource Acquires AcqShrdLite/sec" nameID="397" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExAcqResSharedAcquiresShared" />
          <counter description="Frequency of recursive shared acquires from ExAcquireResourceSharedLite." descriptionID="403" detailLevel="advanced" field="ExAcqResSharedAcquiresSharedRecursive" id="22" name="Exec. Resource Recursive Sh. Acquires AcqShrdLite/sec" nameID="401" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExAcqResSharedAcquiresSharedRecursive" />
          <counter description="Frequency of waits during acquire attempts from ExAcquireResourceSharedLite." descriptionID="407" detailLevel="advanced" field="ExAcqResSharedWaits" id="23" name="Exec. Resource Contention AcqShrdLite/sec" nameID="405" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExAcqResSharedWaits" />
          <counter description="Frequency of no-waits during acquire attempts from ExAcquireResourceSharedLite." descriptionID="411" detailLevel="advanced" field="ExAcqResSharedNotAcquires" id="24" name="Exec. Resource no-Waits AcqShrdLite/sec" nameID="409" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExAcqResSharedNotAcquires" />
          <counter description="Frequency of acquire shared attempts on Executive Resources from ExAcquireSharedStarveExclusive." descriptionID="415" detailLevel="advanced" field="ExAcqResSharedStarveExclusiveAttempts" id="25" name="Exec. Resource Attempts AcqShrdStarveExcl/sec" nameID="413" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExAcqResSharedStarveExclusiveAttempts" />
          <counter description="Frequency of recursive exclusive acquires from ExAcquireSharedStarveExclusive." descriptionID="419" detailLevel="advanced" field="ExAcqResSharedStarveExclusiveAcquiresExclusive" id="26" name="Exec. Resource Recursive Excl. Acquires AcqShrdStarveExcl/sec" nameID="417" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExAcqResSharedStarveExclusiveAcquiresExclusive" />
          <counter description="Frequency of first shared acquires from ExAcquireSharedStarveExclusive." descriptionID="423" detailLevel="advanced" field="ExAcqResSharedStarveExclusiveAcquiresShared" id="27" name="Exec. Resource Acquires AcqShrdStarveExcl/sec" nameID="421" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExAcqResSharedStarveExclusiveAcquiresShared" />
          <counter description="Frequency of recursive shared acquires from ExAcquireSharedStarveExclusive." descriptionID="427" detailLevel="advanced" field="ExAcqResSharedStarveExclusiveAcquiresSharedRecursive" id="28" name="Exec. Resource Recursive Sh. Acquires AcqShrdStarveExcl/sec" nameID="425" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExAcqResSharedStarveExclusiveAcquiresSharedRecursive" />
          <counter description="Frequency of waits during shared acquire attempts from ExAcquireSharedStarveExclusive." descriptionID="431" detailLevel="advanced" field="ExAcqResSharedStarveExclusiveWaits" id="29" name="Exec. Resource Contention AcqShrdStarveExcl/sec" nameID="429" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExAcqResSharedStarveExclusiveWaits" />
          <counter description="Frequency of no-waits during shared acquire attempts from ExAcquireSharedStarveExclusive." descriptionID="435" detailLevel="advanced" field="ExAcqResSharedStarveExclusiveNotAcquires" id="30" name="Exec. Resource no-Waits AcqShrdStarveExcl/sec" nameID="433" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExAcqResSharedStarveExclusiveNotAcquires" />
          <counter description="Frequency of acquire shared attempts on Executive Resources from ExAcquireSharedWaitForExclusive." descriptionID="439" detailLevel="advanced" field="ExAcqResSharedWaitForExclusiveAttempts" id="31" name="Exec. Resource Attempts AcqShrdWaitForExcl/sec" nameID="437" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExAcqResSharedWaitForExclusiveAttempts" />
          <counter description="Frequency of recursive exclusive acquires from ExAcquireSharedWaitForExclusive." descriptionID="443" detailLevel="advanced" field="ExAcqResSharedWaitForExclusiveAcquiresExclusive" id="32" name="Exec. Resource Recursive Excl. Acquires AcqShrdWaitForExcl/sec" nameID="441" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExAcqResSharedWaitForExclusiveAcquiresExclusive" />
          <counter description="Frequency of first shared acquires from ExAcquireSharedWaitForExclusive." descriptionID="447" detailLevel="advanced" field="ExAcqResSharedWaitForExclusiveAcquiresShared" id="33" name="Exec. Resource Acquires AcqShrdWaitForExcl/sec" nameID="445" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExAcqResSharedWaitForExclusiveAcquiresShared" />
          <counter description="Frequency of recursive shared acquires from ExAcquireSharedWaitForExclusive." descriptionID="451" detailLevel="advanced" field="ExAcqResSharedWaitForExclusiveAcquiresSharedRecursive" id="34" name="Exec. Resource Recursive Sh. Acquires AcqShrdWaitForExcl/sec" nameID="449" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExAcqResSharedWaitForExclusiveAcquiresSharedRecursive" />
          <counter description="Frequency of waits during shared acquire attempts from ExAcquireSharedWaitForExclusive." descriptionID="455" detailLevel="advanced" field="ExAcqResSharedWaitForExclusiveWaits" id="35" name="Exec. Resource Contention AcqShrdWaitForExcl/sec" nameID="453" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExAcqResSharedWaitForExclusiveWaits" />
          <counter description="Frequency of no-waits during exclusive acquire attempts from ExAcquireSharedWaitForExclusive." descriptionID="459" detailLevel="advanced" field="ExAcqResSharedWaitForExclusiveNotAcquires" id="36" name="Exec. Resource no-Waits AcqShrdWaitForExcl/sec" nameID="457" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExAcqResSharedWaitForExclusiveNotAcquires" />
          <counter description="Frequency of ExSetResourceOwnerPointer to an exclusive owner." descriptionID="463" detailLevel="advanced" field="ExSetResOwnerPointerExclusive" id="37" name="Exec. Resource Set Owner Pointer Exclusive/sec" nameID="461" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExSetResOwnerPointerExclusive" />
          <counter description="Frequency of ExSetResourceOwnerPointer to a new shared owner." descriptionID="467" detailLevel="advanced" field="ExSetResOwnerPointerSharedNew" id="38" name="Exec. Resource Set Owner Pointer Shared (New Owner)/sec" nameID="465" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExSetResOwnerPointerSharedNew" />
          <counter description="Frequency of ExSetResourceOwnerPointer to an existing shared owner." descriptionID="471" detailLevel="advanced" field="ExSetResOwnerPointerSharedOld" id="39" name="Exec. Resource Set Owner Pointer Shared (Existing Owner)/sec" nameID="469" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExSetResOwnerPointerSharedOld" />
          <counter description="Frequency of boosting exclusive ownwer when waiting for this Executive Resource." descriptionID="475" detailLevel="advanced" field="ExBoostExclusiveOwner" id="40" name="Exec. Resource Boost Excl. Owner/sec" nameID="473" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExBoostExclusiveOwner" />
          <counter description="Frequency of boosting shared ownwer(s) when waiting for this Executive Resource." descriptionID="479" detailLevel="advanced" field="ExBoostSharedOwners" id="41" name="Exec. Resource Boost Shared Owners/sec" nameID="477" struct="SynchCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.SynchronizationNuma.ExBoostSharedOwners" />
        </counterSet>
        <counterSet description="The FileSystem Disk Activity performance counter set consists of counters that measure the aspect of filesystem's IO Activity.  This counter set measures the number of bytes filesystem read from and wrote to the disk drive." descriptionID="481" guid="{f596750d-b109-4247-a62f-dea47a46e505}" instances="multipleAggregate" name="FileSystem Disk Activity" nameID="483" symbol="FileSystemDiskIOCounterSet" uri="Microsoft.Windows.Kernel.FileSystemDiskIO">
          <structs>
            <struct name="FilesystemDiskCounters" type="FILESYSTEM_DISK_COUNTERS" />
          </structs>
          <counter description="Total Bytes Read by the FileSystem from disk drive" descriptionID="485" detailLevel="advanced" field="FsBytesRead" id="0" name="FileSystem Bytes Read" nameID="487" struct="FilesystemDiskCounters" type="perf_counter_bulk_count" uri="Microsoft.Windows.Kernel.FileSystemDiskIO.FsBytesRead" />
          <counter description="Total Bytes Written by the FileSystem from disk drive" descriptionID="489" detailLevel="advanced" field="FsBytesWritten" id="1" name="FileSystem Bytes Written" nameID="491" struct="FilesystemDiskCounters" type="perf_counter_bulk_count" uri="Microsoft.Windows.Kernel.FileSystemDiskIO.FsBytesWritten" />
        </counterSet>
        <counterSet description="The Thermal Zone Information performance counter set consists of counters that measure aspects of each thermal zone in the system." descriptionID="501" guid="{52bc5412-dac2-449c-8bc2-96443888fe6b}" instances="multiple" name="Thermal Zone Information" nameID="503" symbol="ThermalCounterSet" uri="Microsoft.Windows.Kernel.ThermalZone">
          <structs>
            <struct name="ThermalZoneCounters" type="THERMAL_ZONE_COUNTERS" />
          </structs>
          <counter description="Temperature of the thermal zone, in degrees Kelvin." descriptionID="505" detailLevel="advanced" field="Temperature" id="0" name="Temperature" nameID="507" struct="ThermalZoneCounters" symbol="THERMAL_COUNTER_TEMPERATURE" type="perf_counter_rawcount" uri="Microsoft.Windows.Kernel.ThermalZone.Temperature" />
          <counter description="% Passive Limit is the current limit this thermal zone is placing on the devices it controls. A limit of 100% indicates the devices are unconstrained. A limit of 0% indicates the devices are fully constrained." descriptionID="509" detailLevel="advanced" field="ThrottleLimit" id="1" name="% Passive Limit" nameID="511" struct="ThermalZoneCounters" symbol="THERMAL_COUNTER_THROTTLE_LIMIT" type="perf_counter_rawcount" uri="Microsoft.Windows.Kernel.ThermalZone.PassiveLimit" />
          <counter description="Throttle Reasons indicate reasons why the thermal zone is limiting performance of the devices it controls." descriptionID="513" detailLevel="advanced" field="ThrottleReasons" id="2" name="Throttle Reasons" nameID="515" struct="ThermalZoneCounters" symbol="THERMAL_COUNTER_THROTTLE_REASONS" type="perf_counter_rawcount" uri="Microsoft.Windows.Kernel.ThermalZone.ThrottleReasons" />
          <counter description="Temperature of the thermal zone, in tenths of degrees Kelvin." descriptionID="517" detailLevel="advanced" field="TemperatureHighPrecision" id="3" name="High Precision Temperature" nameID="519" struct="ThermalZoneCounters" symbol="THERMAL_COUNTER_TEMPERATURE_HIGH_PRECISION" type="perf_counter_rawcount" uri="Microsoft.Windows.Kernel.ThermalZone.TemperatureHighPrecision" />
        </counterSet>
        <counterSet description="The Process V2 performance counter set consists of counters that monitor running application program and system processes. The Process V2 counter set improves upon the legacy Process counter set." descriptionID="601" guid="{aa6dff9b-22d5-4340-8c93-77bdda9d5d93}" instances="multipleAggregate" name="Process V2" nameID="603" symbol="ProcessCounterSet" uri="Microsoft.Windows.Kernel.ProcessV2">
          <structs>
            <struct name="ProcessPerfCounters" type="PROCESS_PERF_COUNTERS" />
          </structs>
          <counter aggregate="sum" defaultScale="0" description="% Processor Time is the percentage of elapsed time that the process spent executing code. This value may exceed 100% on a multiprocessor system. Some code executed to handle hardware interrupts and trap conditions may be included in this count." descriptionID="605" detailLevel="standard" field="ProcessorTime" id="0" name="% Processor Time" nameID="607" struct="ProcessPerfCounters" type="perf_100nsec_timer" uri="Microsoft.Windows.Kernel.ProcessV2.ProcessorTime" />
          <counter aggregate="sum" defaultScale="0" description="% User Time is the percentage of elapsed time that the process spent executing code in user mode. This value may exceed 100% on a multiprocessor system." descriptionID="609" detailLevel="advanced" field="UserTime" id="1" name="% User Time" nameID="611" struct="ProcessPerfCounters" type="perf_100nsec_timer" uri="Microsoft.Windows.Kernel.ProcessV2.UserTime" />
          <counter aggregate="sum" defaultScale="0" description="% Privileged Time is the percentage of elapsed time that the process spent executing code in kernel mode. This value may exceed 100% on a multiprocessor system." descriptionID="613" detailLevel="advanced" field="PrivilegedTime" id="2" name="% Privileged Time" nameID="615" struct="ProcessPerfCounters" type="perf_100nsec_timer" uri="Microsoft.Windows.Kernel.ProcessV2.PrivilegedTime" />
          <counter aggregate="sum" defaultScale="-6" description="Virtual Bytes Peak is the maximum size, in bytes, of the virtual address ranges reserved within the process. Reserved address ranges consume no physical memory or disk space unless they are committed. The operating system may reserve virtual address ranges within a process for system use." descriptionID="617" detailLevel="advanced" field="VirtualBytesPeak" id="3" name="Virtual Bytes Peak" nameID="619" struct="ProcessPerfCounters" type="perf_counter_large_rawcount" uri="Microsoft.Windows.Kernel.ProcessV2.VirtualBytesPeak" />
          <counter aggregate="sum" defaultScale="-6" description="Virtual Bytes is the current size, in bytes, of the virtual address ranges reserved within the process. Reserved address ranges consume no physical memory or disk space unless they are committed. The operating system may reserve virtual address ranges within a process for system use." descriptionID="621" detailLevel="advanced" field="VirtualBytes" id="4" name="Virtual Bytes" nameID="623" struct="ProcessPerfCounters" type="perf_counter_large_rawcount" uri="Microsoft.Windows.Kernel.ProcessV2.VirtualBytes" />
          <counter aggregate="sum" defaultScale="-1" description="Page Faults/sec is the rate at which page faults occur in this process. A page fault occurs when a CPU attempts to access a virtual memory page that is not in the process working set. Page faults can occur for a variety of reasons such as memory allocation, access to a memory-mapped file, trimming of the working set, or an attempt to access an invalid address." descriptionID="625" detailLevel="standard" field="PageFaults" id="5" name="Page Faults/sec" nameID="627" struct="ProcessPerfCounters" type="perf_counter_counter" uri="Microsoft.Windows.Kernel.ProcessV2.PageFaults" />
          <counter aggregate="sum" defaultScale="-5" description="Working Set Peak is the maximum size, in bytes, of the working set of this process. The working set is the set of memory pages touched recently by the threads in the process. If free memory in the computer is above a threshold, pages are left in the working set of a process even if they are not in use." descriptionID="629" detailLevel="advanced" field="WorkingSetPeak" id="6" name="Working Set Peak" nameID="631" struct="ProcessPerfCounters" type="perf_counter_large_rawcount" uri="Microsoft.Windows.Kernel.ProcessV2.WorkingSetPeak" />
          <counter aggregate="sum" defaultScale="-5" description="Working Set is the current size, in bytes, of the working set of this process. The working set is the set of memory pages touched recently by the threads in the process. If free memory in the computer is above a threshold, pages are left in the working set of a process even if they are not in use." descriptionID="633" detailLevel="standard" field="WorkingSet" id="7" name="Working Set" nameID="635" struct="ProcessPerfCounters" type="perf_counter_large_rawcount" uri="Microsoft.Windows.Kernel.ProcessV2.WorkingSet" />
          <counter aggregate="sum" defaultScale="-6" description="Page File Bytes Peak is the maximum amount of virtual memory, in bytes, that this process has reserved for use in physical memory or paging file(s)." descriptionID="641" detailLevel="advanced" field="PageFileBytesPeak" id="8" name="Page File Bytes Peak" nameID="643" struct="ProcessPerfCounters" type="perf_counter_large_rawcount" uri="Microsoft.Windows.Kernel.ProcessV2.PageFileBytesPeak" />
          <counter aggregate="sum" defaultScale="-6" description="Page File Bytes is the current amount of virtual memory, in bytes, that this process has reserved for use in physical memory or paging file(s)." descriptionID="645" detailLevel="advanced" field="PageFileBytes" id="9" name="Page File Bytes" nameID="647" struct="ProcessPerfCounters" type="perf_counter_large_rawcount" uri="Microsoft.Windows.Kernel.ProcessV2.PageFileBytes" />
          <counter aggregate="sum" defaultScale="-5" description="Private Bytes is the current size, in bytes, of memory that this process has allocated that cannot be shared with other processes." descriptionID="649" detailLevel="advanced" field="PrivateBytes" id="10" name="Private Bytes" nameID="651" struct="ProcessPerfCounters" type="perf_counter_large_rawcount" uri="Microsoft.Windows.Kernel.ProcessV2.PrivateBytes" />
          <counter aggregate="sum" defaultScale="0" description="Thread Count is the number of threads currently active in this process." descriptionID="653" detailLevel="advanced" field="ThreadCount" id="11" name="Thread Count" nameID="655" struct="ProcessPerfCounters" type="perf_counter_rawcount" uri="Microsoft.Windows.Kernel.ProcessV2.ThreadCount" />
          <counter aggregate="undefined" defaultScale="0" description="Priority Base is the current base priority of this process. Threads within a process can raise and lower their own base priority relative to the process' base priority." descriptionID="657" detailLevel="advanced" field="PriorityBase" id="12" name="Priority Base" nameID="659" struct="ProcessPerfCounters" type="perf_counter_rawcount" uri="Microsoft.Windows.Kernel.ProcessV2.PriorityBase" />
          <counter aggregate="undefined" defaultScale="-4" description="Elapsed Time is the amount of time that has passed since the process was created." descriptionID="661" detailLevel="advanced" field="ElapsedTime" id="13" name="Elapsed Time" nameID="663" perfFreqID="28" perfTimeID="29" struct="ProcessPerfCounters" type="perf_elapsed_time" uri="Microsoft.Windows.Kernel.ProcessV2.ElapsedTime" />
          <counter aggregate="undefined" defaultScale="-1" description="Process ID is the unique identifier of this process. Process ID numbers are reused, so they only identify a process for the lifetime of that process." descriptionID="665" detailLevel="standard" field="ProcessId" id="14" name="Process ID" nameID="667" struct="ProcessPerfCounters" type="perf_counter_rawcount" uri="Microsoft.Windows.Kernel.ProcessV2.ProcessId" />
          <counter aggregate="undefined" defaultScale="-1" description="Creating Process ID is the Process ID of the process that created this process. The creating process may have terminated, so this value may no longer identify a running process." descriptionID="669" detailLevel="standard" field="CreatingProcessId" id="15" name="Creating Process ID" nameID="671" struct="ProcessPerfCounters" type="perf_counter_rawcount" uri="Microsoft.Windows.Kernel.ProcessV2.CreatingProcessId" />
          <counter aggregate="sum" defaultScale="-5" description="Pool Paged Bytes is the size, in bytes, of the paged kernel memory allocated by the kernel on behalf of this process." descriptionID="673" detailLevel="advanced" field="PoolPagedBytes" id="16" name="Pool Paged Bytes" nameID="675" struct="ProcessPerfCounters" type="perf_counter_large_rawcount" uri="Microsoft.Windows.Kernel.ProcessV2.PoolPagedBytes" />
          <counter aggregate="sum" defaultScale="-5" description="Pool Nonpaged Bytes is the size, in bytes, of the nonpaged kernel memory allocated by the kernel on behalf of this process." descriptionID="677" detailLevel="advanced" field="PoolNonpagedBytes" id="17" name="Pool Nonpaged Bytes" nameID="679" struct="ProcessPerfCounters" type="perf_counter_large_rawcount" uri="Microsoft.Windows.Kernel.ProcessV2.PoolNonpagedBytes" />
          <counter aggregate="sum" defaultScale="0" description="Handle Count is the total number of handles currently open by this process." descriptionID="681" detailLevel="advanced" field="HandleCount" id="18" name="Handle Count" nameID="683" struct="ProcessPerfCounters" type="perf_counter_rawcount" uri="Microsoft.Windows.Kernel.ProcessV2.HandleCount" />
          <counter aggregate="sum" defaultScale="0" description="IO Read Operations/sec is the rate at which the process is issuing read operations to file, network, or other device handles." descriptionID="685" detailLevel="advanced" field="IoReadOperations" id="19" name="IO Read Operations/sec" nameID="687" struct="ProcessPerfCounters" type="perf_counter_bulk_count" uri="Microsoft.Windows.Kernel.ProcessV2.IoReadOperations" />
          <counter aggregate="sum" defaultScale="0" description="IO Write Operations/sec is the rate at which the process is issuing write operations to file, network, or other device handles." descriptionID="689" detailLevel="advanced" field="IoWriteOperations" id="20" name="IO Write Operations/sec" nameID="691" struct="ProcessPerfCounters" type="perf_counter_bulk_count" uri="Microsoft.Windows.Kernel.ProcessV2.IoWriteOperations" />
          <counter aggregate="sum" defaultScale="0" description="IO Data Operations/sec is the rate at which the process is issuing read and write operations to file, network, or other device handles." descriptionID="693" detailLevel="advanced" field="IoDataOperations" id="21" name="IO Data Operations/sec" nameID="695" struct="ProcessPerfCounters" type="perf_counter_bulk_count" uri="Microsoft.Windows.Kernel.ProcessV2.IoDataOperations" />
          <counter aggregate="sum" defaultScale="0" description="IO Other Operations/sec is the rate at which the process is issuing operations that are neither read nor write operations (such as device control operations)." descriptionID="697" detailLevel="advanced" field="IoOtherOperations" id="22" name="IO Other Operations/sec" nameID="699" struct="ProcessPerfCounters" type="perf_counter_bulk_count" uri="Microsoft.Windows.Kernel.ProcessV2.IoOtherOperations" />
          <counter aggregate="sum" defaultScale="0" description="IO Read Bytes/sec is the rate at which the process is reading data from file, network, or other device handles." descriptionID="701" detailLevel="advanced" field="IoReadBytes" id="23" name="IO Read Bytes/sec" nameID="703" struct="ProcessPerfCounters" type="perf_counter_bulk_count" uri="Microsoft.Windows.Kernel.ProcessV2.IoReadBytes" />
          <counter aggregate="sum" defaultScale="0" description="IO Write Bytes/sec is the rate at which the process is writing data to file, network, or other device handles." descriptionID="705" detailLevel="advanced" field="IoWriteBytes" id="24" name="IO Write Bytes/sec" nameID="707" struct="ProcessPerfCounters" type="perf_counter_bulk_count" uri="Microsoft.Windows.Kernel.ProcessV2.IoWriteBytes" />
          <counter aggregate="sum" defaultScale="0" description="IO Data Bytes/sec is the rate at which the process is reading and writing to file, network, or other device handles." descriptionID="709" detailLevel="advanced" field="IoDataBytes" id="25" name="IO Data Bytes/sec" nameID="711" struct="ProcessPerfCounters" type="perf_counter_bulk_count" uri="Microsoft.Windows.Kernel.ProcessV2.IoDataBytes" />
          <counter aggregate="sum" defaultScale="0" description="IO Other Bytes/sec is the rate at which the process is transferring data for operations that are neither read nor write operations (such as device control operations)." descriptionID="713" detailLevel="advanced" field="IoOtherBytes" id="26" name="IO Other Bytes/sec" nameID="715" struct="ProcessPerfCounters" type="perf_counter_bulk_count" uri="Microsoft.Windows.Kernel.ProcessV2.IoOtherBytes" />
          <counter aggregate="sum" defaultScale="-5" description="Working Set - Private is the size of the working set, in bytes, that is use for this process only and not shared nor sharable by other processes." descriptionID="717" detailLevel="standard" field="WorkingSetPrivate" id="27" name="Working Set - Private" nameID="719" struct="ProcessPerfCounters" type="perf_counter_large_rawcount" uri="Microsoft.Windows.Kernel.ProcessV2.WorkingSetPrivate" />
          <counter aggregate="undefined" detailLevel="advanced" field="PerfFreq" id="28" struct="ProcessPerfCounters" type="perf_counter_large_rawcount" uri="Microsoft.Windows.Kernel.ProcessV2.PerfFreq">
            <counterAttributes>
              <counterAttribute name="noDisplay" />
            </counterAttributes>
          </counter>
          <counter aggregate="undefined" detailLevel="advanced" field="PerfTime" id="29" struct="ProcessPerfCounters" type="perf_counter_large_rawcount" uri="Microsoft.Windows.Kernel.ProcessV2.PerfTime">
            <counterAttributes>
              <counterAttribute name="noDisplay" />
            </counterAttributes>
          </counter>
        </counterSet>
      </provider>
    </counters>
  </instrumentation>
  <trustInfo>
    <security>
      <accessControl>
        <securityDescriptorDefinitions>
          <securityDescriptorDefinition name="WRP_FILE_DEFAULT_SDDL" sddl="O:S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464G:S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464D:P(A;;FA;;;S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464)(A;;GRGX;;;BA)(A;;GRGX;;;SY)(A;;GRGX;;;BU)(A;;GRGX;;;S-1-15-2-1)(A;;GRGX;;;S-1-15-2-2)S:(AU;FASA;0x000D0116;;;WD)" operationHint="replace" description="Default SDDL for Windows Resource Protected file" />
        </securityDescriptorDefinitions>
      </accessControl>
    </security>
  </trustInfo>
</assembly>