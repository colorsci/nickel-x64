<?xml version="1.0" encoding="utf-8"?>
<PowerShellMetadata xmlns="http://schemas.microsoft.com/cmdlets-over-objects/2009/11">
  <Class ClassName="root/Microsoft/Windows/ServerManager/MSFT_ServerManagerTasks" ClassVersion="1.0.0">
    <Version>1.0</Version>
    <DefaultNoun>ServerManagerTasks</DefaultNoun>
    <StaticCmdlets>
      <!-- Retrieves the performance counter samples logged by a Data Collector Set in Performance Logs & Alerts at the specified time stamps or in a particular time range. -->
      <Cmdlet>
        <CmdletMetadata Verb="Get" Noun="CounterSample" DefaultCmdletParameterSet="InTimeRange" />
        <Method MethodName="GetCounterSamplesAtTime" CmdletParameterSet="AtTime">
          <ReturnValue>
            <Type PSType="System.Int32" />
            <CmdletOutputMetadata>
              <ErrorCode />
            </CmdletOutputMetadata>
          </ReturnValue>
          <Parameters>
            <!-- The name of the Data Collector Set in Performance Logs & Alerts. -->
            <Parameter ParameterName="CollectorName">
              <Type PSType="System.String" />
              <CmdletParameterMetadata IsMandatory="true" ValueFromPipelineByPropertyName="true">
                <ValidateNotNull />
                <ValidateNotNullOrEmpty />
              </CmdletParameterMetadata>
            </Parameter>
            <!-- The list of performance counters to query in the performance log file. -->
            <Parameter ParameterName="CounterPaths">
              <Type PSType="System.String[]" />
              <CmdletParameterMetadata PSName="CounterPath" IsMandatory="true" ValueFromPipelineByPropertyName="true">
                <ValidateNotNull />
                <ValidateNotNullOrEmpty />
              </CmdletParameterMetadata>
            </Parameter>
            <!-- The list of timestamps to filter the performance counter samples. -->
            <Parameter ParameterName="Timestamps">
              <Type PSType="System.DateTime[]" />
              <CmdletParameterMetadata PSName="Timestamp" IsMandatory="true" ValueFromPipeline="true">
                <ValidateNotNull />
                <ValidateNotNullOrEmpty />
              </CmdletParameterMetadata>
            </Parameter>
            <!-- The batch size to use for streaming data back to the client. -->
            <Parameter ParameterName="BatchSize">
              <Type PSType="System.UInt32" />
              <CmdletParameterMetadata />
            </Parameter>
            <!-- The selected performance counter samples. -->
            <Parameter ParameterName="cmdletOutput">
              <Type PSType="Microsoft.Management.Infrastructure.CimInstance[]" ETSType="Microsoft.Management.Infrastructure.CimInstance#MSFT_ServerPerformanceCounterSamples" />
              <CmdletOutputMetadata />
            </Parameter>
          </Parameters>
        </Method>
        <Method MethodName="GetCounterSamplesInTimeRange" CmdletParameterSet="InTimeRange">
          <ReturnValue>
            <Type PSType="System.Int32" />
            <CmdletOutputMetadata>
              <ErrorCode />
            </CmdletOutputMetadata>
          </ReturnValue>
          <Parameters>
            <!-- The name of the Data Collector Set in Performance Logs & Alerts. -->
            <Parameter ParameterName="CollectorName">
              <Type PSType="System.String" />
              <CmdletParameterMetadata IsMandatory="true" ValueFromPipelineByPropertyName="true">
                <ValidateNotNull />
                <ValidateNotNullOrEmpty />
              </CmdletParameterMetadata>
            </Parameter>
            <!-- The list of performance counters to query in the performance log file. -->
            <Parameter ParameterName="CounterPaths">
              <Type PSType="System.String[]" />
              <CmdletParameterMetadata PSName="CounterPath" IsMandatory="true" ValueFromPipelineByPropertyName="true">
                <ValidateNotNull />
                <ValidateNotNullOrEmpty />
              </CmdletParameterMetadata>
            </Parameter>
            <!-- The start boundary of the time range. -->
            <Parameter ParameterName="StartTime">
              <Type PSType="System.DateTime" />
              <CmdletParameterMetadata />
            </Parameter>
            <!-- The end boundary of the time range. -->
            <Parameter ParameterName="EndTime">
              <Type PSType="System.DateTime" />
              <CmdletParameterMetadata />
            </Parameter>
            <!-- The batch size to use for streaming data back to the client. -->
            <Parameter ParameterName="BatchSize">
              <Type PSType="System.UInt32" />
              <CmdletParameterMetadata />
            </Parameter>
            <!-- The selected performance counter samples. -->
            <Parameter ParameterName="cmdletOutput">
              <Type PSType="Microsoft.Management.Infrastructure.CimInstance[]" ETSType="Microsoft.Management.Infrastructure.CimInstance#MSFT_ServerPerformanceCounterSamples" />
              <CmdletOutputMetadata />
            </Parameter>
          </Parameters>
        </Method>
      </Cmdlet>
      <!-- Retrieves the state of a Data Collector Set in Performance Logs & Alerts. -->
      <Cmdlet>
        <CmdletMetadata Verb="Get" Noun="PerformanceCollector" />
        <Method MethodName="GetPerformanceCollectorState">
          <ReturnValue>
            <Type PSType="System.Int32" />
            <CmdletOutputMetadata>
              <ErrorCode />
            </CmdletOutputMetadata>
          </ReturnValue>
          <Parameters>
            <!-- The name of the Data Collector Set in Performance Logs & Alerts. -->
            <Parameter ParameterName="CollectorName">
              <Type PSType="System.String" />
              <CmdletParameterMetadata IsMandatory="true" ValueFromPipelineByPropertyName="true">
                <ValidateNotNull />
                <ValidateNotNullOrEmpty />
              </CmdletParameterMetadata>
            </Parameter>
            <!-- The state of the data collector set in PLA. -->
            <Parameter ParameterName="cmdletOutput">
              <Type PSType="ServerManagerTasks.PerformanceCollectorState" />
              <CmdletOutputMetadata />
            </Parameter>
          </Parameters>
        </Method>
      </Cmdlet>
      <!-- Starts the Data Collector Set in Performance Logs & Alerts. -->
      <Cmdlet>
        <CmdletMetadata Verb="Start" Noun="PerformanceCollector" ConfirmImpact="Medium" />
        <Method MethodName="SetPerformanceCollectorState">
          <ReturnValue>
            <Type PSType="System.Int32" />
            <CmdletOutputMetadata>
              <ErrorCode />
            </CmdletOutputMetadata>
          </ReturnValue>
          <Parameters>
            <!-- The name of the Data Collector Set in Performance Logs & Alerts. -->
            <Parameter ParameterName="CollectorName">
              <Type PSType="System.String" />
              <CmdletParameterMetadata IsMandatory="true" ValueFromPipelineByPropertyName="true">
                <ValidateNotNull />
                <ValidateNotNullOrEmpty />
              </CmdletParameterMetadata>
            </Parameter>
            <!-- The required state of the Data Collector Set. -->
            <Parameter ParameterName="State" DefaultValue="Running">
              <Type PSType="ServerManagerTasks.PerformanceCollectorState" />
            </Parameter>
          </Parameters>
        </Method>
      </Cmdlet>
      <!-- Stops the Data Collector Set in Performance Logs & Alerts. -->
      <Cmdlet>
        <CmdletMetadata Verb="Stop" Noun="PerformanceCollector" ConfirmImpact="Medium" />
        <Method MethodName="SetPerformanceCollectorState">
          <ReturnValue>
            <Type PSType="System.Int32" />
            <CmdletOutputMetadata>
              <ErrorCode />
            </CmdletOutputMetadata>
          </ReturnValue>
          <Parameters>
            <!-- The name of the Data Collector Set in Performance Logs & Alerts. -->
            <Parameter ParameterName="CollectorName">
              <Type PSType="System.String" />
              <CmdletParameterMetadata IsMandatory="true" ValueFromPipelineByPropertyName="true">
                <ValidateNotNull />
                <ValidateNotNullOrEmpty />
              </CmdletParameterMetadata>
            </Parameter>
            <!-- The required state of the Data Collector Set. -->
            <Parameter ParameterName="State" DefaultValue="Stopped">
              <Type PSType="ServerManagerTasks.PerformanceCollectorState" />
            </Parameter>
          </Parameters>
        </Method>
      </Cmdlet>
      <!-- Retrieves the BPA model results from the server. -->
      <Cmdlet>
        <CmdletMetadata Verb="Get" Noun="ServerBpaResult" />
        <Method MethodName="GetServerBpaResult">
          <ReturnValue>
            <Type PSType="System.Int32" />
            <CmdletOutputMetadata>
              <ErrorCode />
            </CmdletOutputMetadata>
          </ReturnValue>
          <Parameters>
            <!-- The BPA paths to query. -->
            <Parameter ParameterName="BpaXPaths">
              <Type PSType="System.String[]" />
              <CmdletParameterMetadata PSName="BpaXPath" IsMandatory="true" ValueFromPipelineByPropertyName="true">
                <ValidateNotNull />
                <ValidateNotNullOrEmpty />
              </CmdletParameterMetadata>
            </Parameter>
            <!-- The batch size to stream results in. -->
            <Parameter ParameterName="BatchSize">
              <Type PSType="System.UInt32" />
              <CmdletParameterMetadata />
            </Parameter>
            <!-- The results selected by the specified BPA paths. -->
            <Parameter ParameterName="cmdletOutput">
              <Type PSType="Microsoft.Management.Infrastructure.CimInstance[]" ETSType="Microsoft.Management.Infrastructure.CimInstance#MSFT_ServerBpaResult" />
              <CmdletOutputMetadata />
            </Parameter>
          </Parameters>
        </Method>
      </Cmdlet>
      <!-- Retrieves the access names and name of all the nodes in the cluster. -->
      <Cmdlet>
        <CmdletMetadata Verb="Get" Noun="ServerClusterName" />
        <Method MethodName="GetServerClusterName">
          <ReturnValue>
            <Type PSType="System.Int32" />
            <CmdletOutputMetadata>
              <ErrorCode />
            </CmdletOutputMetadata>
          </ReturnValue>
          <Parameters>
            <!-- The list of cluster names. -->
            <Parameter ParameterName="cmdletOutput">
              <Type PSType="System.String[]" />
              <CmdletOutputMetadata />
            </Parameter>
          </Parameters>
        </Method>
      </Cmdlet>
      <!-- Retrieves the details of events generated in an event log by a particular source. -->
      <Cmdlet>
        <CmdletMetadata Verb="Get" Noun="ServerEvent" />
        <Method MethodName="GetServerEventDetail">
          <ReturnValue>
            <Type PSType="System.Int32" />
            <CmdletOutputMetadata>
              <ErrorCode />
            </CmdletOutputMetadata>
          </ReturnValue>
          <Parameters>
            <!-- The list of logs to query when collecting events. -->
            <Parameter ParameterName="Logs">
              <Type PSType="System.String[]" />
              <CmdletParameterMetadata PSName="Log" ValueFromPipelineByPropertyName="true" />
            </Parameter>
            <!-- An array of bitmasks that specify the level of events to query. -->
            <Parameter ParameterName="Levels">
              <Type PSType="ServerManagerTasks.EventLevelFlag[]" />
              <CmdletParameterMetadata PSName="Level" ValueFromPipelineByPropertyName="true">
                <ValidateNotNull />
                <ValidateNotNullOrEmpty />
              </CmdletParameterMetadata>
            </Parameter>
            <!-- The list of start times used to filter the events based on the log time. -->
            <Parameter ParameterName="StartTimes">
              <Type PSType="System.UInt64[]" />
              <CmdletParameterMetadata PSName="StartTime" />
            </Parameter>
            <!-- The list of end times used to filter the events based on the logged time. -->
            <Parameter ParameterName="EndTimes">
              <Type PSType="System.UInt64[]" />
              <CmdletParameterMetadata PSName="EndTime" />
            </Parameter>
            <!-- The batch size to use for streaming data back to the client. -->
            <Parameter ParameterName="BatchSize">
              <Type PSType="System.UInt32" />
              <CmdletParameterMetadata />
            </Parameter>
            <!-- The list of query files to use when for collecting feature events. -->
            <Parameter ParameterName="QueryFiles">
              <Type PSType="System.String[]" />
              <CmdletParameterMetadata PSName="QueryFile" ValueFromPipelineByPropertyName="true" />
            </Parameter>
            <!-- The list of query file ids to return as the query file identifier in the event details object. If this is null or empty, the index of the file in the QueryFiles paramerter is returned. If present the number of elements should exactly match the number of elements in the QueryFiles parameter. -->
            <Parameter ParameterName="QueryFileIds">
              <Type PSType="System.Int32[]" />
              <CmdletParameterMetadata PSName="QueryFileId" ValueFromPipelineByPropertyName="true" />
            </Parameter>
            <!-- The log time of the latest event returned by the function. -->
            <Parameter ParameterName="LatestEventTimestamp">
              <Type PSType="System.UInt64" />
              <CmdletOutputMetadata />
            </Parameter>
            <!-- The list of selected events that match the specified criteria. -->
            <Parameter ParameterName="cmdletOutput">
              <Type PSType="Microsoft.Management.Infrastructure.CimInstance[]" ETSType="Microsoft.Management.Infrastructure.CimInstance#MSFT_ServerEventDetail" />
              <CmdletOutputMetadata />
            </Parameter>
          </Parameters>
        </Method>
      </Cmdlet>
      <!-- Gets the server features on the managed node. -->
      <Cmdlet>
        <CmdletMetadata Verb="Get" Noun="ServerFeature" />
        <Method MethodName="GetServerFeature">
          <ReturnValue>
            <Type PSType="System.Int32" />
            <CmdletOutputMetadata>
              <ErrorCode />
            </CmdletOutputMetadata>
          </ReturnValue>
          <Parameters>
            <!-- Return only features that are in a particular install state. -->
            <Parameter ParameterName="FilterFlags">
              <Type PSType="ServerManagerTasks.FeatureFilterFlag" />
              <CmdletParameterMetadata PSName="FilterFlag" />
            </Parameter>
            <!-- The batch size to stream results in. -->
            <Parameter ParameterName="BatchSize">
              <Type PSType="System.UInt32" />
              <CmdletParameterMetadata />
            </Parameter>
            <!-- Flag indicating whether a reboot required status is reported by CBS. -->
            <Parameter ParameterName="RequiresReboot">
              <Type PSType="System.Boolean" />
              <CmdletOutputMetadata />
            </Parameter>
            <!-- The requested list of features. -->
            <Parameter ParameterName="cmdletOutput">
              <Type PSType="Microsoft.Management.Infrastructure.CimInstance[]" ETSType="Microsoft.Management.Infrastructure.CimInstance#MSFT_ServerFeature" />
              <CmdletOutputMetadata />
            </Parameter>
          </Parameters>
        </Method>
      </Cmdlet>
      <!-- Retrieves the basic inventory information of the server. -->
      <Cmdlet>
        <CmdletMetadata Verb="Get" Noun="ServerInventory" />
        <Method MethodName="GetServerInventory">
          <ReturnValue>
            <Type PSType="System.Int32" />
            <CmdletOutputMetadata>
              <ErrorCode />
            </CmdletOutputMetadata>
          </ReturnValue>
          <Parameters>
            <!-- Optional parameter specifying the name used in the server manager to add the managed node. -->
            <Parameter ParameterName="SMServerId">
              <Type PSType="System.String" />
              <CmdletParameterMetadata PSName="ComputerName" Aliases="CN" />
            </Parameter>
            <!-- The miscellaneous inventory information of the server. -->
            <Parameter ParameterName="ServerInventory">
              <Type PSType="Microsoft.Management.Infrastructure.CimInstance" ETSType="Microsoft.Management.Infrastructure.CimInstance#MSFT_ServerInventory" />
              <CmdletOutputMetadata />
            </Parameter>
            <!-- The operating system details of the server. -->
            <Parameter ParameterName="OperatingSystem">
              <Type PSType="Microsoft.Management.Infrastructure.CimInstance" ETSType="Microsoft.Management.Infrastructure.CimInstance#MSFT_ServerOperatingSystem" />
              <CmdletOutputMetadata />
            </Parameter>
            <!-- The cluster information of the server. -->
            <Parameter ParameterName="ClusterInformation">
              <Type PSType="Microsoft.Management.Infrastructure.CimInstance" ETSType="Microsoft.Management.Infrastructure.CimInstance#MSFT_ServerClusterInformation" />
              <CmdletOutputMetadata />
            </Parameter>
            <!-- The list of network adapters installed on the server. -->
            <Parameter ParameterName="NetworkAdapters">
              <Type PSType="Microsoft.Management.Infrastructure.CimInstance[]" ETSType="Microsoft.Management.Infrastructure.CimInstance#MSFT_ServerNetworkAdapter" />
              <CmdletOutputMetadata />
            </Parameter>
            <!-- The list of event logs installed on the server. -->
            <Parameter ParameterName="EventLogs">
              <Type PSType="Microsoft.Management.Infrastructure.CimInstance[]" ETSType="Microsoft.Management.Infrastructure.CimInstance#MSFT_ServerEventLog" />
              <CmdletOutputMetadata />
            </Parameter>
          </Parameters>
        </Method>
      </Cmdlet>
      <!-- Retrieves the details of the specified win32 services on the managed node. -->
      <Cmdlet>
        <CmdletMetadata Verb="Get" Noun="ServerService" />
        <Method MethodName="GetServerServiceDetail">
          <ReturnValue>
            <Type PSType="System.Int32" />
            <CmdletOutputMetadata>
              <ErrorCode />
            </CmdletOutputMetadata>
          </ReturnValue>
          <Parameters>
            <!-- The list of services to query on the managed node. -->
            <Parameter ParameterName="Services">
              <Type PSType="System.String[]" />
              <CmdletParameterMetadata PSName="Service"/>
            </Parameter>
            <!-- The batch size for streamed results. -->
            <Parameter ParameterName="BatchSize">
              <Type PSType="System.UInt32" />
              <CmdletParameterMetadata />
            </Parameter>
            <!-- The details regarding the list of win32 services selected from server. -->
            <Parameter ParameterName="cmdletOutput">
              <Type PSType="Microsoft.Management.Infrastructure.CimInstance[]" ETSType="Microsoft.Management.Infrastructure.CimInstance#MSFT_ServerServiceDetail" />
              <CmdletOutputMetadata />
            </Parameter>
          </Parameters>
        </Method>
      </Cmdlet>
      <!-- Remove the log file for a data collector set that are older than a given threshold. -->
      <Cmdlet>
        <CmdletMetadata Verb="Remove" Noun="ServerPerformanceLog" ConfirmImpact="High" />
        <Method MethodName="RemoveServerPerformanceLog">
          <ReturnValue>
            <Type PSType="System.Int32" />
            <CmdletOutputMetadata>
              <ErrorCode />
            </CmdletOutputMetadata>
          </ReturnValue>
          <Parameters>
            <!-- "The data collector set name." -->
            <Parameter ParameterName="CollectorName">
              <Type PSType="System.String" />
              <CmdletParameterMetadata IsMandatory="true" ValueFromPipelineByPropertyName="true">
                <ValidateNotNull />
                <ValidateNotNullOrEmpty />
              </CmdletParameterMetadata>
            </Parameter>
            <!-- "The threshold to use when removing the log files." -->
            <Parameter ParameterName="MillisecondThreshold">
              <Type PSType="System.UInt64" />
              <CmdletParameterMetadata PSName="ThresholdMSec" />
            </Parameter>
          </Parameters>
        </Method>
      </Cmdlet>
    </StaticCmdlets>
  </Class>
  <Enums>
    <!-- Performance collector state Enum -->
    <Enum EnumName="ServerManagerTasks.PerformanceCollectorState" UnderlyingType="System.Byte">
      <Value Name="Stopped" Value="0" />
      <Value Name="Running" Value="1" />
    </Enum>
    <Enum EnumName="ServerManagerTasks.EventLevelFlag" BitwiseFlags="true" UnderlyingType="System.Byte">
      <Value Name="Critical" Value="1" />
      <Value Name="Error" Value="2" />
      <Value Name="Warning" Value="4" />
      <Value Name="Informational" Value="8" />
      <Value Name="All" Value="16" />
    </Enum>
    <Enum EnumName="ServerManagerTasks.FeatureFilterFlag" BitwiseFlags="true" UnderlyingType="System.UInt32">
      <Value Name="Available" Value="1" />
      <Value Name="Installed" Value="2" />
      <Value Name="UninstallPending" Value="4" />
      <Value Name="InstallPending" Value="8" />
      <Value Name="NotPresent" Value="16" />
      <Value Name="Removed" Value="32" />
      <Value Name="Unknown" Value="64" />
    </Enum>
  </Enums>
</PowerShellMetadata>
